{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://office-addin-taskpane-js/./src/taskpane/taskpane.js"],"sourcesContent":["// Variables globales pour la gestion de la vue et de l'interaction\nlet appState = {\n  currentScreen: \"welcome\" // \"welcome\", \"menu\", \"drilling\"\n};\nlet zoom = 1;\nlet panX = 0;\nlet panY = 0;\nlet isDragging = false;\nlet lastX = 0;\nlet lastY = 0;\nlet canvas, ctx;\nlet currentData = null;\nlet drillingPoints = [];\nlet hoveredItem = null;\nlet selectedItem = null;\nlet animationFrameId = null;\nlet tooltipElement;\nlet lastSelectedIndex = 0;\nlet selectionCycle = [];\nlet isInitialized = false;\nlet isPdfExportMode = false;\nlet isFirstClick = true; \nlet lastDataSnapshot = null; \nlet changeDetected = false; \nlet notificationCooldown = false; \n\n\n// Initialisation principale\nOffice.onReady(() => {\n  // Cache toutes les interfaces au départ\n  hideAllScreens();\n\n  // Affiche l'écran de bienvenue\n  showScreen(\"welcome\");\n\n  // Configure les événements\n  setupEventListeners();\n\n});\n\nfunction hideAllScreens() {\n  // Ces IDs doivent correspondre à ton HTML\n  const screens = [\"welcome-screen\", \"main-menu\", \"drilling-interface\",\"export-instructions\"];\n  screens.forEach((id) => {\n    const element = document.getElementById(id);\n    if (element) element.style.display = \"none\";\n  });\n}\n\nfunction showScreen(screenName) {\n  hideAllScreens();\n\n  appState.currentScreen = screenName;\n\n  switch (screenName) {\n    case \"welcome\":\n      document.getElementById(\"welcome-screen\").style.display = \"flex\";\n      break;\n    case \"menu\":\n      resetView();\n      document.getElementById(\"main-menu\").style.display = \"flex\";\n      break;\n    case \"drilling\":\n      document.getElementById(\"drilling-interface\").style.display = \"block\";\n      // Initialise le canvas si ce n'est pas déjà fait\n      if (!isInitialized) {\n        initEmptyCanvas();\n      }\n      break;\n    case \"export-instructions\": \n      document.getElementById(\"export-instructions\").style.display = \"flex\";\n      break;\n  }\n\n}\n\nfunction setupEventListeners() {\n  // Navigation\n  document.getElementById(\"start-btn\").addEventListener(\"click\", () => showScreen(\"menu\"));\n  document.getElementById(\"drilling-plan-btn\").addEventListener(\"click\", () => showScreen(\"drilling\"));\n  document.getElementById(\"back-to-menu\").addEventListener(\"click\", () => showScreen(\"menu\"));\n    document.getElementById(\"back-to-menu-btn\")?.addEventListener(\"click\", () => showScreen(\"menu\"));\n  \n\n\n\n  document.getElementById(\"generate-recenter-btn\").addEventListener(\"click\", generate2DPlanInTaskPane);\n  document.getElementById(\"place-drilling-btn\").addEventListener(\"click\", placeDrillingPoints);\n  document.getElementById(\"reset-view-btn\").addEventListener(\"click\", resetView);\n  document.getElementById(\"calculate-kits-btn\").addEventListener(\"click\", function() {\n    if (isFirstClick) {\n        isFirstClick = false;\n        setupDataChangeListener();\n    }\n    calculerMesKits();\n});\n  document.getElementById(\"prepare-pdf-btn\").addEventListener(\"click\", preparerExportPDF);\n  document.getElementById(\"finish-export-btn\").addEventListener(\"click\", retourAccueilEtMasquerAutresFeuilles);\n  document.getElementById(\"reset-project-btn\").addEventListener(\"click\", () => {\n      const confirmBox = document.getElementById(\"confirm-reset\");\n      confirmBox.style.display = \"flex\";\n  });\n\n    // Gestionnaires de confirmation de réinitialisation\n  document.getElementById(\"confirm-yes\").addEventListener(\"click\", async () => {\n        document.getElementById(\"confirm-reset\").style.display = \"none\";\n        await resetProjetComplet(); \n  });\n    \n  document.getElementById(\"confirm-no\").addEventListener(\"click\", () => {\n        document.getElementById(\"confirm-reset\").style.display = \"none\";\n  });\n \n;\n}\n\n\nasync function resetProjetComplet() {\n    const confirmBox = document.getElementById(\"confirm-reset\");\n    const resetBtn = document.getElementById(\"reset-project-btn\");\n    const originalBtnText = resetBtn.textContent;\n    const originalBtnClass = resetBtn.className;\n    const originalBtnColor = resetBtn.style.backgroundColor;\n    let feuilleFeuil1Deverrouillee = false;\n    \n    try {\n        confirmBox.style.display = \"none\";\n        \n        resetBtn.disabled = true;\n        resetBtn.classList.add(\"disabled\");\n        resetBtn.style.backgroundColor = \"#cccccc\";\n        resetBtn.textContent = \"Réinitialisation en cours...\";\n        \n        await Excel.run(async (context) => {\n            const sheets = context.workbook.worksheets;\n            \n            // Déverrouiller Feuil1 avant les modifications\n            const feuille1 = sheets.getItem(\"Feuil1\");\n            feuille1.load(\"protection/protected\");\n            await context.sync();\n            \n            if (feuille1.protection.protected) {\n                await setSheetProtection(\"Feuil1\", false, \"Gp4r!74.\");\n                feuilleFeuil1Deverrouillee = true;\n            }\n            \n            // Solution robuste pour ACCUEIL (préserve absolument tout sauf les valeurs)\n            const accueilSheet = sheets.getItem(\"ACCUEIL\");\n            const accueilRange = accueilSheet.getRange(\"B13:I150\");\n            const accueilRangeD2D6 = accueilSheet.getRange(\"D2:D6\"); \n            \n            // 1. Sauvegarder les validations de données\n            accueilRange.load(\"dataValidation\");\n            accueilRangeD2D6.load(\"dataValidation\"); \n            await context.sync();\n            \n            // 2. Effacer seulement les valeurs et formats\n            accueilRange.clear(Excel.ClearApplyTo.contents); // Efface seulement le contenu\n            accueilRange.clear(Excel.ClearApplyTo.formats);  // Efface les formats\n            accueilRangeD2D6.clear(Excel.ClearApplyTo.contents);\n            \n            // 3. Réappliquer les validations si elles existaient\n            if (accueilRange.dataValidation) {\n                accueilRange.dataValidation = accueilRange.dataValidation;\n            }\n            \n            // Pour Feuil1, méthode standard\n            const feuille1Sheet = sheets.getItem(\"Feuil1\");\n            feuille1Sheet.getRange(\"A37:B170\").clear(Excel.ClearApplyTo.all);\n            feuille1Sheet.getRange(\"F37:J170\").clear(Excel.ClearApplyTo.all);\n            \n            await context.sync();\n        });\n        \n        if (feuilleFeuil1Deverrouillee) {\n            await setSheetProtection(\"Feuil1\", true, \"Gp4r!74.\");\n            feuilleFeuil1Deverrouillee = false;\n        }\n        \n        resetBtn.classList.remove(\"disabled\");\n        resetBtn.classList.add(\"success\");\n        resetBtn.style.backgroundColor = \"#28a745\";\n        resetBtn.innerHTML = \"✓ Réinitialisation réussie\";\n        \n        setTimeout(() => {\n            resetBtn.disabled = false;\n            resetBtn.style.backgroundColor = originalBtnColor;\n            resetBtn.className = originalBtnClass;\n            resetBtn.textContent = originalBtnText;\n        }, 3000);\n        \n    } catch (error) {\n        console.error(\"Échec de la réinitialisation:\", error);\n        \n        if (feuilleFeuil1Deverrouillee) {\n            try {\n                await setSheetProtection(\"Feuil1\", true, \"Gp4r!74.\");\n            } catch (verrouillageError) {\n                console.error(\"Erreur lors du reverrouillage d'urgence de Feuil1:\", verrouillageError);\n            }\n        }\n        \n        resetBtn.classList.remove(\"disabled\");\n        resetBtn.classList.add(\"error\");\n        resetBtn.style.backgroundColor = \"#dc3545\"\n        resetBtn.innerHTML = \"✗ Échec de la réinitialisation\";\n        resetBtn.disabled = false;\n        \n        setTimeout(() => {\n            resetBtn.style.backgroundColor = originalBtnColor;\n            resetBtn.className = originalBtnClass;\n            resetBtn.textContent = originalBtnText;\n        }, 3000);\n    }\n}\n\nasync function resetProjetComplet2() {\n    const confirmBox = document.getElementById(\"confirm-reset\");\n    const resetBtn = document.getElementById(\"reset-project-btn\");\n    const originalBtnText = resetBtn.textContent;\n    const originalBtnClass = resetBtn.className;\n    const originalBtnColor = resetBtn.style.backgroundColor;\n    \n    try {\n        // Fermer la boîte de confirmation\n        confirmBox.style.display = \"none\";\n        \n        // Mettre à jour le bouton principal\n        resetBtn.disabled = true;\n        resetBtn.classList.add(\"disabled\");\n        resetBtn.style.backgroundColor = \"#cccccc\";\n        resetBtn.textContent = \"Réinitialisation en cours...\";\n        \n        await Excel.run(async (context) => {\n            const sheets = context.workbook.worksheets;\n            \n            // Nettoyer les autres feuilles\n            const sheetsToClear = {\n                \"ACCUEIL\": [\"B13:I150\"],\n                \"Feuil1\": [\"A37:B170\", \"F37:J170\"]\n            };\n            \n            for (const sheetName in sheetsToClear) {\n                if (sheetsToClear.hasOwnProperty(sheetName)) {\n                    const sheet = sheets.getItem(sheetName);\n                    for (const range of sheetsToClear[sheetName]) {\n                        sheet.getRange(range).clear(Excel.ClearApplyTo.all);\n                    }\n                }\n            }\n            \n            await context.sync();\n        });\n        \n        // Feedback visuel de succès\n        resetBtn.classList.remove(\"disabled\");\n        resetBtn.classList.add(\"success\");\n        resetBtn.style.backgroundColor = \"#28a745\";\n        resetBtn.innerHTML = \"✓ Réinitialisation réussie\";\n        \n        // Revenir à l'état normal après 3 secondes\n        setTimeout(() => {\n            resetBtn.disabled = false;\n            resetBtn.style.backgroundColor = originalBtnColor;\n            resetBtn.className = originalBtnClass;\n            resetBtn.textContent = originalBtnText;\n        }, 3000);\n        \n    } catch (error) {\n        console.error(\"Échec de la réinitialisation:\", error);\n        \n        // Feedback visuel d'erreur\n        resetBtn.classList.remove(\"disabled\");\n        resetBtn.classList.add(\"error\");\n        resetBtn.style.backgroundColor = \"#dc3545\"\n        resetBtn.innerHTML = \"✗ Échec de la réinitialisation\";\n        resetBtn.disabled = false;\n        \n        // Revenir à l'état normal après 3 secondes\n        setTimeout(() => {\n            resetBtn.style.backgroundColor = originalBtnColor;\n            resetBtn.className = originalBtnClass;\n            resetBtn.textContent = originalBtnText;\n        }, 3000);\n    }\n}\n\n\nasync function retourAccueilEtMasquerAutresFeuilles() {\n  try {\n    await Excel.run(async (context) => {\n      const sheets = context.workbook.worksheets;\n      sheets.load(\"items/name,items/visibility\");\n      await context.sync();\n\n      // Vérifie si ACCUEIL est masquée et l'affiche si nécessaire\n      const accueilSheet = sheets.getItem(\"ACCUEIL\");\n      accueilSheet.load(\"visibility\");\n      await context.sync();\n\n      if (accueilSheet.visibility !== \"Visible\") {\n        accueilSheet.visibility = \"Visible\";\n        await context.sync();\n      }\n\n      // Active ACCUEIL\n      accueilSheet.activate();\n      await context.sync();\n\n      // Masquer toutes les autres feuilles visibles\n      for (const sheet of sheets.items) {\n        if (sheet.name !== \"ACCUEIL\" && sheet.visibility === \"Visible\") {\n          sheet.visibility = \"Hidden\";\n        }\n      }\n\n      await context.sync();\n    });\n\n    // Affiche le menu (interface HTML/JS)\n    showScreen(\"menu\");\n\n  } catch (error) {\n    console.error(\"Erreur lors du retour à ACCUEIL :\", error);\n    showError(`Erreur : ${error.message}`);\n  }\n}\n\n\nasync function unhideSheetsExport(feuillesAAfficher) {\n  if (!feuillesAAfficher || !Array.isArray(feuillesAAfficher) || feuillesAAfficher.length === 0) {\n    throw new Error(\"Le paramètre feuillesAAfficher doit être un tableau non vide\");\n  }\n\n  try {\n    await Excel.run(async (context) => {\n      // 1. Charger la liste de toutes les feuilles existantes\n      const allSheets = context.workbook.worksheets;\n      allSheets.load(\"items/name\");\n      await context.sync();\n      \n      // 2. Filtrer pour ne garder que les feuilles existantes\n      const existingSheets = allSheets.items.map(sheet => sheet.name);\n      const sheetsToProcess = feuillesAAfficher.filter(name => existingSheets.includes(name));\n      \n      // 3. Afficher les feuilles concernées\n      sheetsToProcess.forEach(sheetName => {\n        const sheet = context.workbook.worksheets.getItem(sheetName);\n        sheet.visibility = \"Visible\";\n      });\n      \n      await context.sync();\n      \n      // 4. Optionnel: logger les feuilles manquantes\n      const missingSheets = feuillesAAfficher.filter(name => !existingSheets.includes(name));\n      if (missingSheets.length > 0) {\n        console.warn(\"Feuilles non trouvées:\", missingSheets);\n      }\n    });\n  } catch (error) {\n    console.error(\"Erreur dans unhideSheetsExport:\", error);\n    throw error;\n  }\n}\n\n// Fonction pour vérifier si une feuille est visible\nasync function isSheetVisible(sheetName) {\n  try {\n    let isVisible = false;\n    await Excel.run(async (context) => {\n      const sheet = context.workbook.worksheets.getItem(sheetName);\n      sheet.load('visibility');\n      await context.sync();\n      isVisible = sheet.visibility === \"Visible\";\n    });\n    return isVisible;\n  } catch (error) {\n    console.error(`Erreur lors de la vérification de la visibilité de ${sheetName}:`, error);\n    return false;\n  }\n}\n\n// Fonction pour masquer toutes les feuilles sauf une spécifique\nasync function hideAllSheetsExcept(sheetsToKeepVisible) {\n  try {\n    await Excel.run(async (context) => {\n      const sheets = context.workbook.worksheets;\n      sheets.load('items/name,items/visibility');\n      await context.sync();\n\n      // 🔄 Activer une des feuilles visibles pour éviter l’erreur\n      const sheetToActivate = sheets.items.find(sheet => sheetsToKeepVisible.includes(sheet.name));\n      if (sheetToActivate) {\n        sheetToActivate.activate();\n        await context.sync();\n      }\n\n      for (const sheet of sheets.items) {\n        if (!sheetsToKeepVisible.includes(sheet.name) && sheet.visibility === \"Visible\") {\n          sheet.visibility = \"Hidden\";\n        }\n      }\n      await context.sync();\n    });\n  } catch (error) {\n    console.error(\"Erreur lors du masquage des feuilles:\", error);\n    throw error;\n  }\n}\n\n\n\n// Fonctions masquer/afficher généralisées\nfunction hide(sheetName) {\n  Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(sheetName);\n    sheet.visibility = \"Hidden\";\n    await context.sync();\n    console.log(`${sheetName} masquée`);\n  }).catch((error) => {\n    console.error(\"Erreur:\", error);\n  });\n}\n\nfunction unhide(sheetName) {\n  Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(sheetName);\n    sheet.visibility = \"Visible\";\n    await context.sync();\n    console.log(`${sheetName} affichée`);\n  }).catch((error) => {\n    console.error(\"Erreur:\", error);\n  });\n}\n\n\n//*****************************************************************FONCTIONS CONFIRMEES**************************************************** */ \n\n\nfunction setupDataChangeListener() {\n    // Initialisation de la surveillance\n    Excel.run(async (context) => {\n        const sheet = context.workbook.worksheets.getItem(\"ACCUEIL\");\n        const range = sheet.getRange(\"B13:H120\");\n        range.load(\"values\");\n        \n        await context.sync();\n        lastDataSnapshot = JSON.stringify(range.values);\n        \n        // Surveillance continue\n        setInterval(async () => {\n            if (notificationCooldown) return;\n            \n            try {\n                await Excel.run(async (context) => {\n                    const currentRange = context.workbook.worksheets\n                        .getItem(\"ACCUEIL\")\n                        .getRange(\"B13:H120\");\n                    currentRange.load(\"values\");\n                    \n                    await context.sync();\n                    const currentData = JSON.stringify(currentRange.values);\n                    \n                    if (currentData !== lastDataSnapshot && !changeDetected) {\n                        changeDetected = true;\n                        showDataChangeNotification();\n                        lastDataSnapshot = currentData;\n                    }\n                });\n            } catch (error) {\n                console.log(\"Erreur de surveillance :\", error);\n            }\n        }, 5000); // Vérification toutes les 5 secondes\n    });\n}\n\nfunction showDataChangeNotification() {\n    // Style amélioré avec transparence\n    const notification = document.createElement(\"div\");\n    notification.innerHTML = `\n        <div style=\"\n            position: fixed;\n            top: 20px;\n            right: 20px;\n            background-color: rgba(248, 154, 23, 0.77);\n            backdrop-filter: blur(6px);\n            color: white;\n            padding: 12px 40px 12px 20px;\n            border-radius: 6px;\n            z-index: 1000;\n            font-family: 'Segoe UI', sans-serif;\n            font-size: 14px;\n            font-weight: 500;\n            box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n            border: 1px solid rgba(255,255,255,0.2);\n            animation: gentleFadeIn 0.3s ease-out;\n            max-width: 320px;\n            line-height: 1.4;\n        \">\n            <div style=\"display: flex; align-items: center; gap: 8px;\">\n                <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n                    <path d=\"M12 9v2m0 4h.01\"></path>\n                    <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\n                </svg>\n                <span>Modification détectée : veuillez actualiser les données en revenant à l'étape 1</span>\n            </div>\n            <div class=\"close-btn\" style=\"\n                position: absolute;\n                top: 10px;\n                right: 10px;\n                width: 16px;\n                height: 16px;\n                cursor: pointer;\n                opacity: 0.8;\n                transition: all 0.2s;\n                font-size: 18px;\n                line-height: 16px;\n                text-align: center;\n            \">×</div>\n        </div>\n    `;\n\n    // Animation discrète\n    const style = document.createElement(\"style\");\n    style.textContent = `\n        @keyframes gentleFadeIn {\n            from { opacity: 0; transform: translateY(10px) scale(0.98); }\n            to { opacity: 1; transform: translateY(0) scale(1); }\n        }\n    `;\n    document.head.appendChild(style);\n\n    document.body.appendChild(notification);\n\n    // Gestion intelligente de la fermeture\n    const closeBtn = notification.querySelector(\".close-btn\");\n    \n    closeBtn.addEventListener(\"click\", () => {\n        notification.style.opacity = \"0\";\n        setTimeout(() => notification.remove(), 300);\n    });\n    \n    closeBtn.addEventListener(\"mouseenter\", () => {\n        closeBtn.style.opacity = \"1\";\n        closeBtn.style.transform = \"scale(1.1)\";\n    });\n    \n    closeBtn.addEventListener(\"mouseleave\", () => {\n        closeBtn.style.opacity = \"0.8\";\n        closeBtn.style.transform = \"scale(1)\";\n    });\n\n    // Disparition automatique après 8 secondes\n    setTimeout(() => {\n        if (notification.parentNode) {\n            notification.style.opacity = \"0\";\n            setTimeout(() => notification.remove(), 300);\n        }\n    }, 8000);\n\n    // Anti-spam (pas de nouvelle notification avant 30s)\n    notificationCooldown = true;\n    setTimeout(() => {\n        notificationCooldown = false;\n        changeDetected = false;\n    }, 30000);\n}\n\n\n// Fonction principale pour préparer l'export PDF\nasync function preparerExportPDF() {\n  const button = document.getElementById(\"prepare-pdf-btn\");\n  const originalText = button.textContent;\n  const originalBgColor = button.style.backgroundColor; // Sauvegarde la couleur originale\n  let feuilleTempExportDeverrouillee = false;\n  \n\n  const feuillesAAfficher = [\n    \"PDG\", \"Intro\", \"TempExportPlan\", \"TempExportComplet\", \n    \"P_KITS\", \"TempExport\", \"RecapPieces\", \"RecapTubes\"\n  ];\n\n  try {\n    // Animation du bouton (gris + texte)\n    button.disabled = true;\n    button.style.backgroundColor = \"#cccccc\";\n    button.textContent = \"Préparation en cours... merci de patienter\";\n\n\n    // Vérifier et gérer la visibilité de la feuille ACCUEIL\n    const accueilVisible = await isSheetVisible(\"ACCUEIL\");\n    \n    if (!accueilVisible) {\n      await unhide(\"ACCUEIL\"); // On affiche ACCUEIL si elle est cachée\n    }\n\n    // 1. Afficher et ordonner les feuilles\n    await unhideSheetsExport(feuillesAAfficher);\n    // 2. Masquer toutes les feuilles sauf celles à afficher\n    await hideAllSheetsExcept(feuillesAAfficher);\n\n    // Déverrouiller TempExport avant l'export\n    await setSheetProtection(\"TempExport\", false, \"Gp4r!74.\");\n    feuilleTempExportDeverrouillee = true;\n\n    // Exécution des exports\n    await FeuilleTempExport();\n\n    // Reverrouiller TempExport après l'export\n    await setSheetProtection(\"TempExport\", true, \"Gp4r!74.\");\n    feuilleTempExportDeverrouillee = false;\n\n    await exportCanvasToTemps();\n    \n    // Affichage des instructions\n    showScreen(\"export-instructions\");\n    \n  } catch (error) {\n    console.error(\"Erreur dans preparerExportPDF:\", error);\n\n    // En cas d'erreur, verrouiller TempExport si elle avait été déverrouillée\n    if (feuilleTempExportDeverrouillee) {\n      try {\n        await setSheetProtection(\"TempExport\", true, \"Gp4r!74.\");\n      } catch (verrouillageError) {\n        console.error(\"Erreur lors du reverrouillage d'urgence de TempExport:\", verrouillageError);\n      }\n    }\n\n    showError(`Erreur lors de la préparation du PDF : ${error.message}`);\n  } finally {\n    // Réinitialisation du bouton dans tous les cas (succès ou erreur)\n    button.disabled = false;\n    button.style.backgroundColor = originalBgColor; // Restaure la couleur originale\n    button.textContent = originalText;\n  }\n}\n\n\nasync function exportCanvasToTemps() {\n  const currentScreen = getCurrentScreen(\"menu\"); // Écran courant avant export\n\n  // Créer un overlay blanc temporaire pour masquer le processus\n  const overlay = document.createElement(\"div\");\n  overlay.style.cssText = `\n    position: fixed;\n    top: 0; left: 0;\n    width: 100vw;\n    height: 100vh;\n    background: white;\n    z-index: 9999;\n    display: none;\n  `;\n  document.body.appendChild(overlay);\n\n  try {\n\n    // 1. Préparation du canvas pour l'export\n    overlay.style.display = \"block\";\n\n    document.body.style.transition = \"none\";\n    showScreen(\"drilling\", false); // Changement d'écran sans animation\n    isPdfExportMode = true; // Active le mode export\n\n    // Réinitialiser l'état du canvas avant chaque export\n    initInteractiveCanvas();\n\n    // PREMIÈRE CAPTURE - PLAN SEULEMENT (TempExportPlan)\n    await generate2DPlanInTaskPane();\n    await new Promise((resolve) => requestAnimationFrame(() => requestAnimationFrame(resolve)));\n\n    const exportCanvasPlan = document.createElement(\"canvas\");\n    exportCanvasPlan.width = 1020;\n    exportCanvasPlan.height = 700;\n    const exportCtxPlan = exportCanvasPlan.getContext(\"2d\");\n    exportCtxPlan.imageSmoothingEnabled = true;\n    exportCtxPlan.drawImage(canvas, 0, 0);\n    const imageDataPlan = exportCanvasPlan.toDataURL(\"image/png\");\n\n    // DEUXIÈME CAPTURE - PLAN + POINTS (TempExportComplet)\n    // Réinitialiser à nouveau pour s'assurer qu'on part d'un état propre\n    initInteractiveCanvas();\n    await generate2DPlanInTaskPane();\n    await placeDrillingPoints();\n    await new Promise((resolve) => requestAnimationFrame(() => requestAnimationFrame(resolve)));\n\n    const exportCanvasPoints = document.createElement(\"canvas\");\n    exportCanvasPoints.width = 1020;\n    exportCanvasPoints.height = 700;\n    const exportCtxPoints = exportCanvasPoints.getContext(\"2d\");\n    exportCtxPoints.imageSmoothingEnabled = true;\n    exportCtxPoints.drawImage(canvas, 0, 0);\n    const imageDataPoints = exportCanvasPoints.toDataURL(\"image/png\");\n\n    // 3. Insertion dans Excel\n    await Excel.run(async (context) => {\n      // TempExportPlan - Plan seulement\n      const sheet3 = context.workbook.worksheets.getItem(\"TempExportPlan\");\n      const shapes3 = sheet3.shapes;\n      shapes3.load(\"items\");\n      await context.sync();\n      shapes3.items.forEach((shape) => shape.delete());\n      sheet3.shapes.addImage(imageDataPlan.split(\",\")[1], {\n        left: 0,\n        top: 0,\n        width: 842,\n        height: 595\n      });\n\n      // TempExportComplet - Plan + points\n      const sheet5 = context.workbook.worksheets.getItem(\"TempExportComplet\");\n      const shapes5 = sheet5.shapes;\n      shapes5.load(\"items\");\n      await context.sync();\n      shapes5.items.forEach((shape) => shape.delete());\n      sheet5.shapes.addImage(imageDataPoints.split(\",\")[1], {\n        left: 0,\n        top: 0,\n        width: 842,\n        height: 595\n      });\n\n      await context.sync();\n    });\n\n    // 4. Retour à l'écran initial si nécessaire\n    if (currentScreen === \"menu\") {\n      showScreen(\"menu\", false);\n    }\n  } catch (error) {\n    console.error(\"Export failed:\", error);\n    showError(`Erreur d'export : ${error.message}`);\n  } finally {\n    // 5. Réinitialisation de l'état et de l'UI\n    isPdfExportMode = false;\n    initInteractiveCanvas();\n\n    document.body.style.transition = \"\";\n    overlay.remove();\n  }\n}\n\nfunction getCurrentScreen() {\n  if (document.getElementById(\"welcome-screen\").style.display !== \"none\") return \"welcome\";\n  if (document.getElementById(\"main-menu\").style.display !== \"none\") return \"menu\";\n  if (document.getElementById(\"drilling-interface\").style.display !== \"none\") return \"drilling\";\n  return null;\n}\n\n\n//*****************************************************************FONCTIONS VALIDEES**************************************************** */ \nasync function FeuilleTempExport() {\n    try {\n        await Excel.run(async (context) => {\n            const workbook = context.workbook;\n            \n            // Récupérer les feuilles source et destination\n            const feuillesSource = [\"P_RONDS\", \"P_CCR\"];\n            const feuilleDest = workbook.worksheets.getItem(\"TempExport\");\n            \n            // Initialiser TempExport\n            feuilleDest.getUsedRange().clear();\n            feuilleDest.getRange(\"B:B\").columnWidth = 30;\n            \n            let currentRow = 1; // Commencer à la ligne 1\n            \n            for (const nomFeuille of feuillesSource) {\n                const feuilleSource = workbook.worksheets.getItem(nomFeuille);\n                \n                // Trouver la dernière ligne utilisée\n                const rangeUtilisee = feuilleSource.getUsedRange();\n                rangeUtilisee.load(\"rowCount\");\n                await context.sync();\n                \n                const lastRow = rangeUtilisee.rowCount;\n                \n                // Obtenir les valeurs de la colonne B (pour vérifier le contenu)\n                const colonneB = feuilleSource.getRange(`B5:B${lastRow}`);\n                colonneB.load(\"values\");\n                await context.sync();\n                \n                let i = 5;\n                while (i <= lastRow) {\n                    // Trouver le prochain bloc de 20 lignes avec du contenu en colonne B\n                    let blocValide = false;\n                    let endRow = i;\n                    \n                    // Vérifier les 20 prochaines lignes pour du contenu\n                    for (let j = 0; j < 20 && (i + j) <= lastRow; j++) {\n                        if (colonneB.values[j] && colonneB.values[j][0] !== \"\") {\n                            blocValide = true;\n                            endRow = i + j;\n                        }\n                    }\n                    \n                    if (!blocValide) {\n                        i += 20;\n                        continue;\n                    }\n                    \n                    // Ajuster endRow pour couvrir 20 lignes max\n                    endRow = Math.min(i + 19, lastRow);\n                    \n                    \n                    // 1. Premier bloc (C1:R4 + A:B + C:R)\n                    await copierBlocDonnees(\n                        context,\n                        feuilleSource,\n                        feuilleDest,\n                        \"C1:R4\",\n                        `A${i}:B${endRow}`,\n                        `C${i}:R${endRow}`,\n                        currentRow\n                    );\n                    \n                    currentRow += 27;\n                    \n                    // 2. Deuxième bloc (S1:AH4 + A:B + S:AH)\n                    await copierBlocDonnees(\n                        context,\n                        feuilleSource,\n                        feuilleDest,\n                        \"S1:AH4\",\n                        `A${i}:B${endRow}`,\n                        `S${i}:AH${endRow}`,\n                        currentRow\n                    );\n                    \n                    currentRow += 25;\n                    i += 20;\n                }\n            }\n            \n            // Appliquer l'autofit à la colonne B\n            const colB = feuilleDest.getRange(\"B1\").getEntireColumn();\n            colB.format.autofitColumns();\n            \n            await context.sync();\n        });\n    } catch (error) {\n        console.error(\"❌ Erreur:\", error);\n        if (error instanceof OfficeExtension.Error) {\n            console.error(\"Détails:\", JSON.stringify(error.debugInfo));\n        }\n    }\n}\n\nasync function copierBlocDonnees(context, sourceSheet, destSheet, enTeteRange, donnees1Range, donnees2Range, currentRow) {\n    try {\n        // Charger les plages nécessaires\n        const sourceEntete = sourceSheet.getRange(enTeteRange);\n        const sourceDonnees1 = sourceSheet.getRange(donnees1Range);\n        const sourceDonnees2 = sourceSheet.getRange(donnees2Range);\n        \n        // Charger les propriétés\n        sourceEntete.load(\"rowCount, columnCount, format\");\n        sourceDonnees1.load(\"rowCount, format\");\n        sourceDonnees2.load(\"rowCount, columnCount, format\");\n        await context.sync();\n        \n        // 1. Copier l'en-tête (valeurs + formats)\n        const destEntete = destSheet.getRange(`C${currentRow}:R${currentRow + sourceEntete.rowCount - 1}`);\n        destEntete.copyFrom(sourceEntete, Excel.RangeCopyType.values, false, false);\n        destEntete.copyFrom(sourceEntete, Excel.RangeCopyType.formats, false, false);\n        \n        // 2. Copier les données colonnes A:B (valeurs + formats)\n        const destDonnees1 = destSheet.getRange(`A${currentRow + 4}:B${currentRow + 3 + sourceDonnees1.rowCount}`);\n        destDonnees1.copyFrom(sourceDonnees1, Excel.RangeCopyType.values, false, false);\n        destDonnees1.copyFrom(sourceDonnees1, Excel.RangeCopyType.formats, false, false);\n        \n        // 3. Copier les données colonnes C:R ou S:AH (valeurs + formats)\n        const destDonnees2 = destSheet.getRange(\n            `C${currentRow + 4}`,\n            String.fromCharCode(64 + sourceDonnees2.columnCount) + (currentRow + 3 + sourceDonnees2.rowCount)\n        );\n        destDonnees2.copyFrom(sourceDonnees2, Excel.RangeCopyType.values, false, false);\n        destDonnees2.copyFrom(sourceDonnees2, Excel.RangeCopyType.formats, false, false);\n        \n        await context.sync();\n    } catch (error) {\n        console.error(\"Erreur dans copierBlocDonnees:\", error);\n        throw error;\n    }\n}\n\nfunction addNumberToShape(ctx, shape, num, typeForme, orientation = \"\", suffix = \"\") {\n  // Récupération de la correspondance\n  let correspondance = \"?\";\n  const typeUpper = typeForme.toUpperCase().trim();\n\n  if (currentData.correspondances) {\n    for (let i = 0; i < currentData.correspondances.length; i++) {\n      if (currentData.correspondances[i].type.toUpperCase() === typeUpper) {\n        correspondance = currentData.correspondances[i].label;\n        break;\n      }\n    }\n  }\n\n  // Formatage avec saut de ligne\n  const prefixText = suffix ? `${num}.${suffix} - ` : `${num} - `;\n  const fullText = `${prefixText}\\n${correspondance}`;\n\n  ctx.save();\n\n  // Taille de police initiale\n  let fontSize = Math.max(8, 10 / zoom);\n  let lineHeight = fontSize * 1.1;\n\n  // Mesure des textes avec la taille initiale\n  ctx.font = `${fontSize}px Arial`;\n  const prefixWidth = ctx.measureText(prefixText).width;\n  const corrWidth = ctx.measureText(correspondance).width;\n  const maxTextWidth = Math.max(prefixWidth, corrWidth);\n\n  // Calcul de la largeur disponible en fonction de la forme\n  let availableWidth;\n  switch (shape.type) {\n    case \"rectangle\":\n      availableWidth = shape.width - 4; // Marge de 2px de chaque côté\n      break;\n    case \"circle\":\n      availableWidth = shape.width * 0.9; // 90% du diamètre\n      break;\n    case \"ccr\":\n      availableWidth = shape.width * 0.8 - 60; // 80% de la largeur moins marge d'orientation\n      break;\n    default:\n      availableWidth = shape.width * 0.8;\n  }\n\n  // Ajustement de la taille de police si nécessaire\n  if (maxTextWidth > availableWidth) {\n    const scaleFactor = availableWidth / maxTextWidth;\n    fontSize = Math.max(6, fontSize * scaleFactor * 0.9); // Ne pas descendre en dessous de 6px\n    lineHeight = fontSize * 1.1;\n    ctx.font = `${fontSize}px Arial`;\n  }\n\n  // Pour les cercles, on ne vérifie pas la hauteur\n  if (shape.type !== \"circle\") {\n    // Vérification de la hauteur disponible\n    const totalTextHeight = lineHeight * 2; // 2 lignes de texte\n    let availableHeight;\n\n    switch (shape.type) {\n      case \"rectangle\":\n        availableHeight = shape.height - 4;\n        break;\n      case \"ccr\":\n        availableHeight = shape.height * 0.8;\n        break;\n      default:\n        availableHeight = shape.height * 0.8;\n    }\n\n    if (totalTextHeight > availableHeight) {\n      const scaleFactor = availableHeight / totalTextHeight;\n      fontSize = Math.max(6, fontSize * scaleFactor * 0.9);\n      lineHeight = fontSize * 1.1;\n      ctx.font = `${fontSize}px Arial`;\n    }\n  }\n\n  // Positionnement\n  let posX = shape.x;\n  let posY = shape.y;\n  let textAlign = \"center\";\n  let textBaseline = \"middle\";\n\n  // Initialisation des variables de positionnement\n  let radiusVert = shape.width / 2;\n  let rectHeight = shape.height - 2 * radiusVert;\n  let radiusHorz = shape.height / 2;\n  let rectLength = shape.width - 2 * radiusHorz;\n\n  switch (shape.type) {\n    case \"rectangle\":\n      textAlign = \"left\";\n      textBaseline = \"top\";\n      posX = shape.x - shape.width / 2 + 2;\n      posY = shape.y - shape.height / 2 + 2;\n      break;\n    case \"circle\":\n      // Texte centré sur le cercle\n      break;\n    case \"ccr\":\n      const margin = Math.min(30, shape.width * 0.2); // Marge proportionnelle\n      switch (orientation) {\n        case \"Haut\":\n          radiusVert = shape.width / 2;\n          rectHeight = shape.height - 2 * radiusVert;\n          textAlign = \"center\";\n          textBaseline = \"bottom\";\n          posY = shape.y - rectHeight / 2 - margin;\n          break;\n        case \"Bas\":\n          radiusVert = shape.width / 2;\n          rectHeight = shape.height - 2 * radiusVert;\n          textAlign = \"center\";\n          textBaseline = \"top\";\n          posY = shape.y + rectHeight / 2 + margin;\n          break;\n        case \"Haut_et_bas\":\n          radiusVert = shape.width / 2;\n          rectHeight = shape.height - 2 * radiusVert;\n          textAlign = \"center\";\n          if (suffix === \"1\") {\n            textBaseline = \"bottom\";\n            posY = shape.y - rectHeight / 2 - margin;\n          } else {\n            textBaseline = \"top\";\n            posY = shape.y + rectHeight / 2 + margin;\n          }\n          break;\n        case \"Gauche\":\n          radiusHorz = shape.height / 2;\n          rectLength = shape.width - 2 * radiusHorz;\n          textAlign = \"right\";\n          textBaseline = \"middle\";\n          posX = shape.x - rectLength / 2 - margin / 2;\n          break;\n        case \"Droite\":\n          radiusHorz = shape.height / 2;\n          rectLength = shape.width - 2 * radiusHorz;\n          textAlign = \"left\";\n          textBaseline = \"middle\";\n          posX = shape.x + rectLength / 2 + margin / 2;\n          break;\n        case \"Droite_Gauche\":\n          radiusHorz = shape.height / 2;\n          rectLength = shape.width - 2 * radiusHorz;\n          textBaseline = \"middle\";\n          if (suffix === \"1\") {\n            textAlign = \"right\";\n            posX = shape.x - rectLength / 2 - margin / 2;\n          } else {\n            textAlign = \"left\";\n            posX = shape.x + rectLength / 2 + margin / 2;\n          }\n          break;\n      }\n      break;\n  }\n\n  // Dessin du texte NOIR (numéro et tiret)\n  ctx.textAlign = textAlign;\n  ctx.textBaseline = textBaseline;\n  ctx.fillStyle = \"#000\";\n  ctx.fillText(prefixText, posX, posY);\n\n  // Dessin du texte BLEU (correspondance) sur la ligne suivante\n  ctx.fillStyle = \"#0070C0\";\n  ctx.fillText(correspondance, posX, posY + lineHeight);\n\n  ctx.restore();\n}\n\nfunction drawAllShapes() {\n  if (!isInitialized || !currentData) return;\n\n  if (animationFrameId) {\n    cancelAnimationFrame(animationFrameId);\n  }\n\n  animationFrameId = requestAnimationFrame(() => {\n    if (!canvas || !ctx || !currentData) return;\n\n    // Clear et fond\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.fillStyle = isPdfExportMode ? \"#ffffff\" : \"#f8f8f8\";\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n    // Transformations\n    ctx.save();\n    ctx.translate(panX, panY);\n    ctx.scale(zoom, zoom);\n\n    const scale = 2;\n    const maxY = canvas.height - 100;\n    const Ecart45Points = 5 * scale;\n\n    // Dessin des formes\n    currentData.shapes.forEach((type, i) => {\n      if (!type) return;\n\n      const numero = currentData.numbers[i] || i + 1;\n      const width = parseFloat(currentData.widths[i]) * scale;\n      const height = parseFloat(currentData.heights[i]) * scale;\n      const centerX = parseFloat(currentData.centersX[i]) * scale + 50;\n      const centerY = maxY - parseFloat(currentData.centersY[i]) * scale;\n      const orientation = currentData.orientations[i] || \"\";\n\n      if (isNaN(width) || isNaN(height)) return;\n\n      const isHovered = hoveredItem?.type === \"shape\" && hoveredItem.index === i;\n      const isSelected = selectedItem?.type === \"shape\" && selectedItem.index === i;\n\n      // Style\n      ctx.strokeStyle = isSelected ? \"#0066cc\" : isHovered ? \"#0099ff\" : \"#000\";\n      ctx.lineWidth = (isSelected ? 3 : isHovered ? 2 : 1.5) / zoom;\n      ctx.fillStyle = isSelected ? \"rgba(0, 102, 204, 0.1)\" : isHovered ? \"rgba(0, 153, 255, 0.05)\" : \"transparent\";\n\n      // Rectangles\n      if (type.match(/KB|KCV|KCH|KCVH|KS3P|KSDH/)) {\n        ctx.beginPath();\n        ctx.rect(centerX - width / 2, centerY - height / 2, width, height);\n        ctx.fill();\n        ctx.stroke();\n\n        addNumberToShape(ctx, { type: \"rectangle\", x: centerX, y: centerY, width, height }, numero, type);\n\n        if (isSelected) {\n          drawShapeLabel(ctx, type, centerX, centerY);\n        }\n      }\n      // Cercles\n      else if (type.includes(\"Rond\")) {\n        ctx.beginPath();\n        ctx.ellipse(centerX, centerY, width / 2, width / 2, 0, 0, Math.PI * 2);\n        ctx.fill();\n        ctx.stroke();\n\n        addNumberToShape(ctx, { type: \"circle\", x: centerX, y: centerY, radius: width / 2 }, numero, type,\"\",1);\n\n        if (isSelected) {\n          drawShapeLabel(ctx, type, centerX, centerY);\n        }\n      }\n      // CCR\n      else if (type.includes(\"CCR\")) {\n        const isDouble = orientation.includes(\"Haut_et_bas\") || orientation.includes(\"Droite_Gauche\");\n        const currentWidth = orientation.match(/Droite|Gauche/) ? height : width;\n        const currentHeight = orientation.match(/Droite|Gauche/) ? width : height;\n        const radius = currentWidth / 2;\n\n        ctx.save();\n        ctx.translate(centerX, centerY);\n\n        if (orientation.includes(\"Droite\")) ctx.rotate(Math.PI / 2);\n        else if (orientation.includes(\"Gauche\")) ctx.rotate(-Math.PI / 2);\n        else if (orientation.includes(\"Bas\")) ctx.rotate(Math.PI);\n\n        if (isDouble) {\n          // Double alcôve\n          drawSemiCircle(ctx, 0, -currentHeight / 2 + radius + Ecart45Points, radius, true);\n          drawSemiCircle(ctx, 0, currentHeight / 2 - radius - Ecart45Points, radius, false);\n\n          ctx.beginPath();\n          ctx.moveTo(-radius, -currentHeight / 2 + radius + Ecart45Points);\n          ctx.lineTo(-radius, currentHeight / 2 - radius - Ecart45Points);\n          ctx.stroke();\n\n          ctx.beginPath();\n          ctx.moveTo(radius, -currentHeight / 2 + radius + Ecart45Points);\n          ctx.lineTo(radius, currentHeight / 2 - radius - Ecart45Points);\n          ctx.stroke();\n\n          ctx.restore();\n\n          addNumberToShape(\n            ctx,\n            { type: \"ccr\", x: centerX, y: centerY, width: currentWidth, height: currentHeight },\n            numero,\n            type,\n            orientation,\n            \"1\"\n          );\n\n          addNumberToShape(\n            ctx,\n            { type: \"ccr\", x: centerX, y: centerY, width: currentWidth, height: currentHeight },\n            numero,\n            type,\n            orientation,\n            \"2\"\n          );\n        } else {\n          // Alcôve simple\n          drawSemiCircle(ctx, 0, -currentHeight / 2 + radius + Ecart45Points, radius, true);\n\n          ctx.beginPath();\n          ctx.moveTo(-radius, -currentHeight / 2 + radius + Ecart45Points);\n          ctx.lineTo(-radius, currentHeight / 2);\n          ctx.lineTo(radius, currentHeight / 2);\n          ctx.lineTo(radius, -currentHeight / 2 + radius + Ecart45Points);\n          ctx.stroke();\n\n          ctx.restore();\n          addNumberToShape(\n            ctx,\n            { type: \"ccr\", x: centerX, y: centerY, width: currentWidth, height: currentHeight },\n            numero,\n            type,\n            orientation,\n            \"1\"\n          );\n        }\n\n        if (isSelected) {\n          drawShapeLabel(ctx, type, centerX, centerY);\n        }\n      }\n    });\n\n    // Dessiner les points de perçage\n    if (drillingPoints && drillingPoints.length > 0) {\n      drillingPoints.forEach((point, index) => {\n        if (!point) return;\n\n        const isHovered = hoveredItem?.type === \"drilling\" && hoveredItem.index === index;\n        const isSelected = selectedItem?.type === \"drilling\" && selectedItem.index === index;\n\n        drawDrillingPoint(point.x, point.y, isHovered, isSelected);\n\n        if (isSelected) {\n          drawPointLabel(ctx, `X: ${(point.x - 50) / scale}, Y: ${(maxY - point.y) / scale}`, point.x, point.y);\n        }\n      });\n    }\n    ctx.restore();\n  });\n}\n\nfunction drawShapeLabel(ctx, text, x, y) {\n  ctx.save();\n  ctx.font = `${Math.max(10, 12 / zoom)}px Arial`;\n  ctx.fillStyle = \"#0066cc\";\n  ctx.textAlign = \"center\";\n  ctx.fillText(text, x, y - 15 / zoom);\n  ctx.restore();\n}\n\nasync function getShapeDataFromExcel() {\n  try {\n    return await Excel.run(async (context) => {\n      const dataSheet = context.workbook.worksheets.getItem(\"Feuil1\");\n\n      // Ranges existantes (votre code original)\n      const shapesRange = dataSheet.getRange(\"B37:B160\");\n      const widthsRange = dataSheet.getRange(\"F37:F160\");\n      const centersXRange = dataSheet.getRange(\"G37:G160\");\n      const heightsRange = dataSheet.getRange(\"I37:I160\");\n      const centersYRange = dataSheet.getRange(\"J37:J160\");\n      const orientationsRange = dataSheet.getRange(\"D37:D160\");\n      const numbersRange = dataSheet.getRange(\"A37:A160\");\n\n      // Récupération des correspondances (colonnes A et B, lignes 8-32)\n      const correspondancesRange = dataSheet.getRange(\"A8:B32\");\n\n      // Chargement des valeurs\n      shapesRange.load(\"values\");\n      widthsRange.load(\"values\");\n      centersXRange.load(\"values\");\n      heightsRange.load(\"values\");\n      centersYRange.load(\"values\");\n      orientationsRange.load(\"values\");\n      numbersRange.load(\"values\");\n      correspondancesRange.load(\"values\");\n\n      await context.sync();\n\n      // Vérification des données de base\n      if (!shapesRange.values || shapesRange.values.length === 0) {\n        throw new Error(\"Aucune donnée dans la plage des formes (B37:B160)\");\n      }\n\n      // Transformation des correspondances au format {type, label}\n      let correspondances = [];\n      if (correspondancesRange.values && correspondancesRange.values.length > 0) {\n        correspondances = correspondancesRange.values\n          .map((row) => ({\n            label: row[0] || \"?\", // Colonne A (texte)\n            type: row[1] || \"\" // Colonne B (type)\n          }))\n          .filter((item) => item.type); // On filtre les lignes vides\n      }\n\n      return {\n        shapes: shapesRange.values.flat(),\n        widths: widthsRange.values.flat(),\n        centersX: centersXRange.values.flat(),\n        heights: heightsRange.values.flat(),\n        centersY: centersYRange.values.flat(),\n        orientations: orientationsRange.values.flat(),\n        numbers: numbersRange.values.flat(),\n        correspondances: correspondances\n      };\n    });\n  } catch (error) {\n    console.error(\"Erreur dans getShapeDataFromExcel:\", error);\n    OfficeHelpers.UI.notify(\"Erreur lors de la récupération des données. Vérifiez Feuil1.\");\n    return null;\n  }\n}\n\nasync function generate2DPlanInTaskPane() {\n  if (appState.currentScreen !== \"drilling\") {\n    showScreen(\"drilling\");\n  }\n  try {\n    const button = document.getElementById(\"generate-recenter-btn\");\n    button.disabled = true;\n    button.textContent = \"Chargement...\";\n\n    // Réinitialiser l'état avant de commencer\n    currentData = null;\n    isInitialized = false;\n\n    // Forcer un rendu vide immédiat\n    initEmptyCanvas();\n\n    currentData = await getShapeDataFromExcel();\n    if (!currentData) {\n      throw new Error(\"Aucune donnée valide reçue d'Excel\");\n    }\n\n    // Initialiser le canvas interactif\n    initInteractiveCanvas();\n\n    // Forcer le premier rendu\n    drawAllShapes();\n\n    button.textContent = \"Recentrer\";\n    button.style.backgroundColor = \"#fd7e14\";\n    button.disabled = false;\n\n    return true;\n  } catch (error) {\n    console.error(\"Erreur:\", error);\n    const button = document.getElementById(\"generate-recenter-btn\");\n    if (button) {\n      button.textContent = \"Générer le plan 2D\";\n      button.style.backgroundColor = \"#0078d7\";\n      button.disabled = false;\n    }\n    showError(\"Erreur lors du chargement. Vérifiez les données Excel.\");\n    return false;\n  }\n}\n\nfunction initEmptyCanvas() {\n  const container = document.getElementById(\"drawing-area\");\n  container.innerHTML = \"\";\n\n  canvas = document.createElement(\"canvas\");\n  canvas.width = container.offsetWidth;\n  canvas.height = container.offsetHeight;\n  container.appendChild(canvas);\n\n  ctx = canvas.getContext(\"2d\");\n  canvas.style.cursor = \"default\";\n\n  // Dessiner un fond propre\n  ctx.fillStyle = \"#f8f8f8\";\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n  createTooltipElement();\n  isInitialized = false;\n}\n\nasync function tri_Optimise() {\n  try {\n    await Excel.run(async (context) => {\n      const sheet = context.workbook.worksheets.getItem(\"ACCUEIL\");\n\n      // 1. Nettoyage de la plage BR13:CE109\n      const rangeToClear = sheet.getRange(\"BR13:CE109\");\n      rangeToClear.clear();\n\n      // 2. Copie des valeurs de AC13:AC109 vers I13:I109\n      const sourceRange1 = sheet.getRange(\"AC13:AC109\");\n      sourceRange1.load(\"values\");\n      await context.sync();\n\n      const destRange1 = sheet.getRange(\"I13:I109\");\n      destRange1.values = sourceRange1.values;\n\n      // 3. Copie des plages combinées vers BR13:CE109\n      const rangeA = sheet.getRange(\"A13:A109\");\n      const rangeI = sheet.getRange(\"I13:I109\");\n      const rangeM = sheet.getRange(\"M13:T109\");\n      const rangeY = sheet.getRange(\"Y13:AB109\");\n\n      // Charger toutes les valeurs\n      rangeA.load(\"values\");\n      rangeI.load(\"values\");\n      rangeM.load(\"values\");\n      rangeY.load(\"values\");\n      await context.sync();\n\n      // Combiner les données\n      const combinedValues = [];\n      const rowCount = 97; // 109-13+1\n\n      for (let i = 0; i < rowCount; i++) {\n        const row = [];\n        // Colonne A\n        row.push(rangeA.values[i][0]);\n        // Colonne I\n        row.push(rangeI.values[i][0]);\n        // Colonnes M à T (8 colonnes)\n        for (let j = 0; j < 8; j++) {\n          row.push(rangeM.values[i][j]);\n        }\n        // Colonnes Y à AB (4 colonnes)\n        for (let j = 0; j < 4; j++) {\n          row.push(rangeY.values[i][j]);\n        }\n        combinedValues.push(row);\n      }\n\n      // Écrire les valeurs combinées\n      const destRange = sheet.getRange(\"BR13:CE109\");\n      destRange.values = combinedValues;\n\n      // Solution alternative: trier après avoir récupéré les données\n      destRange.load(\"values\");\n      await context.sync();\n\n      const sortColumnIndex = 1; // BS est la 2ème colonne (0-based index 1)\n      const customOrder = {\n        \"KIT DE BASE  -  KB\": 0,\n        \"KIT CONTIGU VERTICAL - KCV\": 1,\n        \"KIT CONTIGU HORIZONTAL - KCH\": 2,\n        \"KIT CONTIGU VERTICAL ET HORIZONTAL - KCVH\": 3,\n        \"KIT SPÉCIAL 3 POINTS - KS3P\": 4\n      };\n\n      const sortedValues = [...destRange.values];\n      sortedValues.sort((a, b) => {\n        const valA = a[sortColumnIndex] || \"\";\n        const valB = b[sortColumnIndex] || \"\";\n        return (customOrder[valA] || 99) - (customOrder[valB] || 99);\n      });\n\n      destRange.values = sortedValues;\n\n      // 5. Ajustement de la largeur de la colonne BS\n      sheet.getRange(\"BS:BS\").format.columnWidth = 36.13;\n\n      await context.sync();\n    });\n  } catch (error) {\n    console.error(\"Error:\", error);\n    OfficeHelpers.UI.notify(error);\n  }\n}\n\nasync function calculerMesKits() {\n  const button = document.getElementById(\"calculate-kits-btn\");\n  const originalText = button.textContent;\n  const originalBgColor = button.style.backgroundColor;\n  let feuillesDeverrouillees = []\n\n  try {\n    // Animation du bouton (gris + texte)\n    button.disabled = true;\n    button.style.backgroundColor = \"#cccccc\";\n    button.textContent = \"Transfert en cours... merci de patienter\";\n\n\n    // Vérifier et gérer la visibilité de la feuille ACCUEIL\n    const accueilVisible = await isSheetVisible(\"ACCUEIL\");\n    \n    if (!accueilVisible) {\n      await unhide(\"ACCUEIL\"); // On affiche ACCUEIL si elle est cachée\n    }\n\n    // Masquer toutes les autres feuilles visibles sauf ACCUEIL\n    await hideAllSheetsExcept(\"ACCUEIL\");\n\n    // Exécution des traitements\n    await tri_Optimise();\n\n    // Déverrouiller les feuilles avant le transfert\n    await setSheetProtection(\"Feuil1\", false, \"Gp4r!74.\");\n    await setSheetProtection(\"RecapTubes\", false, \"Gp4r!74.\");\n    feuillesDeverrouillees = [\"Feuil1\", \"RecapTubes\"]; // Mémoriser les feuilles déverrouillées\n\n    await transfererDonnee();\n    await copierDonneesVersRecapTubes();\n\n    // Si tout s'est bien passé, verrouiller à nouveau\n    await reverrouillerFeuilles(feuillesDeverrouillees);\n    feuillesDeverrouillees = []; // Réinitialiser la liste\n\n    // Succès : bouton vert + icône\n    button.style.backgroundColor = \"#28a745\"; // vert\n    button.textContent = \"✔️ Transfert réalisé avec succès !\";\n\n    // Afficher le message pour passer à l'étape 2\n    showMessage(\"Vous pouvez passer à l'étape 2\");\n\n  } catch (error) {\n    console.error(\"Erreur lors du transfert :\", error);\n\n    // En cas d'erreur, verrouiller les feuilles qui avaient été déverrouillées\n    if (feuillesDeverrouillees.length > 0) {\n      await reverrouillerFeuilles(feuillesDeverrouillees).catch(e => {\n        console.error(\"Erreur lors du reverrouillage d'urgence :\", e);\n      });\n    }\n\n    // Échec : bouton rouge + icône\n    button.style.backgroundColor = \"#dc3545\"; // rouge\n    button.textContent = \"❌ Erreur lors du transfert\";\n\n  } finally {\n    // Réactivation du bouton après traitement\n    setTimeout(() => {\n      button.disabled = false;\n      button.style.backgroundColor = originalBgColor;\n      button.textContent = originalText;\n    }, 3000); // Attend 3 secondes avant de restaurer\n  }\n}\n\n// Fonction pour reverrouiller plusieurs feuilles\nasync function reverrouillerFeuilles(feuilles) {\n  for (const feuille of feuilles) {\n    try {\n      await setSheetProtection(feuille, true, \"Gp4r!74.\");\n    } catch (erreur) {\n      console.error(`Échec du verrouillage de ${feuille}:`, erreur);\n      // Continuer avec les autres feuilles même si une échoue\n    }\n  }\n}\n\n// Fonction pour gérer la protection des feuilles\nasync function setSheetProtection(sheetName, protect, password) {\n  await Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(sheetName);\n    if (protect) {\n      sheet.protection.protect({\n        allowAutoFilter: true,\n        allowDeleteRows: false,\n        allowFormatCells: false,\n        allowFormatColumns: false,\n        allowFormatRows: false,\n        allowInsertColumns: false,\n        allowInsertRows: false,\n        allowSort: false,\n        selectionMode: \"none\"\n      }, password);\n    } else {\n      sheet.protection.unprotect(password);\n    }\n    await context.sync();\n  });\n}\n\nfunction showMessage(message, duration = 10000) {\n    // Création du conteneur principal avec pseudo-élément pour la transparence\n    const messageDiv = document.createElement(\"div\");\n    messageDiv.style.cssText = `\n        position: fixed;\n        top: 20px;\n        right: 20px;\n        color: white;\n        padding: 12px 40px 12px 20px;\n        border-radius: 6px;\n        z-index: 1000;\n        font-family: 'Segoe UI', system-ui, sans-serif;\n        font-size: 14px;\n        font-weight: 500;\n        box-shadow: 0 4px 12px rgba(0,0,0,0.1);\n        backdrop-filter: blur(6px);\n        border: 1px solid rgba(255,255,255,0.2);\n        animation: fadeIn 0.25s ease-out;\n        cursor: default;\n        max-width: 300px;\n        line-height: 1.5;\n        overflow: hidden;\n    `;\n\n    // Ajout du fond avec opacité séparée\n    const bgDiv = document.createElement(\"div\");\n    bgDiv.style.cssText = `\n        position: absolute;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        background-color: #28a745;\n        opacity: 0.6;\n        z-index: -1;\n    `;\n    messageDiv.appendChild(bgDiv);\n\n    // Contenu du message\n    messageDiv.innerHTML += `\n        <span style=\"\n            display: flex;\n            align-items: center;\n            gap: 8px;\n            position: relative;\n            z-index: 1;\n        \">\n            <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n                <path d=\"M22 11.08V12a10 10 0 1 1-5.93-9.14\"></path>\n                <polyline points=\"22 4 12 14.01 9 11.01\"></polyline>\n            </svg>\n            ${message}\n        </span>\n        <span class=\"close-btn\" style=\"\n            position: absolute;\n            top: 10px;\n            right: 10px;\n            width: 16px;\n            height: 16px;\n            cursor: pointer;\n            opacity: 0.7;\n            transition: opacity 0.2s;\n            z-index: 2;\n        \">&times;</span>\n    `;\n\n    // Animations\n    const style = document.createElement(\"style\");\n    style.textContent = `\n        @keyframes fadeIn {\n            from { opacity: 0; transform: translateY(-15px) scale(0.95); }\n            to { opacity: 1; transform: translateY(0) scale(1); }\n        }\n        @keyframes fadeOut {\n            to { opacity: 0; transform: translateY(-15px) scale(0.95); }\n        }\n    `;\n    document.head.appendChild(style);\n\n    document.body.appendChild(messageDiv);\n\n    // Gestion de la fermeture\n    const closeBtn = messageDiv.querySelector(\".close-btn\");\n    let timeoutId;\n\n    const closeMessage = () => {\n        clearTimeout(timeoutId);\n        messageDiv.style.animation = \"fadeOut 0.2s forwards\";\n        setTimeout(() => {\n            messageDiv.remove();\n            style.remove();\n        }, 200);\n    };\n\n    closeBtn.addEventListener(\"click\", closeMessage);\n    closeBtn.addEventListener(\"mouseenter\", () => closeBtn.style.opacity = \"1\");\n    closeBtn.addEventListener(\"mouseleave\", () => closeBtn.style.opacity = \"0.7\");\n\n    // Fermeture automatique\n    timeoutId = setTimeout(closeMessage, duration);\n}\n\n\nasync function transfererDonnee() {\n  try {\n    await Excel.run(async (context) => {\n      const wb = context.workbook;\n      const wsSource = wb.worksheets.getItem(\"ACCUEIL\");\n      const wsDest = wb.worksheets.getItem(\"Feuil1\");\n\n      // Effacer les anciennes données (colonnes A, B, D, F, G, I, J)\n      const columnsToClear = [\"A\", \"B\", \"D\", \"F\", \"G\", \"I\", \"J\"];\n      for (const col of columnsToClear) {\n        wsDest.getRange(`${col}37:${col}436`).clear();\n      }\n      await context.sync();\n\n      // Fonction pour appliquer le formatage (modifiée pour cibler uniquement la cellule)\n      async function applyFormat(sourceCellAddress, targetCell) {\n        const sourceCell = wsDest.getRange(sourceCellAddress);\n\n        // Copier tout le contenu (y compris le style de texte partiel)\n        await targetCell.copyFrom(sourceCell, Excel.RangeCopyType.all, false, false);\n\n        await context.sync();\n      }\n\n      // Mapping global : base + principale + complémentaire\n      const globalMapping = [\n        // Cellules de base\n        { source: \"D2\", dest: \"C4\" },\n        { source: \"D3\", dest: \"E4\" },\n        { source: \"D4\", dest: \"C6\" },\n        { source: \"D5\", dest: \"C3\" },\n        { source: \"D6\", dest: \"C5\" },\n\n        // Données principales (AD13 → AZ13)\n        { source: \"AD13\", dest: \"C8\" },\n        { source: \"AE13\", dest: \"C10\" },\n        { source: \"AF13\", dest: \"C9\" },\n        { source: \"AG13\", dest: \"C11\" },\n        { source: \"AH13\", dest: \"C12\" },\n        { source: \"AI13\", dest: \"C14\" },\n        { source: \"AJ13\", dest: \"C15\" },\n        { source: \"AK13\", dest: \"C16\" },\n        { source: \"AL13\", dest: \"C17\" },\n        { source: \"AM13\", dest: \"C18\" },\n        { source: \"AN13\", dest: \"C19\" },\n        { source: \"AO13\", dest: \"C20\" },\n        { source: \"AP13\", dest: \"C21\" },\n        { source: \"AQ13\", dest: \"C22\" },\n        { source: \"AR13\", dest: \"C24\" },\n        { source: \"AS13\", dest: \"C25\" },\n        { source: \"AT13\", dest: \"C26\" },\n        { source: \"AU13\", dest: \"C27\" },\n        { source: \"AV13\", dest: \"C28\" },\n        { source: \"AW13\", dest: \"C29\" },\n        { source: \"AX13\", dest: \"C30\" },\n        { source: \"AY13\", dest: \"C31\" },\n        { source: \"AZ13\", dest: \"C32\" },\n\n        // Données complémentaires (BA13 → BI13)\n        { source: \"BA13\", dest: \"D14\" },\n        { source: \"BB13\", dest: \"D15\" },\n        { source: \"BC13\", dest: \"D16\" },\n        { source: \"BD13\", dest: \"D17\" },\n        { source: \"BE13\", dest: \"D18\" },\n        { source: \"BF13\", dest: \"D19\" },\n        { source: \"BG13\", dest: \"D20\" },\n        { source: \"BH13\", dest: \"D21\" },\n        { source: \"BI13\", dest: \"D22\" }\n      ];\n\n      // Charger toutes les plages source\n      const globalSourceRanges = globalMapping.map((m) => wsSource.getRange(m.source));\n      globalSourceRanges.forEach((r) => r.load(\"values\"));\n      await context.sync();\n\n      // Écrire les valeurs dans les plages cibles\n      for (let i = 0; i < globalMapping.length; i++) {\n        wsDest.getRange(globalMapping[i].dest).values = globalSourceRanges[i].values;\n      }\n\n      // Créer un objet pour stocker les positions (A8:A32)\n      const aRange = wsDest.getRange(\"A8:A32\");\n      const bRange = wsDest.getRange(\"B8:B32\");\n      aRange.load(\"text\");\n      bRange.load(\"text\");\n      await context.sync();\n\n      const colPositions = {};\n      for (let i = 0; i < aRange.text.length; i++) {\n        const key = aRange.text[i][0]?.trim() || \"\";\n        if (key) colPositions[key] = i + 8; // Stocke la ligne (8 à 32)\n      }\n\n      // Trouver la dernière ligne source\n      const colA = wsSource.getRange(\"A13:A436\");\n      colA.load(\"values\");\n      await context.sync();\n\n      let lastRow = 13;\n      for (let i = colA.values.length - 1; i >= 0; i--) {\n        if (colA.values[i][0] !== null && colA.values[i][0] !== \"\") {\n          lastRow = 13 + i;\n          break;\n        }\n      }\n\n      if (lastRow < 13) return;\n\n      // Charger les données complètes\n      const fullRange = wsSource.getRange(`A13:I${lastRow}`);\n      fullRange.load(\"values\");\n      await context.sync();\n\n      const rows = fullRange.values;\n      const colDonnees = [];\n\n      for (let i = 0; i < rows.length; i++) {\n        const [a, b, c, d, e, f, g, h, iCol] = rows[i];\n        const typeCaisson = b;\n        let cle = (iCol + \"\").trim();\n\n        if (cle.includes(\"-\")) cle = cle.split(\"-\")[1].trim();\n\n        let pos = 99;\n        let bVal = cle;\n\n        if (colPositions.hasOwnProperty(cle)) {\n          pos = colPositions[cle];\n          bVal = bRange.text[pos - 8][0];\n        }\n\n        // Ajout des données dans l'ordre: Position, B, H, G, F, E, D, A\n        colDonnees.push([pos - 7, bVal, h, g, f, e, d, a]);\n\n        // Traitement spécial pour les caissons avec alcove\n        if (typeCaisson === \"Caisson avec alcove\" && !isNaN(c)) {\n          const valCCR = `CCR${parseFloat(c) / 2}`;\n          if (colPositions[valCCR]) {\n            const posCCR = colPositions[valCCR];\n            const bCCR = bRange.text[posCCR - 8][0];\n            colDonnees.push([posCCR - 7, bCCR, h, g, f, e, d, a]);\n          }\n        }\n\n        // Traitement spécial pour les caissons avec rond\n        if (typeCaisson === \"Caisson avec rond\" && !isNaN(c)) {\n          const valKR = `KR${parseFloat(c) / 2}`;\n          if (colPositions[valKR]) {\n            const posKR = colPositions[valKR];\n            const bKR = bRange.text[posKR - 8][0];\n            colDonnees.push([posKR - 7, bKR, h, c, f, c, d, a]);\n          }\n        }\n      }\n\n      // Trier les données par position (colonne 0)\n      colDonnees.sort((a, b) => a[0] - b[0]);\n\n      // Écriture finale (A37:Hn) avec formatage\n      for (let i = 0; i < colDonnees.length; i++) {\n        const destRow = 37 + i;\n        const currentData = colDonnees[i];\n\n        // Écrire les valeurs\n        wsDest.getRange(`A${destRow}`).values = [[currentData[7]]];\n        wsDest.getRange(`B${destRow}`).values = [[currentData[1]]];\n        wsDest.getRange(`J${destRow}`).values = [[currentData[2]]];\n        wsDest.getRange(`I${destRow}`).values = [[currentData[3]]];\n        wsDest.getRange(`G${destRow}`).values = [[currentData[4]]];\n        wsDest.getRange(`F${destRow}`).values = [[currentData[5]]];\n        wsDest.getRange(`D${destRow}`).values = [[currentData[6]]];\n\n        // Appliquer le format uniquement sur colonne B si correspondance trouvée\n        if (currentData[0] !== 99) {\n          const sourceRow = currentData[0] + 7;\n          await applyFormat(`B${sourceRow}`, wsDest.getRange(`B${destRow}`));\n        }\n      }\n\n      await context.sync();\n    });\n  } catch (error) {\n    console.error(\"Erreur :\", error);\n    if (error.debugInfo) console.error(\"Détails :\", error.debugInfo);\n  }\n}\n\n\nasync function copierDonneesVersRecapTubes() {\n  await Excel.run(async (context) => {\n    const feuilleSource = context.workbook.worksheets.getItem(\"Feuil1\");\n    const feuilleDestination = context.workbook.worksheets.getItem(\"RecapTubes\");\n\n    // Sélectionne la plage B37:B170 de la feuille source\n    const plageSource = feuilleSource.getRange(\"B37:B170\");\n    plageSource.load(\"values\"); // Charger les valeurs\n\n    await context.sync();\n\n    // Colle les données à partir de la cellule B14 sur la feuille \"RecapTubes\"\n    const plageDestination = feuilleDestination.getRange(\"B14\").getResizedRange(133, 0); // 134 lignes\n    \n    // Copier tout le contenu (valeurs + mise en forme) comme dans transfererDonnee()\n    await plageDestination.copyFrom(\n      plageSource, \n      Excel.RangeCopyType.all, // Copie tout (valeurs, format, formules, etc.)\n      false, // Pas de référence spatiale\n      false  // Pas de référence absolue\n    );\n\n    await context.sync();\n  });\n}\n\n\nfunction createTooltipElement() {\n  tooltipElement = document.createElement(\"div\");\n  tooltipElement.className = \"canvas-tooltip\";\n  document.getElementById(\"drawing-area\").appendChild(tooltipElement);\n}\n\nfunction showError(message) {\n  const errorDiv = document.getElementById(\"error-message\");\n  if (errorDiv) {\n    errorDiv.textContent = message;\n    errorDiv.style.display = \"block\";\n  }\n}\n\nfunction initInteractiveCanvas() {\n  const container = document.getElementById(\"drawing-area\");\n  if (!container) {\n    console.error(\"Element 'drawing-area' non trouvé\");\n    return;\n  }\n\n  // Recréer complètement le canvas\n  container.innerHTML = \"\";\n  canvas = document.createElement(\"canvas\");\n  if (isPdfExportMode) {\n    canvas.width = 1020;\n    canvas.height = 700;\n  } else {\n    canvas.width = container.offsetWidth;\n    canvas.height = container.offsetHeight;\n  }\n  container.appendChild(canvas);\n\n  ctx = canvas.getContext(\"2d\");\n  canvas.style.cursor = \"grab\";\n\n  // Réinitialiser les événements\n  canvas.removeEventListener(\"wheel\", handleWheel);\n  canvas.removeEventListener(\"mousedown\", startDrag);\n  canvas.removeEventListener(\"mousemove\", handleHover);\n  canvas.removeEventListener(\"click\", handleClick);\n  canvas.removeEventListener(\"mouseup\", endDrag);\n  canvas.removeEventListener(\"mouseleave\", endDrag);\n\n  // Nouveaux événements\n  canvas.addEventListener(\"wheel\", handleWheel);\n  canvas.addEventListener(\"mousedown\", (e) => {\n    startDrag(e);\n    e.preventDefault();\n  });\n  canvas.addEventListener(\"mousemove\", (e) => {\n    if (isDragging) {\n      drag(e);\n    } else {\n      handleHover(e);\n    }\n  });\n  canvas.addEventListener(\"click\", handleClick);\n  canvas.addEventListener(\"mouseup\", endDrag);\n  canvas.addEventListener(\"mouseleave\", endDrag);\n\n  // Centrer la vue et forcer le rendu\n  centerView();\n  isInitialized = true;\n  drawAllShapes();\n}\n\nfunction resetView() {\n  // Réinitialiser toutes les variables\n  zoom = 1;\n  panX = 0;\n  panY = 0;\n  hoveredItem = null;\n  selectedItem = null;\n  drillingPoints = [];\n  lastSelectedIndex = 0;\n  selectionCycle = [];\n  currentData = null;\n  isInitialized = false;\n\n  // Réinitialiser le bouton\n  const button = document.getElementById(\"generate-recenter-btn\");\n  button.textContent = \"Générer le plan 2D\";\n  button.style.backgroundColor = \"#0078d7\"; // Bleu\n\n  // Réinitialiser le canvas\n  initEmptyCanvas();\n\n  // Cacher le tooltip et les erreurs\n  if (tooltipElement) {\n    tooltipElement.style.display = \"none\";\n  }\n\n  const errorDiv = document.getElementById(\"error-message\");\n  if (errorDiv) {\n    errorDiv.style.display = \"none\";\n    errorDiv.textContent = \"\";\n  }\n}\n\nfunction centerView() {\n  if (!currentData) return;\n\n  let minX = Infinity,\n    maxX = -Infinity,\n    minY = Infinity,\n    maxY = -Infinity;\n  const scale = 2;\n  const yOffset = canvas.height - 100;\n\n  for (let i = 0; i < currentData.shapes.length; i++) {\n    if (!currentData.shapes[i]) continue;\n\n    const centerX = parseFloat(currentData.centersX[i]) * scale + 50;\n    const centerY = yOffset - parseFloat(currentData.centersY[i]) * scale;\n    const width = parseFloat(currentData.widths[i]) * scale;\n    const height = parseFloat(currentData.heights[i]) * scale;\n\n    minX = Math.min(minX, centerX - width / 2);\n    maxX = Math.max(maxX, centerX + width / 2);\n    minY = Math.min(minY, centerY - height / 2);\n    maxY = Math.max(maxY, centerY + height / 2);\n  }\n\n  const drawingWidth = maxX - minX;\n  const drawingHeight = maxY - minY;\n\n  zoom = Math.min(canvas.width / (drawingWidth * 1.1), canvas.height / (drawingHeight * 1.1));\n\n  panX = (canvas.width - drawingWidth * zoom) / 2 - minX * zoom;\n  panY = (canvas.height - drawingHeight * zoom) / 2 - minY * zoom;\n}\n\nfunction drawDrillingPoint(x, y, isHovered = false, isSelected = false) {\n  const baseSize = 5 / zoom;\n  const size = isSelected ? baseSize * 1.8 : isHovered ? baseSize * 1.4 : baseSize;\n\n  ctx.beginPath();\n  ctx.arc(x, y, size, 0, Math.PI * 2);\n  ctx.fillStyle = isSelected ? \"#cc0000\" : isHovered ? \"#ff3333\" : \"red\";\n  ctx.fill();\n  ctx.strokeStyle = \"#fff\";\n  ctx.lineWidth = 0.5 / zoom;\n  ctx.stroke();\n}\n\nfunction drawPointLabel(ctx, text, x, y) {\n  ctx.save();\n  ctx.font = `${Math.max(8, 10 / zoom)}px Arial`;\n  ctx.fillStyle = \"#cc0000\";\n  ctx.textAlign = \"center\";\n  ctx.fillText(text, x, y - 10 / zoom);\n  ctx.restore();\n}\n\nfunction handleHover(e) {\n  if (!isInitialized || isDragging) return; // Ignore si déplacement en cours\n\n  const mousePos = getMousePos(canvas, e);\n  const pos = screenToCanvas(mousePos.x, mousePos.y);\n\n  // Vérifier d'abord les points de perçage\n  let foundItem = checkDrillingPointsHit(pos);\n\n  // Si aucun point trouvé, vérifier les formes\n  if (!foundItem) {\n    foundItem = checkShapesHit(pos);\n  }\n\n  // Mettre à jour l'élément survolé seulement si différent\n  if (!hoveredItem || !foundItem || hoveredItem.type !== foundItem.type || hoveredItem.index !== foundItem.index) {\n    hoveredItem = foundItem;\n    drawAllShapes();\n  }\n\n  updateTooltip(e, foundItem);\n}\n\nfunction checkDrillingPointsHit(pos) {\n  if (!drillingPoints || drillingPoints.length === 0) return null;\n\n  const hitRadius = 10 / zoom;\n\n  // Parcourir en sens inverse pour prioriser les derniers points ajoutés\n  for (let i = drillingPoints.length - 1; i >= 0; i--) {\n    const point = drillingPoints[i];\n    if (!point) continue;\n\n    const dist = Math.sqrt(Math.pow(pos.x - point.x, 2) + Math.pow(pos.y - point.y, 2));\n    if (dist < hitRadius) {\n      return { type: \"drilling\", index: i };\n    }\n  }\n  return null;\n}\n\nfunction checkShapesHit(pos) {\n  const scale = 2;\n  const maxY = canvas.height - 100;\n  const hitShapes = [];\n\n  for (let i = 0; i < currentData.shapes.length; i++) {\n    if (!currentData.shapes[i]) continue;\n\n    const centerX = parseFloat(currentData.centersX[i]) * scale + 50;\n    const centerY = maxY - parseFloat(currentData.centersY[i]) * scale;\n    const width = parseFloat(currentData.widths[i]) * scale;\n    const height = parseFloat(currentData.heights[i]) * scale;\n    const orientation = currentData.orientations[i] || \"\";\n\n    if (isPointInShape(pos, currentData.shapes[i], centerX, centerY, width, height, orientation)) {\n      hitShapes.push({\n        type: \"shape\",\n        index: i,\n        shapeType: currentData.shapes[i],\n        // Nouveau: on stocke les dimensions pour le calcul de priorité\n        width: width,\n        height: height,\n        centerX: centerX,\n        centerY: centerY\n      });\n    }\n  }\n\n  // Tri des formes touchées selon de nouvelles règles de priorité\n  return (\n    hitShapes.sort((a, b) => {\n      // 1. Priorité aux formes les plus petites (plus précises)\n      const areaA = a.width * a.height;\n      const areaB = b.width * b.height;\n\n      // 2. Si les aires sont similaires, priorité aux CCR\n      if (Math.abs(areaA - areaB) < 100) {\n        const isCCRA = a.shapeType.includes(\"CCR\");\n        const isCCRB = b.shapeType.includes(\"CCR\");\n        if (isCCRA && !isCCRB) return -1;\n        if (!isCCRA && isCCRB) return 1;\n      }\n\n      // 3. Par défaut, la plus petite d'abord\n      return areaA - areaB;\n    })[0] || null\n  );\n}\n\nfunction getShapePriority(shapeType) {\n  if (shapeType.includes(\"CCR\")) return 3;\n  if (shapeType.includes(\"Kit Rond\")) return 2;\n  return 1; // Rectangles et autres\n}\n\nfunction isPointInShape(pos, shapeType, centerX, centerY, width, height, orientation) {\n  // Nouveau: marge pour la détection du contour\n  const margin = 2 / zoom; // Ajustable selon le zoom\n\n  // Rectangle ou Kit de base\n  if (shapeType.includes(\"Kit de base\") || shapeType.includes(\"Kit contigu\") || shapeType.includes(\"Kit spécial\")) {\n    return isPointInRectWithMargin(pos, centerX, centerY, width, height, margin);\n  }\n  // Cercle\n  else if (shapeType.includes(\"Kit Rond\")) {\n    return isPointInCircleWithMargin(pos, centerX, centerY, width / 2, margin);\n  }\n  // CCR\n  else if (shapeType.includes(\"CCR\")) {\n    return isPointInCCRWithMargin(pos, centerX, centerY, width, height, orientation, margin);\n  }\n\n  return false;\n}\n\n// Nouvelle fonction helper pour les rectangles avec marge\nfunction isPointInRectWithMargin(pos, centerX, centerY, width, height, margin) {\n  const left = centerX - width / 2 - margin;\n  const right = centerX + width / 2 + margin;\n  const top = centerY - height / 2 - margin;\n  const bottom = centerY + height / 2 + margin;\n\n  return pos.x >= left && pos.x <= right && pos.y >= top && pos.y <= bottom;\n}\n\n// Nouvelle fonction helper pour les cercles avec marge\nfunction isPointInCircleWithMargin(pos, centerX, centerY, radius, margin) {\n  const dx = pos.x - centerX;\n  const dy = pos.y - centerY;\n  const distance = Math.sqrt(dx * dx + dy * dy);\n\n  return distance <= radius + margin;\n}\n\nfunction isPointInCCRWithMargin(pos, centerX, centerY, width, height, orientation, margin) {\n  const Ecart45Points = 5 * 2;\n  const radius = width / 2;\n  let relativeX = pos.x - centerX;\n  let relativeY = pos.y - centerY;\n\n  // Rotation inverse selon l'orientation\n  if (orientation.includes(\"Droite\")) {\n    [relativeX, relativeY] = [relativeY, -relativeX];\n  } else if (orientation.includes(\"Gauche\")) {\n    [relativeX, relativeY] = [-relativeY, relativeX];\n  } else if (orientation.includes(\"Bas\")) {\n    [relativeX, relativeY] = [-relativeX, -relativeY];\n  }\n\n  const isDouble = orientation.includes(\"Haut_et_bas\") || orientation.includes(\"Droite_Gauche\");\n  const topPartY = -height / 2 + radius + Ecart45Points;\n  const bottomPartY = height / 2 - radius - Ecart45Points;\n\n  // Vérifier la partie supérieure (demi-cercle)\n  if (relativeY < topPartY + margin) {\n    const dx = relativeX;\n    const dy = relativeY - topPartY;\n    const distance = Math.sqrt(dx * dx + dy * dy);\n    // Vérifier si on est dans le demi-cercle OU près du contour\n    return (\n      dx * dx + dy * dy <= (radius + margin) * (radius + margin) &&\n      relativeX >= -radius - margin &&\n      relativeX <= radius + margin\n    );\n  }\n\n  // Pour les CCR doubles, vérifier la partie inférieure\n  if (isDouble && relativeY > bottomPartY - margin) {\n    const dx = relativeX;\n    const dy = relativeY - bottomPartY;\n    const distance = Math.sqrt(dx * dx + dy * dy);\n    return (\n      dx * dx + dy * dy <= (radius + margin) * (radius + margin) &&\n      relativeX >= -radius - margin &&\n      relativeX <= radius + margin\n    );\n  }\n\n  // Vérifier la partie centrale rectangulaire\n  const inCentralRect =\n    relativeX >= -radius - margin &&\n    relativeX <= radius + margin &&\n    relativeY >= topPartY - margin &&\n    relativeY <= (isDouble ? bottomPartY + margin : height / 2 + margin);\n\n  // Vérifier si on est près des contours verticaux\n  const nearVerticalBorder =\n    (Math.abs(relativeX + radius) <= margin || Math.abs(relativeX - radius) <= margin) &&\n    relativeY >= topPartY - margin &&\n    relativeY <= (isDouble ? bottomPartY + margin : height / 2 + margin);\n\n  return inCentralRect || nearVerticalBorder;\n}\n\nfunction calculateShapeArea(width, height, shapeType) {\n  if (shapeType.includes(\"Kit Rond\")) {\n    return Math.PI * Math.pow(width / 2, 2);\n  } else if (shapeType.includes(\"CCR\")) {\n    // Pour les CCR, seule une partie est occupée (demi-cercles + rectangle)\n    // On réduit artificiellement l'aire pour prioriser leur sélection\n    return width * height * 0.3; // 30% de l'aire du rectangle englobant\n  }\n  return width * height;\n}\n\nfunction handleClick(e) {\n  if (!isInitialized || isDragging || !canvas) return; // Annule si déplacement en cours\n\n  const mousePos = getMousePos(canvas, e);\n  const pos = screenToCanvas(mousePos.x, mousePos.y);\n\n  // Vérifier d'abord les points de perçage\n  const clickedDrilling = checkDrillingPointsHit(pos);\n  if (clickedDrilling) {\n    selectedItem = clickedDrilling;\n    selectionCycle = [];\n    drawAllShapes();\n    showTooltip(e, selectedItem);\n    return;\n  }\n\n  // Ensuite vérifier les formes\n  const clickedShape = checkShapesHit(pos);\n  if (!clickedShape) {\n    selectedItem = null;\n    selectionCycle = [];\n    drawAllShapes();\n    hideTooltip();\n    return;\n  }\n\n  // Si la forme cliquée est différente de la précédente, réinitialiser le cycle\n  if (!selectedItem || selectedItem.type !== clickedShape.type || selectedItem.index !== clickedShape.index) {\n    selectionCycle = getAllShapesAtPosition(pos);\n    lastSelectedIndex = 0;\n    selectedItem = clickedShape;\n  }\n  // Sinon, faire tourner le cycle\n  else {\n    lastSelectedIndex = (lastSelectedIndex + 1) % selectionCycle.length;\n    selectedItem = selectionCycle[lastSelectedIndex];\n  }\n\n  drawAllShapes();\n  showTooltip(e, selectedItem);\n}\n\nfunction getAllShapesAtPosition(pos) {\n  const scale = 2;\n  const maxY = canvas.height - 100;\n  const hitShapes = [];\n\n  for (let i = 0; i < currentData.shapes.length; i++) {\n    if (!currentData.shapes[i]) continue;\n\n    const centerX = parseFloat(currentData.centersX[i]) * scale + 50;\n    const centerY = maxY - parseFloat(currentData.centersY[i]) * scale;\n    const width = parseFloat(currentData.widths[i]) * scale;\n    const height = parseFloat(currentData.heights[i]) * scale;\n\n    if (isPointInShape(pos, currentData.shapes[i], centerX, centerY, width, height, currentData.orientations[i])) {\n      hitShapes.push({\n        type: \"shape\",\n        index: i,\n        shapeType: currentData.shapes[i],\n        priority: getShapePriority(currentData.shapes[i]),\n        area: calculateShapeArea(width, height, currentData.shapes[i])\n      });\n    }\n  }\n\n  // Tri identique à checkShapesHit\n  return hitShapes.sort((a, b) => {\n    // Priorité la plus haute d'abord\n    if (b.priority !== a.priority) return b.priority - a.priority;\n    // Puis plus petite aire d'abord\n    return a.area - b.area;\n  });\n}\n\nfunction updateTooltip(e, item) {\n  if (!tooltipElement || !item) {\n    hideTooltip();\n    return;\n  }\n\n  const mousePos = getMousePos(canvas, e);\n  tooltipElement.style.left = `${mousePos.x + 15}px`;\n  tooltipElement.style.top = `${mousePos.y + 15}px`;\n\n  if (item.type === \"drilling\") {\n    const point = drillingPoints[item.index];\n    const scale = 2;\n    const maxY = canvas.height - 100;\n    const x = (point.x - 50) / scale;\n    const y = (maxY - point.y) / scale;\n    tooltipElement.textContent = `Point de perçage (${x.toFixed(1)}, ${y.toFixed(1)})`;\n    tooltipElement.style.display = \"block\";\n  } else if (item.type === \"shape\") {\n    tooltipElement.textContent = currentData.shapes[item.index];\n    tooltipElement.style.display = \"block\";\n  }\n}\n\nfunction showTooltip(e, item) {\n  if (!tooltipElement) return;\n  updateTooltip(e, item);\n  tooltipElement.classList.add(\"active\");\n}\n\nfunction hideTooltip() {\n  if (!tooltipElement) return;\n  tooltipElement.style.display = \"none\";\n  tooltipElement.classList.remove(\"active\");\n}\n\nfunction getMousePos(canvas, evt) {\n  if (!canvas) return { x: 0, y: 0 };\n  const rect = canvas.getBoundingClientRect();\n  return {\n    x: evt.clientX - rect.left,\n    y: evt.clientY - rect.top\n  };\n}\n\nfunction screenToCanvas(x, y) {\n  return {\n    x: (x - panX) / zoom,\n    y: (y - panY) / zoom\n  };\n}\n\n// Fonctions pour les points de perçage\nasync function placeDrillingPoints() {\n  try {\n    if (!isInitialized || !currentData) {\n      showError(\"Veuillez d'abord générer le plan 2D en cliquant sur 'Générer le plan 2D'\");\n      return;\n    }\n\n    const button = document.getElementById(\"place-drilling-btn\");\n    if (!button) throw new Error(\"Bouton non trouvé\");\n\n    button.disabled = true;\n    button.textContent = \"Chargement...\";\n\n    const drillingData = await getDrillingDataFromExcel();\n    drawDrillingPoints(drillingData);\n\n    button.textContent = \"Placer les points\";\n    button.disabled = false;\n  } catch (error) {\n    console.error(\"Erreur:\", error);\n    const button = document.getElementById(\"place-drilling-btn\");\n    if (button) {\n      button.textContent = \"Erreur - Réessayer\";\n      button.disabled = false;\n    }\n    showError(\"Erreur lors du placement des points\");\n  }\n}\n\nasync function getDrillingDataFromExcel() {\n  return Excel.run(async (context) => {\n    const sourceSheet = context.workbook.worksheets.getItem(\"Feuil2\");\n    const reportSheet = context.workbook.worksheets.getItem(\"A reporter\");\n\n    const typeRange = sourceSheet.getRange(\"A20:A200\");\n    const kbRange = sourceSheet.getRange(\"B20:I200\");\n    const ccrRange = reportSheet.getRange(\"B5:AG200\");\n    const rondRange = sourceSheet.getRange(\"AR20:BW200\");\n\n    typeRange.load(\"values\");\n    kbRange.load(\"values\");\n    ccrRange.load(\"values\");\n    rondRange.load(\"values\");\n\n    await context.sync();\n\n    return {\n      types: typeRange.values,\n      kbPoints: kbRange.values,\n      ccrPoints: ccrRange.values,\n      rondPoints: rondRange.values\n    };\n  });\n}\n\nfunction drawDrillingPoints(data) {\n  if (!canvas || !ctx || !currentData) {\n    console.error(\"Le canvas n'est pas initialisé\");\n    return;\n  }\n\n  drillingPoints = []; // Réinitialiser les points\n  const scale = 2;\n  const maxY = canvas.height - 100;\n\n  for (let i = 0; i < data.types.length; i++) {\n    if (!data.types[i] || data.types[i][0] === \"\") continue;\n\n    const type = data.types[i][0];\n\n    if (\n      type.includes(\"KB\") ||\n      type.includes(\"KCV\") ||\n      type.includes(\"KCH\") ||\n      type.includes(\"KCVH\") ||\n      type.includes(\"KS3P\") ||\n      type.includes(\"KSDH\")\n    ) {\n      for (let col = 0; col < 8; col += 2) {\n        if (data.kbPoints[i] && data.kbPoints[i][col] !== \"\") {\n          const x = parseFloat(data.kbPoints[i][col]) * scale + 50;\n          const y = maxY - parseFloat(data.kbPoints[i][col + 1]) * scale;\n          drillingPoints.push({ x, y });\n        }\n      }\n    } else if (type.includes(\"CCR\")) {\n      for (let col = 0; col < 32; col += 2) {\n        if (data.ccrPoints[i] && data.ccrPoints[i][col] !== \"\") {\n          const x = parseFloat(data.ccrPoints[i][col]) * scale + 50;\n          const y = maxY - parseFloat(data.ccrPoints[i][col + 1]) * scale;\n          drillingPoints.push({ x, y });\n        }\n      }\n    } else if (type.includes(\"Rond\")) {\n      for (let col = 0; col < 32; col += 2) {\n        if (data.rondPoints[i] && data.rondPoints[i][col] !== \"\") {\n          const x = parseFloat(data.rondPoints[i][col]) * scale + 50;\n          const y = maxY - parseFloat(data.rondPoints[i][col + 1]) * scale;\n          drillingPoints.push({ x, y });\n        }\n      }\n    }\n  }\n\n  // Redessiner tout pour afficher les nouveaux points\n  drawAllShapes();\n}\n\n// Fonctions interactives existantes\nfunction handleWheel(e) {\n  if (!isInitialized || !canvas) return;\n  e.preventDefault();\n  const zoomIntensity = 0.1;\n  const mouseX = e.clientX - canvas.getBoundingClientRect().left;\n  const mouseY = e.clientY - canvas.getBoundingClientRect().top;\n\n  const zoomFactor = e.deltaY < 0 ? 1 + zoomIntensity : 1 - zoomIntensity;\n\n  panX -= mouseX;\n  panY -= mouseY;\n  panX *= zoomFactor;\n  panY *= zoomFactor;\n  panX += mouseX;\n  panY += mouseY;\n\n  zoom *= zoomFactor;\n  drawAllShapes();\n}\n\nfunction startDrag(e) {\n  isDragging = true;\n  lastX = e.clientX;\n  lastY = e.clientY;\n  canvas.style.cursor = \"grabbing\"; // Main fermée\n}\n\nfunction drag(e) {\n  if (!isInitialized || !isDragging || !canvas) return;\n\n  const dx = e.clientX - lastX;\n  const dy = e.clientY - lastY;\n\n  panX += dx;\n  panY += dy;\n\n  lastX = e.clientX;\n  lastY = e.clientY;\n\n  drawAllShapes();\n}\n\nfunction endDrag() {\n  isDragging = false;\n  canvas.style.cursor = \"grab\"; // Main ouverte\n}\n\n// Fonctions de dessin existantes\nfunction drawSemiCircle(ctx, x, y, radius, isUp) {\n  ctx.beginPath();\n  ctx.arc(x, y, radius, Math.PI, isUp ? 0 : 2 * Math.PI, !isUp);\n  ctx.stroke();\n}\n\nfunction drawArc(ctx, x, y, radius, startAngle, endAngle) {\n  ctx.beginPath();\n  ctx.arc(x, y, radius, degToRad(startAngle), degToRad(endAngle), true);\n  ctx.stroke();\n}\n\nfunction degToRad(degrees) {\n  return degrees * (Math.PI / 180);\n}\n\nfunction debugDrawHitAreas() {\n  ctx.save();\n  ctx.strokeStyle = \"rgba(255,0,0,0.3)\";\n  ctx.lineWidth = 1;\n\n  currentData.shapes.forEach((shape, i) => {\n    if (!shape) return;\n\n    const centerX = parseFloat(currentData.centersX[i]) * 2 + 50;\n    const centerY = canvas.height - 100 - parseFloat(currentData.centersY[i]) * 2;\n    const width = parseFloat(currentData.widths[i]) * 2;\n    const height = parseFloat(currentData.heights[i]) * 2;\n\n    if (shape.includes(\"CCR\")) {\n      // Dessiner la zone de hit-test du CCR\n      ctx.beginPath();\n      // ... Logique similaire à isPointInCCRWithMargin ...\n      ctx.stroke();\n    } else {\n      // Dessiner le rectangle englobant\n      ctx.strokeRect(centerX - width / 2, centerY - height / 2, width, height);\n    }\n  });\n\n  ctx.restore();\n}\n"],"names":["_regeneratorRuntime","r","t","e","Object","prototype","n","hasOwnProperty","o","Symbol","i","iterator","a","asyncIterator","u","toStringTag","c","defineProperty","value","enumerable","configurable","writable","h","Generator","create","Error","done","method","arg","delegate","d","f","sent","_sent","dispatchException","abrupt","s","type","Context","call","wrap","GeneratorFunction","GeneratorFunctionPrototype","l","p","getPrototypeOf","y","x","v","g","forEach","_invoke","AsyncIterator","_typeof","resolve","__await","then","return","TypeError","next","w","tryEntries","push","m","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","unshift","pop","values","prev","charAt","slice","stop","rval","complete","finish","catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","canvas","ctx","tooltipElement","appState","currentScreen","zoom","panX","panY","isDragging","lastX","lastY","currentData","drillingPoints","hoveredItem","selectedItem","animationFrameId","lastSelectedIndex","selectionCycle","isInitialized","isPdfExportMode","isFirstClick","lastDataSnapshot","changeDetected","notificationCooldown","hideAllScreens","id","element","document","getElementById","style","display","showScreen","screenName","resetView","initEmptyCanvas","resetProjetComplet","_resetProjetComplet","_callee8","confirmBox","resetBtn","originalBtnText","originalBtnClass","originalBtnColor","feuilleFeuil1Deverrouillee","_context8","textContent","className","backgroundColor","disabled","classList","add","Excel","run","_ref0","_callee7","context","sheets","feuille1","accueilSheet","accueilRange","accueilRangeD2D6","feuille1Sheet","_context7","workbook","worksheets","getItem","load","sync","protection","protected","setSheetProtection","getRange","clear","ClearApplyTo","contents","formats","dataValidation","all","_x19","remove","innerHTML","setTimeout","t0","console","error","t1","retourAccueilEtMasquerAutresFeuilles","_retourAccueilEtMasquerAutresFeuilles","_callee10","_context10","_ref10","_callee1","_iterator2","_step2","sheet","_context1","visibility","activate","_createForOfIteratorHelper","items","err","_x21","showError","concat","message","unhideSheetsExport","_x","_unhideSheetsExport","_callee12","feuillesAAfficher","_context12","Array","isArray","_ref11","_callee11","allSheets","existingSheets","missingSheets","_context11","map","filter","includes","sheetName","warn","_x22","isSheetVisible","_x2","_isSheetVisible","_callee14","isVisible","_context14","_ref12","_callee13","_context13","_x23","hideAllSheetsExcept","_x3","_hideAllSheetsExcept","_callee16","sheetsToKeepVisible","_context16","_ref13","_callee15","sheetToActivate","_iterator3","_step3","_context15","find","_x24","unhide","_ref3","_callee3","_context3","log","_x5","showDataChangeNotification","notification","createElement","head","appendChild","body","closeBtn","querySelector","addEventListener","opacity","transform","parentNode","preparerExportPDF","_preparerExportPDF","_callee17","button","originalText","originalBgColor","feuilleTempExportDeverrouillee","_context17","FeuilleTempExport","exportCanvasToTemps","_exportCanvasToTemps","_callee19","overlay","exportCanvasPlan","exportCtxPlan","imageDataPlan","exportCanvasPoints","exportCtxPoints","imageDataPoints","_context19","cssText","transition","initInteractiveCanvas","generate2DPlanInTaskPane","requestAnimationFrame","width","height","getContext","imageSmoothingEnabled","drawImage","toDataURL","placeDrillingPoints","_ref14","_callee18","sheet3","shapes3","sheet5","shapes5","_context18","shapes","shape","delete","addImage","split","left","top","_x25","_FeuilleTempExport","_callee21","_context21","_ref15","_callee20","feuillesSource","feuilleDest","currentRow","_i","_feuillesSource","nomFeuille","feuilleSource","rangeUtilisee","lastRow","colonneB","blocValide","endRow","j","_context20","getUsedRange","columnWidth","rowCount","Math","min","copierBlocDonnees","getEntireColumn","format","autofitColumns","_x26","OfficeExtension","JSON","stringify","debugInfo","_x8","_x9","_x0","_x1","_x10","_x11","_x12","_copierBlocDonnees","_callee22","sourceSheet","destSheet","enTeteRange","donnees1Range","donnees2Range","sourceEntete","sourceDonnees1","sourceDonnees2","destEntete","destDonnees1","destDonnees2","_context22","copyFrom","RangeCopyType","String","fromCharCode","columnCount","addNumberToShape","num","typeForme","orientation","undefined","suffix","correspondance","typeUpper","toUpperCase","trim","correspondances","label","prefixText","save","fontSize","max","lineHeight","font","availableWidth","prefixWidth","measureText","corrWidth","maxTextWidth","scaleFactor","availableHeight","totalTextHeight","posX","posY","textAlign","textBaseline","radiusVert","rectHeight","radiusHorz","rectLength","margin","fillStyle","fillText","restore","drawAllShapes","cancelAnimationFrame","clearRect","fillRect","translate","scale","maxY","Ecart45Points","_hoveredItem","_selectedItem","numero","numbers","parseFloat","widths","heights","centerX","centersX","centerY","centersY","orientations","isHovered","index","isSelected","strokeStyle","lineWidth","match","beginPath","rect","fill","stroke","drawShapeLabel","ellipse","PI","radius","isDouble","currentWidth","currentHeight","rotate","drawSemiCircle","moveTo","lineTo","point","_hoveredItem2","_selectedItem2","baseSize","size","arc","drawDrillingPoint","text","drawPointLabel","getShapeDataFromExcel","_getShapeDataFromExcel","_callee24","_context24","_ref16","_callee23","dataSheet","shapesRange","widthsRange","centersXRange","heightsRange","centersYRange","orientationsRange","numbersRange","correspondancesRange","_context23","row","item","flat","_x27","OfficeHelpers","UI","notify","_generate2DPlanInTaskPane","_callee25","_button","_context25","container","offsetWidth","offsetHeight","cursor","tri_Optimise","_tri_Optimise","_callee27","_context27","_ref17","_callee26","sourceRange1","rangeA","rangeI","rangeM","rangeY","combinedValues","_j","destRange","customOrder","sortedValues","_context26","sort","b","valA","valB","_x28","_calculerMesKits","_callee28","feuillesDeverrouillees","_context28","transfererDonnee","copierDonneesVersRecapTubes","reverrouillerFeuilles","showMessage","_x13","_reverrouillerFeuilles","_callee29","feuilles","_iterator4","_step4","feuille","_context29","_x14","_x15","_x16","_setSheetProtection","_callee31","protect","password","_context31","_ref18","_callee30","_context30","allowAutoFilter","allowDeleteRows","allowFormatCells","allowFormatColumns","allowFormatRows","allowInsertColumns","allowInsertRows","allowSort","selectionMode","unprotect","_x29","duration","messageDiv","bgDiv","timeoutId","closeMessage","clearTimeout","animation","_transfererDonnee","_callee34","_context34","_ref19","_callee33","wb","wsSource","wsDest","_i2","_columnsToClear","col","applyFormat","_applyFormat","globalMapping","globalSourceRanges","aRange","bRange","colPositions","_i3","_aRange$text$_i3$","key","colA","_i4","fullRange","rows","colDonnees","_i5","_rows$_i","iCol","typeCaisson","cle","pos","bVal","valCCR","posCCR","bCCR","valKR","posKR","bKR","_i6","destRow","_currentData","sourceRow","_context33","_callee32","sourceCellAddress","targetCell","sourceCell","_context32","_x31","_x32","source","dest","_slicedToArray","_x30","_copierDonneesVersRecapTubes","_callee36","_context36","_ref20","_callee35","feuilleDestination","plageSource","plageDestination","_context35","getResizedRange","_x33","errorDiv","removeEventListener","handleWheel","startDrag","handleHover","handleClick","endDrag","preventDefault","dx","clientX","dy","clientY","drag","minX","Infinity","maxX","minY","yOffset","drawingWidth","drawingHeight","centerView","mousePos","getMousePos","screenToCanvas","foundItem","checkDrillingPointsHit","checkShapesHit","updateTooltip","hitRadius","sqrt","pow","hitShapes","isPointInShape","shapeType","areaA","areaB","abs","isCCRA","isCCRB","right","bottom","isPointInRectWithMargin","isPointInCircleWithMargin","relativeX","relativeY","_ref7","_ref8","_ref9","topPartY","bottomPartY","inCentralRect","nearVerticalBorder","isPointInCCRWithMargin","calculateShapeArea","clickedDrilling","showTooltip","clickedShape","hideTooltip","priority","area","getAllShapesAtPosition","toFixed","evt","getBoundingClientRect","_placeDrillingPoints","_callee37","_button2","_context37","getDrillingDataFromExcel","drawDrillingPoints","_getDrillingDataFromExcel","_callee39","_context39","_ref21","_callee38","reportSheet","typeRange","kbRange","ccrRange","rondRange","_context38","types","kbPoints","ccrPoints","rondPoints","_x34","data","mouseX","mouseY","zoomFactor","deltaY","isUp","Office","onReady","_document$getElementB","_ref4","_callee6","range","_context6","setInterval","_callee5","_context5","_ref6","_callee4","currentRange","_context4","_x7","_x6","calculerMesKits","_callee","_context"],"sourceRoot":""}