{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://office-addin-taskpane-js/./src/taskpane/taskpane.js"],"sourcesContent":["// Variables globales pour la gestion de la vue et de l'interaction\nlet appState = {\n  currentScreen: \"welcome\" // \"welcome\", \"menu\", \"drilling\"\n};\nlet zoom = 1;\nlet panX = 0;\nlet panY = 0;\nlet isDragging = false;\nlet lastX = 0;\nlet lastY = 0;\nlet canvas, ctx;\nlet currentData = null;\nlet drillingPoints = [];\nlet hoveredItem = null;\nlet selectedItem = null;\nlet animationFrameId = null;\nlet tooltipElement;\nlet lastSelectedIndex = 0;\nlet selectionCycle = [];\nlet isInitialized = false;\nlet isPdfExportMode = false;\nlet isFirstClick = true; \nlet lastDataSnapshot = null; \nlet changeDetected = false; \nlet notificationCooldown = false; \n\n\n// Initialisation principale\nOffice.onReady(() => {\n  // Cache toutes les interfaces au départ\n  hideAllScreens();\n\n  // Affiche l'écran de bienvenue\n  showScreen(\"welcome\");\n\n  // Configure les événements\n  setupEventListeners();\n\n});\n\nfunction hideAllScreens() {\n  // Ces IDs doivent correspondre à ton HTML\n  const screens = [\"welcome-screen\", \"main-menu\", \"drilling-interface\",\"export-instructions\"];\n  screens.forEach((id) => {\n    const element = document.getElementById(id);\n    if (element) element.style.display = \"none\";\n  });\n}\n\nfunction showScreen(screenName) {\n  hideAllScreens();\n\n  appState.currentScreen = screenName;\n\n  switch (screenName) {\n    case \"welcome\":\n      document.getElementById(\"welcome-screen\").style.display = \"flex\";\n      break;\n    case \"menu\":\n      resetView();\n      document.getElementById(\"main-menu\").style.display = \"flex\";\n      break;\n    case \"drilling\":\n      document.getElementById(\"drilling-interface\").style.display = \"block\";\n      // Initialise le canvas si ce n'est pas déjà fait\n      if (!isInitialized) {\n        initEmptyCanvas();\n      }\n      break;\n    case \"export-instructions\": \n      document.getElementById(\"export-instructions\").style.display = \"flex\";\n      break;\n  }\n\n}\n\nfunction setupEventListeners() {\n  // Navigation\n  document.getElementById(\"start-btn\").addEventListener(\"click\", () => showScreen(\"menu\"));\n  document.getElementById(\"drilling-plan-btn\").addEventListener(\"click\", () => showScreen(\"drilling\"));\n  document.getElementById(\"back-to-menu\").addEventListener(\"click\", () => showScreen(\"menu\"));\n    document.getElementById(\"back-to-menu-btn\")?.addEventListener(\"click\", () => showScreen(\"menu\"));\n  \n\n\n\n  document.getElementById(\"generate-recenter-btn\").addEventListener(\"click\", generate2DPlanInTaskPane);\n  document.getElementById(\"place-drilling-btn\").addEventListener(\"click\", placeDrillingPoints);\n  document.getElementById(\"reset-view-btn\").addEventListener(\"click\", resetView);\n  document.getElementById(\"calculate-kits-btn\").addEventListener(\"click\", function() {\n    if (isFirstClick) {\n        isFirstClick = false;\n        setupDataChangeListener();\n    }\n    calculerMesKits();\n});\n  document.getElementById(\"prepare-pdf-btn\").addEventListener(\"click\", preparerExportPDF);\n  document.getElementById(\"finish-export-btn\").addEventListener(\"click\", retourAccueilEtMasquerAutresFeuilles);\n  document.getElementById(\"reset-project-btn\").addEventListener(\"click\", () => {\n      const confirmBox = document.getElementById(\"confirm-reset\");\n      confirmBox.style.display = \"flex\";\n  });\n\n    // Gestionnaires de confirmation de réinitialisation\n  document.getElementById(\"confirm-yes\").addEventListener(\"click\", async () => {\n        document.getElementById(\"confirm-reset\").style.display = \"none\";\n        await resetProjetComplet(); // Utilisez une fonction plus complète\n  });\n    \n  document.getElementById(\"confirm-no\").addEventListener(\"click\", () => {\n        document.getElementById(\"confirm-reset\").style.display = \"none\";\n  });\n \n;\n}\n\n\nasync function resetProjetComplet() {\n    const confirmBox = document.getElementById(\"confirm-reset\");\n    const resetBtn = document.getElementById(\"reset-project-btn\");\n    const originalBtnText = resetBtn.textContent;\n    const originalBtnClass = resetBtn.className;\n    const originalBtnColor = resetBtn.style.backgroundColor;\n    let feuilleFeuil1Deverrouillee = false;\n    \n    try {\n        confirmBox.style.display = \"none\";\n        \n        resetBtn.disabled = true;\n        resetBtn.classList.add(\"disabled\");\n        resetBtn.style.backgroundColor = \"#cccccc\";\n        resetBtn.textContent = \"Réinitialisation en cours...\";\n        \n        await Excel.run(async (context) => {\n            const sheets = context.workbook.worksheets;\n            \n            // Déverrouiller Feuil1 avant les modifications\n            const feuille1 = sheets.getItem(\"Feuil1\");\n            feuille1.load(\"protection/protected\");\n            await context.sync();\n            \n            if (feuille1.protection.protected) {\n                await setSheetProtection(\"Feuil1\", false, \"Gp4r!74.\");\n                feuilleFeuil1Deverrouillee = true;\n            }\n            \n            // Solution robuste pour ACCUEIL (préserve absolument tout sauf les valeurs)\n            const accueilSheet = sheets.getItem(\"ACCUEIL\");\n            const accueilRange = accueilSheet.getRange(\"B13:I150\");\n            \n            // 1. Sauvegarder les validations de données\n            accueilRange.load(\"dataValidation\");\n            await context.sync();\n            \n            // 2. Effacer seulement les valeurs et formats\n            accueilRange.clear(Excel.ClearApplyTo.contents); // Efface seulement le contenu\n            accueilRange.clear(Excel.ClearApplyTo.formats);  // Efface les formats\n            \n            // 3. Réappliquer les validations si elles existaient\n            if (accueilRange.dataValidation) {\n                accueilRange.dataValidation = accueilRange.dataValidation;\n            }\n            \n            // Pour Feuil1, méthode standard\n            const feuille1Sheet = sheets.getItem(\"Feuil1\");\n            feuille1Sheet.getRange(\"A37:B170\").clear(Excel.ClearApplyTo.all);\n            feuille1Sheet.getRange(\"F37:J170\").clear(Excel.ClearApplyTo.all);\n            \n            await context.sync();\n        });\n        \n        if (feuilleFeuil1Deverrouillee) {\n            await setSheetProtection(\"Feuil1\", true, \"Gp4r!74.\");\n            feuilleFeuil1Deverrouillee = false;\n        }\n        \n        resetBtn.classList.remove(\"disabled\");\n        resetBtn.classList.add(\"success\");\n        resetBtn.style.backgroundColor = \"#28a745\";\n        resetBtn.innerHTML = \"✓ Réinitialisation réussie\";\n        \n        setTimeout(() => {\n            resetBtn.disabled = false;\n            resetBtn.style.backgroundColor = originalBtnColor;\n            resetBtn.className = originalBtnClass;\n            resetBtn.textContent = originalBtnText;\n        }, 3000);\n        \n    } catch (error) {\n        console.error(\"Échec de la réinitialisation:\", error);\n        \n        if (feuilleFeuil1Deverrouillee) {\n            try {\n                await setSheetProtection(\"Feuil1\", true, \"Gp4r!74.\");\n            } catch (verrouillageError) {\n                console.error(\"Erreur lors du reverrouillage d'urgence de Feuil1:\", verrouillageError);\n            }\n        }\n        \n        resetBtn.classList.remove(\"disabled\");\n        resetBtn.classList.add(\"error\");\n        resetBtn.style.backgroundColor = \"#dc3545\"\n        resetBtn.innerHTML = \"✗ Échec de la réinitialisation\";\n        resetBtn.disabled = false;\n        \n        setTimeout(() => {\n            resetBtn.style.backgroundColor = originalBtnColor;\n            resetBtn.className = originalBtnClass;\n            resetBtn.textContent = originalBtnText;\n        }, 3000);\n    }\n}\n\nasync function resetProjetComplet2() {\n    const confirmBox = document.getElementById(\"confirm-reset\");\n    const resetBtn = document.getElementById(\"reset-project-btn\");\n    const originalBtnText = resetBtn.textContent;\n    const originalBtnClass = resetBtn.className;\n    const originalBtnColor = resetBtn.style.backgroundColor;\n    \n    try {\n        // Fermer la boîte de confirmation\n        confirmBox.style.display = \"none\";\n        \n        // Mettre à jour le bouton principal\n        resetBtn.disabled = true;\n        resetBtn.classList.add(\"disabled\");\n        resetBtn.style.backgroundColor = \"#cccccc\";\n        resetBtn.textContent = \"Réinitialisation en cours...\";\n        \n        await Excel.run(async (context) => {\n            const sheets = context.workbook.worksheets;\n            \n            // Nettoyer les autres feuilles\n            const sheetsToClear = {\n                \"ACCUEIL\": [\"B13:I150\"],\n                \"Feuil1\": [\"A37:B170\", \"F37:J170\"]\n            };\n            \n            for (const sheetName in sheetsToClear) {\n                if (sheetsToClear.hasOwnProperty(sheetName)) {\n                    const sheet = sheets.getItem(sheetName);\n                    for (const range of sheetsToClear[sheetName]) {\n                        sheet.getRange(range).clear(Excel.ClearApplyTo.all);\n                    }\n                }\n            }\n            \n            await context.sync();\n        });\n        \n        // Feedback visuel de succès\n        resetBtn.classList.remove(\"disabled\");\n        resetBtn.classList.add(\"success\");\n        resetBtn.style.backgroundColor = \"#28a745\";\n        resetBtn.innerHTML = \"✓ Réinitialisation réussie\";\n        \n        // Revenir à l'état normal après 3 secondes\n        setTimeout(() => {\n            resetBtn.disabled = false;\n            resetBtn.style.backgroundColor = originalBtnColor;\n            resetBtn.className = originalBtnClass;\n            resetBtn.textContent = originalBtnText;\n        }, 3000);\n        \n    } catch (error) {\n        console.error(\"Échec de la réinitialisation:\", error);\n        \n        // Feedback visuel d'erreur\n        resetBtn.classList.remove(\"disabled\");\n        resetBtn.classList.add(\"error\");\n        resetBtn.style.backgroundColor = \"#dc3545\"\n        resetBtn.innerHTML = \"✗ Échec de la réinitialisation\";\n        resetBtn.disabled = false;\n        \n        // Revenir à l'état normal après 3 secondes\n        setTimeout(() => {\n            resetBtn.style.backgroundColor = originalBtnColor;\n            resetBtn.className = originalBtnClass;\n            resetBtn.textContent = originalBtnText;\n        }, 3000);\n    }\n}\n\n\nasync function retourAccueilEtMasquerAutresFeuilles() {\n  try {\n    await Excel.run(async (context) => {\n      const sheets = context.workbook.worksheets;\n      sheets.load(\"items/name,items/visibility\");\n      await context.sync();\n\n      // Vérifie si ACCUEIL est masquée et l'affiche si nécessaire\n      const accueilSheet = sheets.getItem(\"ACCUEIL\");\n      accueilSheet.load(\"visibility\");\n      await context.sync();\n\n      if (accueilSheet.visibility !== \"Visible\") {\n        accueilSheet.visibility = \"Visible\";\n        await context.sync();\n      }\n\n      // Active ACCUEIL\n      accueilSheet.activate();\n      await context.sync();\n\n      // Masquer toutes les autres feuilles visibles\n      for (const sheet of sheets.items) {\n        if (sheet.name !== \"ACCUEIL\" && sheet.visibility === \"Visible\") {\n          sheet.visibility = \"Hidden\";\n        }\n      }\n\n      await context.sync();\n    });\n\n    // Affiche le menu (interface HTML/JS)\n    showScreen(\"menu\");\n\n  } catch (error) {\n    console.error(\"Erreur lors du retour à ACCUEIL :\", error);\n    showError(`Erreur : ${error.message}`);\n  }\n}\n\n\nasync function unhideSheetsExport(feuillesAAfficher) {\n  if (!feuillesAAfficher || !Array.isArray(feuillesAAfficher) || feuillesAAfficher.length === 0) {\n    throw new Error(\"Le paramètre feuillesAAfficher doit être un tableau non vide\");\n  }\n\n  try {\n    await Excel.run(async (context) => {\n      // 1. Charger la liste de toutes les feuilles existantes\n      const allSheets = context.workbook.worksheets;\n      allSheets.load(\"items/name\");\n      await context.sync();\n      \n      // 2. Filtrer pour ne garder que les feuilles existantes\n      const existingSheets = allSheets.items.map(sheet => sheet.name);\n      const sheetsToProcess = feuillesAAfficher.filter(name => existingSheets.includes(name));\n      \n      // 3. Afficher les feuilles concernées\n      sheetsToProcess.forEach(sheetName => {\n        const sheet = context.workbook.worksheets.getItem(sheetName);\n        sheet.visibility = \"Visible\";\n      });\n      \n      await context.sync();\n      \n      // 4. Optionnel: logger les feuilles manquantes\n      const missingSheets = feuillesAAfficher.filter(name => !existingSheets.includes(name));\n      if (missingSheets.length > 0) {\n        console.warn(\"Feuilles non trouvées:\", missingSheets);\n      }\n    });\n  } catch (error) {\n    console.error(\"Erreur dans unhideSheetsExport:\", error);\n    throw error;\n  }\n}\n\n// Fonction pour vérifier si une feuille est visible\nasync function isSheetVisible(sheetName) {\n  try {\n    let isVisible = false;\n    await Excel.run(async (context) => {\n      const sheet = context.workbook.worksheets.getItem(sheetName);\n      sheet.load('visibility');\n      await context.sync();\n      isVisible = sheet.visibility === \"Visible\";\n    });\n    return isVisible;\n  } catch (error) {\n    console.error(`Erreur lors de la vérification de la visibilité de ${sheetName}:`, error);\n    return false;\n  }\n}\n\n// Fonction pour masquer toutes les feuilles sauf une spécifique\nasync function hideAllSheetsExcept(sheetsToKeepVisible) {\n  try {\n    await Excel.run(async (context) => {\n      const sheets = context.workbook.worksheets;\n      sheets.load('items/name,items/visibility');\n      await context.sync();\n\n      // 🔄 Activer une des feuilles visibles pour éviter l’erreur\n      const sheetToActivate = sheets.items.find(sheet => sheetsToKeepVisible.includes(sheet.name));\n      if (sheetToActivate) {\n        sheetToActivate.activate();\n        await context.sync();\n      }\n\n      for (const sheet of sheets.items) {\n        if (!sheetsToKeepVisible.includes(sheet.name) && sheet.visibility === \"Visible\") {\n          sheet.visibility = \"Hidden\";\n        }\n      }\n      await context.sync();\n    });\n  } catch (error) {\n    console.error(\"Erreur lors du masquage des feuilles:\", error);\n    throw error;\n  }\n}\n\n\n\n// Fonctions masquer/afficher généralisées\nfunction hide(sheetName) {\n  Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(sheetName);\n    sheet.visibility = \"Hidden\";\n    await context.sync();\n    console.log(`${sheetName} masquée`);\n  }).catch((error) => {\n    console.error(\"Erreur:\", error);\n  });\n}\n\nfunction unhide(sheetName) {\n  Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(sheetName);\n    sheet.visibility = \"Visible\";\n    await context.sync();\n    console.log(`${sheetName} affichée`);\n  }).catch((error) => {\n    console.error(\"Erreur:\", error);\n  });\n}\n\n\n//*****************************************************************FONCTIONS CONFIRMEES**************************************************** */ \n\n\nfunction setupDataChangeListener() {\n    // Initialisation de la surveillance\n    Excel.run(async (context) => {\n        const sheet = context.workbook.worksheets.getItem(\"ACCUEIL\");\n        const range = sheet.getRange(\"B13:H120\");\n        range.load(\"values\");\n        \n        await context.sync();\n        lastDataSnapshot = JSON.stringify(range.values);\n        \n        // Surveillance continue\n        setInterval(async () => {\n            if (notificationCooldown) return;\n            \n            try {\n                await Excel.run(async (context) => {\n                    const currentRange = context.workbook.worksheets\n                        .getItem(\"ACCUEIL\")\n                        .getRange(\"B13:H120\");\n                    currentRange.load(\"values\");\n                    \n                    await context.sync();\n                    const currentData = JSON.stringify(currentRange.values);\n                    \n                    if (currentData !== lastDataSnapshot && !changeDetected) {\n                        changeDetected = true;\n                        showDataChangeNotification();\n                        lastDataSnapshot = currentData;\n                    }\n                });\n            } catch (error) {\n                console.log(\"Erreur de surveillance :\", error);\n            }\n        }, 5000); // Vérification toutes les 5 secondes\n    });\n}\n\nfunction showDataChangeNotification() {\n    // Style amélioré avec transparence\n    const notification = document.createElement(\"div\");\n    notification.innerHTML = `\n        <div style=\"\n            position: fixed;\n            top: 20px;\n            right: 20px;\n            background-color: rgba(248, 154, 23, 0.77);\n            backdrop-filter: blur(6px);\n            color: white;\n            padding: 12px 40px 12px 20px;\n            border-radius: 6px;\n            z-index: 1000;\n            font-family: 'Segoe UI', sans-serif;\n            font-size: 14px;\n            font-weight: 500;\n            box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n            border: 1px solid rgba(255,255,255,0.2);\n            animation: gentleFadeIn 0.3s ease-out;\n            max-width: 320px;\n            line-height: 1.4;\n        \">\n            <div style=\"display: flex; align-items: center; gap: 8px;\">\n                <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n                    <path d=\"M12 9v2m0 4h.01\"></path>\n                    <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\n                </svg>\n                <span>Modification détectée : veuillez actualiser les données en revenant à l'étape 1</span>\n            </div>\n            <div class=\"close-btn\" style=\"\n                position: absolute;\n                top: 10px;\n                right: 10px;\n                width: 16px;\n                height: 16px;\n                cursor: pointer;\n                opacity: 0.8;\n                transition: all 0.2s;\n                font-size: 18px;\n                line-height: 16px;\n                text-align: center;\n            \">×</div>\n        </div>\n    `;\n\n    // Animation discrète\n    const style = document.createElement(\"style\");\n    style.textContent = `\n        @keyframes gentleFadeIn {\n            from { opacity: 0; transform: translateY(10px) scale(0.98); }\n            to { opacity: 1; transform: translateY(0) scale(1); }\n        }\n    `;\n    document.head.appendChild(style);\n\n    document.body.appendChild(notification);\n\n    // Gestion intelligente de la fermeture\n    const closeBtn = notification.querySelector(\".close-btn\");\n    \n    closeBtn.addEventListener(\"click\", () => {\n        notification.style.opacity = \"0\";\n        setTimeout(() => notification.remove(), 300);\n    });\n    \n    closeBtn.addEventListener(\"mouseenter\", () => {\n        closeBtn.style.opacity = \"1\";\n        closeBtn.style.transform = \"scale(1.1)\";\n    });\n    \n    closeBtn.addEventListener(\"mouseleave\", () => {\n        closeBtn.style.opacity = \"0.8\";\n        closeBtn.style.transform = \"scale(1)\";\n    });\n\n    // Disparition automatique après 8 secondes\n    setTimeout(() => {\n        if (notification.parentNode) {\n            notification.style.opacity = \"0\";\n            setTimeout(() => notification.remove(), 300);\n        }\n    }, 8000);\n\n    // Anti-spam (pas de nouvelle notification avant 30s)\n    notificationCooldown = true;\n    setTimeout(() => {\n        notificationCooldown = false;\n        changeDetected = false;\n    }, 30000);\n}\n\n\n// Fonction principale pour préparer l'export PDF\nasync function preparerExportPDF() {\n  const button = document.getElementById(\"prepare-pdf-btn\");\n  const originalText = button.textContent;\n  const originalBgColor = button.style.backgroundColor; // Sauvegarde la couleur originale\n  let feuilleTempExportDeverrouillee = false;\n  \n\n  const feuillesAAfficher = [\n    \"PDG\", \"Intro\", \"TempExportPlan\", \"TempExportComplet\", \n    \"P_KITS\", \"TempExport\", \"RecapPieces\", \"RecapTubes\"\n  ];\n\n  try {\n    // Animation du bouton (gris + texte)\n    button.disabled = true;\n    button.style.backgroundColor = \"#cccccc\";\n    button.textContent = \"Préparation en cours... merci de patienter\";\n\n\n    // Vérifier et gérer la visibilité de la feuille ACCUEIL\n    const accueilVisible = await isSheetVisible(\"ACCUEIL\");\n    \n    if (!accueilVisible) {\n      await unhide(\"ACCUEIL\"); // On affiche ACCUEIL si elle est cachée\n    }\n\n    // 1. Afficher et ordonner les feuilles\n    await unhideSheetsExport(feuillesAAfficher);\n    // 2. Masquer toutes les feuilles sauf celles à afficher\n    await hideAllSheetsExcept(feuillesAAfficher);\n\n    // Déverrouiller TempExport avant l'export\n    await setSheetProtection(\"TempExport\", false, \"Gp4r!74.\");\n    feuilleTempExportDeverrouillee = true;\n\n    // Exécution des exports\n    await FeuilleTempExport();\n\n    // Reverrouiller TempExport après l'export\n    await setSheetProtection(\"TempExport\", true, \"Gp4r!74.\");\n    feuilleTempExportDeverrouillee = false;\n\n    await exportCanvasToTemps();\n    \n    // Affichage des instructions\n    showScreen(\"export-instructions\");\n    \n  } catch (error) {\n    console.error(\"Erreur dans preparerExportPDF:\", error);\n\n    // En cas d'erreur, verrouiller TempExport si elle avait été déverrouillée\n    if (feuilleTempExportDeverrouillee) {\n      try {\n        await setSheetProtection(\"TempExport\", true, \"Gp4r!74.\");\n      } catch (verrouillageError) {\n        console.error(\"Erreur lors du reverrouillage d'urgence de TempExport:\", verrouillageError);\n      }\n    }\n\n    showError(`Erreur lors de la préparation du PDF : ${error.message}`);\n  } finally {\n    // Réinitialisation du bouton dans tous les cas (succès ou erreur)\n    button.disabled = false;\n    button.style.backgroundColor = originalBgColor; // Restaure la couleur originale\n    button.textContent = originalText;\n  }\n}\n\n\nasync function exportCanvasToTemps() {\n  const currentScreen = getCurrentScreen(\"menu\"); // Écran courant avant export\n\n  // Créer un overlay blanc temporaire pour masquer le processus\n  const overlay = document.createElement(\"div\");\n  overlay.style.cssText = `\n    position: fixed;\n    top: 0; left: 0;\n    width: 100vw;\n    height: 100vh;\n    background: white;\n    z-index: 9999;\n    display: none;\n  `;\n  document.body.appendChild(overlay);\n\n  try {\n\n    // 1. Préparation du canvas pour l'export\n    overlay.style.display = \"block\";\n\n    document.body.style.transition = \"none\";\n    showScreen(\"drilling\", false); // Changement d'écran sans animation\n    isPdfExportMode = true; // Active le mode export\n\n    // Réinitialiser l'état du canvas avant chaque export\n    initInteractiveCanvas();\n\n    // PREMIÈRE CAPTURE - PLAN SEULEMENT (TempExportPlan)\n    await generate2DPlanInTaskPane();\n    await new Promise((resolve) => requestAnimationFrame(() => requestAnimationFrame(resolve)));\n\n    const exportCanvasPlan = document.createElement(\"canvas\");\n    exportCanvasPlan.width = 1020;\n    exportCanvasPlan.height = 700;\n    const exportCtxPlan = exportCanvasPlan.getContext(\"2d\");\n    exportCtxPlan.imageSmoothingEnabled = true;\n    exportCtxPlan.drawImage(canvas, 0, 0);\n    const imageDataPlan = exportCanvasPlan.toDataURL(\"image/png\");\n\n    // DEUXIÈME CAPTURE - PLAN + POINTS (TempExportComplet)\n    // Réinitialiser à nouveau pour s'assurer qu'on part d'un état propre\n    initInteractiveCanvas();\n    await generate2DPlanInTaskPane();\n    await placeDrillingPoints();\n    await new Promise((resolve) => requestAnimationFrame(() => requestAnimationFrame(resolve)));\n\n    const exportCanvasPoints = document.createElement(\"canvas\");\n    exportCanvasPoints.width = 1020;\n    exportCanvasPoints.height = 700;\n    const exportCtxPoints = exportCanvasPoints.getContext(\"2d\");\n    exportCtxPoints.imageSmoothingEnabled = true;\n    exportCtxPoints.drawImage(canvas, 0, 0);\n    const imageDataPoints = exportCanvasPoints.toDataURL(\"image/png\");\n\n    // 3. Insertion dans Excel\n    await Excel.run(async (context) => {\n      // TempExportPlan - Plan seulement\n      const sheet3 = context.workbook.worksheets.getItem(\"TempExportPlan\");\n      const shapes3 = sheet3.shapes;\n      shapes3.load(\"items\");\n      await context.sync();\n      shapes3.items.forEach((shape) => shape.delete());\n      sheet3.shapes.addImage(imageDataPlan.split(\",\")[1], {\n        left: 0,\n        top: 0,\n        width: 842,\n        height: 595\n      });\n\n      // TempExportComplet - Plan + points\n      const sheet5 = context.workbook.worksheets.getItem(\"TempExportComplet\");\n      const shapes5 = sheet5.shapes;\n      shapes5.load(\"items\");\n      await context.sync();\n      shapes5.items.forEach((shape) => shape.delete());\n      sheet5.shapes.addImage(imageDataPoints.split(\",\")[1], {\n        left: 0,\n        top: 0,\n        width: 842,\n        height: 595\n      });\n\n      await context.sync();\n    });\n\n    // 4. Retour à l'écran initial si nécessaire\n    if (currentScreen === \"menu\") {\n      showScreen(\"menu\", false);\n    }\n  } catch (error) {\n    console.error(\"Export failed:\", error);\n    showError(`Erreur d'export : ${error.message}`);\n  } finally {\n    // 5. Réinitialisation de l'état et de l'UI\n    isPdfExportMode = false;\n    initInteractiveCanvas();\n\n    document.body.style.transition = \"\";\n    overlay.remove();\n  }\n}\n\nfunction getCurrentScreen() {\n  if (document.getElementById(\"welcome-screen\").style.display !== \"none\") return \"welcome\";\n  if (document.getElementById(\"main-menu\").style.display !== \"none\") return \"menu\";\n  if (document.getElementById(\"drilling-interface\").style.display !== \"none\") return \"drilling\";\n  return null;\n}\n\n\n//*****************************************************************FONCTIONS VALIDEES**************************************************** */ \nasync function FeuilleTempExport() {\n    try {\n        await Excel.run(async (context) => {\n            const workbook = context.workbook;\n            \n            // Récupérer les feuilles source et destination\n            const feuillesSource = [\"P_RONDS\", \"P_CCR\"];\n            const feuilleDest = workbook.worksheets.getItem(\"TempExport\");\n            \n            // Initialiser TempExport\n            feuilleDest.getUsedRange().clear();\n            feuilleDest.getRange(\"B:B\").columnWidth = 30;\n            \n            let currentRow = 1; // Commencer à la ligne 1\n            \n            for (const nomFeuille of feuillesSource) {\n                const feuilleSource = workbook.worksheets.getItem(nomFeuille);\n                \n                // Trouver la dernière ligne utilisée\n                const rangeUtilisee = feuilleSource.getUsedRange();\n                rangeUtilisee.load(\"rowCount\");\n                await context.sync();\n                \n                const lastRow = rangeUtilisee.rowCount;\n                \n                // Obtenir les valeurs de la colonne B (pour vérifier le contenu)\n                const colonneB = feuilleSource.getRange(`B5:B${lastRow}`);\n                colonneB.load(\"values\");\n                await context.sync();\n                \n                let i = 5;\n                while (i <= lastRow) {\n                    // Trouver le prochain bloc de 20 lignes avec du contenu en colonne B\n                    let blocValide = false;\n                    let endRow = i;\n                    \n                    // Vérifier les 20 prochaines lignes pour du contenu\n                    for (let j = 0; j < 20 && (i + j) <= lastRow; j++) {\n                        if (colonneB.values[j] && colonneB.values[j][0] !== \"\") {\n                            blocValide = true;\n                            endRow = i + j;\n                        }\n                    }\n                    \n                    if (!blocValide) {\n                        i += 20;\n                        continue;\n                    }\n                    \n                    // Ajuster endRow pour couvrir 20 lignes max\n                    endRow = Math.min(i + 19, lastRow);\n                    \n                    \n                    // 1. Premier bloc (C1:R4 + A:B + C:R)\n                    await copierBlocDonnees(\n                        context,\n                        feuilleSource,\n                        feuilleDest,\n                        \"C1:R4\",\n                        `A${i}:B${endRow}`,\n                        `C${i}:R${endRow}`,\n                        currentRow\n                    );\n                    \n                    currentRow += 27;\n                    \n                    // 2. Deuxième bloc (S1:AH4 + A:B + S:AH)\n                    await copierBlocDonnees(\n                        context,\n                        feuilleSource,\n                        feuilleDest,\n                        \"S1:AH4\",\n                        `A${i}:B${endRow}`,\n                        `S${i}:AH${endRow}`,\n                        currentRow\n                    );\n                    \n                    currentRow += 25;\n                    i += 20;\n                }\n            }\n            \n            // Appliquer l'autofit à la colonne B\n            const colB = feuilleDest.getRange(\"B1\").getEntireColumn();\n            colB.format.autofitColumns();\n            \n            await context.sync();\n        });\n    } catch (error) {\n        console.error(\"❌ Erreur:\", error);\n        if (error instanceof OfficeExtension.Error) {\n            console.error(\"Détails:\", JSON.stringify(error.debugInfo));\n        }\n    }\n}\n\nasync function copierBlocDonnees(context, sourceSheet, destSheet, enTeteRange, donnees1Range, donnees2Range, currentRow) {\n    try {\n        // Charger les plages nécessaires\n        const sourceEntete = sourceSheet.getRange(enTeteRange);\n        const sourceDonnees1 = sourceSheet.getRange(donnees1Range);\n        const sourceDonnees2 = sourceSheet.getRange(donnees2Range);\n        \n        // Charger les propriétés\n        sourceEntete.load(\"rowCount, columnCount, format\");\n        sourceDonnees1.load(\"rowCount, format\");\n        sourceDonnees2.load(\"rowCount, columnCount, format\");\n        await context.sync();\n        \n        // 1. Copier l'en-tête (valeurs + formats)\n        const destEntete = destSheet.getRange(`C${currentRow}:R${currentRow + sourceEntete.rowCount - 1}`);\n        destEntete.copyFrom(sourceEntete, Excel.RangeCopyType.values, false, false);\n        destEntete.copyFrom(sourceEntete, Excel.RangeCopyType.formats, false, false);\n        \n        // 2. Copier les données colonnes A:B (valeurs + formats)\n        const destDonnees1 = destSheet.getRange(`A${currentRow + 4}:B${currentRow + 3 + sourceDonnees1.rowCount}`);\n        destDonnees1.copyFrom(sourceDonnees1, Excel.RangeCopyType.values, false, false);\n        destDonnees1.copyFrom(sourceDonnees1, Excel.RangeCopyType.formats, false, false);\n        \n        // 3. Copier les données colonnes C:R ou S:AH (valeurs + formats)\n        const destDonnees2 = destSheet.getRange(\n            `C${currentRow + 4}`,\n            String.fromCharCode(64 + sourceDonnees2.columnCount) + (currentRow + 3 + sourceDonnees2.rowCount)\n        );\n        destDonnees2.copyFrom(sourceDonnees2, Excel.RangeCopyType.values, false, false);\n        destDonnees2.copyFrom(sourceDonnees2, Excel.RangeCopyType.formats, false, false);\n        \n        await context.sync();\n    } catch (error) {\n        console.error(\"Erreur dans copierBlocDonnees:\", error);\n        throw error;\n    }\n}\n\nfunction addNumberToShape(ctx, shape, num, typeForme, orientation = \"\", suffix = \"\") {\n  // Récupération de la correspondance\n  let correspondance = \"?\";\n  const typeUpper = typeForme.toUpperCase().trim();\n\n  if (currentData.correspondances) {\n    for (let i = 0; i < currentData.correspondances.length; i++) {\n      if (currentData.correspondances[i].type.toUpperCase() === typeUpper) {\n        correspondance = currentData.correspondances[i].label;\n        break;\n      }\n    }\n  }\n\n  // Formatage avec saut de ligne\n  const prefixText = suffix ? `${num}.${suffix} - ` : `${num} - `;\n  const fullText = `${prefixText}\\n${correspondance}`;\n\n  ctx.save();\n\n  // Taille de police initiale\n  let fontSize = Math.max(8, 10 / zoom);\n  let lineHeight = fontSize * 1.1;\n\n  // Mesure des textes avec la taille initiale\n  ctx.font = `${fontSize}px Arial`;\n  const prefixWidth = ctx.measureText(prefixText).width;\n  const corrWidth = ctx.measureText(correspondance).width;\n  const maxTextWidth = Math.max(prefixWidth, corrWidth);\n\n  // Calcul de la largeur disponible en fonction de la forme\n  let availableWidth;\n  switch (shape.type) {\n    case \"rectangle\":\n      availableWidth = shape.width - 4; // Marge de 2px de chaque côté\n      break;\n    case \"circle\":\n      availableWidth = shape.width * 0.9; // 90% du diamètre\n      break;\n    case \"ccr\":\n      availableWidth = shape.width * 0.8 - 60; // 80% de la largeur moins marge d'orientation\n      break;\n    default:\n      availableWidth = shape.width * 0.8;\n  }\n\n  // Ajustement de la taille de police si nécessaire\n  if (maxTextWidth > availableWidth) {\n    const scaleFactor = availableWidth / maxTextWidth;\n    fontSize = Math.max(6, fontSize * scaleFactor * 0.9); // Ne pas descendre en dessous de 6px\n    lineHeight = fontSize * 1.1;\n    ctx.font = `${fontSize}px Arial`;\n  }\n\n  // Pour les cercles, on ne vérifie pas la hauteur\n  if (shape.type !== \"circle\") {\n    // Vérification de la hauteur disponible\n    const totalTextHeight = lineHeight * 2; // 2 lignes de texte\n    let availableHeight;\n\n    switch (shape.type) {\n      case \"rectangle\":\n        availableHeight = shape.height - 4;\n        break;\n      case \"ccr\":\n        availableHeight = shape.height * 0.8;\n        break;\n      default:\n        availableHeight = shape.height * 0.8;\n    }\n\n    if (totalTextHeight > availableHeight) {\n      const scaleFactor = availableHeight / totalTextHeight;\n      fontSize = Math.max(6, fontSize * scaleFactor * 0.9);\n      lineHeight = fontSize * 1.1;\n      ctx.font = `${fontSize}px Arial`;\n    }\n  }\n\n  // Positionnement\n  let posX = shape.x;\n  let posY = shape.y;\n  let textAlign = \"center\";\n  let textBaseline = \"middle\";\n\n  // Initialisation des variables de positionnement\n  let radiusVert = shape.width / 2;\n  let rectHeight = shape.height - 2 * radiusVert;\n  let radiusHorz = shape.height / 2;\n  let rectLength = shape.width - 2 * radiusHorz;\n\n  switch (shape.type) {\n    case \"rectangle\":\n      textAlign = \"left\";\n      textBaseline = \"top\";\n      posX = shape.x - shape.width / 2 + 2;\n      posY = shape.y - shape.height / 2 + 2;\n      break;\n    case \"circle\":\n      // Texte centré sur le cercle\n      break;\n    case \"ccr\":\n      const margin = Math.min(30, shape.width * 0.2); // Marge proportionnelle\n      switch (orientation) {\n        case \"Haut\":\n          radiusVert = shape.width / 2;\n          rectHeight = shape.height - 2 * radiusVert;\n          textAlign = \"center\";\n          textBaseline = \"bottom\";\n          posY = shape.y - rectHeight / 2 - margin;\n          break;\n        case \"Bas\":\n          radiusVert = shape.width / 2;\n          rectHeight = shape.height - 2 * radiusVert;\n          textAlign = \"center\";\n          textBaseline = \"top\";\n          posY = shape.y + rectHeight / 2 + margin;\n          break;\n        case \"Haut_et_bas\":\n          radiusVert = shape.width / 2;\n          rectHeight = shape.height - 2 * radiusVert;\n          textAlign = \"center\";\n          if (suffix === \"1\") {\n            textBaseline = \"bottom\";\n            posY = shape.y - rectHeight / 2 - margin;\n          } else {\n            textBaseline = \"top\";\n            posY = shape.y + rectHeight / 2 + margin;\n          }\n          break;\n        case \"Gauche\":\n          radiusHorz = shape.height / 2;\n          rectLength = shape.width - 2 * radiusHorz;\n          textAlign = \"right\";\n          textBaseline = \"middle\";\n          posX = shape.x - rectLength / 2 - margin / 2;\n          break;\n        case \"Droite\":\n          radiusHorz = shape.height / 2;\n          rectLength = shape.width - 2 * radiusHorz;\n          textAlign = \"left\";\n          textBaseline = \"middle\";\n          posX = shape.x + rectLength / 2 + margin / 2;\n          break;\n        case \"Droite_Gauche\":\n          radiusHorz = shape.height / 2;\n          rectLength = shape.width - 2 * radiusHorz;\n          textBaseline = \"middle\";\n          if (suffix === \"1\") {\n            textAlign = \"right\";\n            posX = shape.x - rectLength / 2 - margin / 2;\n          } else {\n            textAlign = \"left\";\n            posX = shape.x + rectLength / 2 + margin / 2;\n          }\n          break;\n      }\n      break;\n  }\n\n  // Dessin du texte NOIR (numéro et tiret)\n  ctx.textAlign = textAlign;\n  ctx.textBaseline = textBaseline;\n  ctx.fillStyle = \"#000\";\n  ctx.fillText(prefixText, posX, posY);\n\n  // Dessin du texte BLEU (correspondance) sur la ligne suivante\n  ctx.fillStyle = \"#0070C0\";\n  ctx.fillText(correspondance, posX, posY + lineHeight);\n\n  ctx.restore();\n}\n\nfunction drawAllShapes() {\n  if (!isInitialized || !currentData) return;\n\n  if (animationFrameId) {\n    cancelAnimationFrame(animationFrameId);\n  }\n\n  animationFrameId = requestAnimationFrame(() => {\n    if (!canvas || !ctx || !currentData) return;\n\n    // Clear et fond\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.fillStyle = isPdfExportMode ? \"#ffffff\" : \"#f8f8f8\";\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n    // Transformations\n    ctx.save();\n    ctx.translate(panX, panY);\n    ctx.scale(zoom, zoom);\n\n    const scale = 2;\n    const maxY = canvas.height - 100;\n    const Ecart45Points = 5 * scale;\n\n    // Dessin des formes\n    currentData.shapes.forEach((type, i) => {\n      if (!type) return;\n\n      const numero = currentData.numbers[i] || i + 1;\n      const width = parseFloat(currentData.widths[i]) * scale;\n      const height = parseFloat(currentData.heights[i]) * scale;\n      const centerX = parseFloat(currentData.centersX[i]) * scale + 50;\n      const centerY = maxY - parseFloat(currentData.centersY[i]) * scale;\n      const orientation = currentData.orientations[i] || \"\";\n\n      if (isNaN(width) || isNaN(height)) return;\n\n      const isHovered = hoveredItem?.type === \"shape\" && hoveredItem.index === i;\n      const isSelected = selectedItem?.type === \"shape\" && selectedItem.index === i;\n\n      // Style\n      ctx.strokeStyle = isSelected ? \"#0066cc\" : isHovered ? \"#0099ff\" : \"#000\";\n      ctx.lineWidth = (isSelected ? 3 : isHovered ? 2 : 1.5) / zoom;\n      ctx.fillStyle = isSelected ? \"rgba(0, 102, 204, 0.1)\" : isHovered ? \"rgba(0, 153, 255, 0.05)\" : \"transparent\";\n\n      // Rectangles\n      if (type.match(/KB|KCV|KCH|KCVH|KS3P|KSDH/)) {\n        ctx.beginPath();\n        ctx.rect(centerX - width / 2, centerY - height / 2, width, height);\n        ctx.fill();\n        ctx.stroke();\n\n        addNumberToShape(ctx, { type: \"rectangle\", x: centerX, y: centerY, width, height }, numero, type);\n\n        if (isSelected) {\n          drawShapeLabel(ctx, type, centerX, centerY);\n        }\n      }\n      // Cercles\n      else if (type.includes(\"Rond\")) {\n        ctx.beginPath();\n        ctx.ellipse(centerX, centerY, width / 2, width / 2, 0, 0, Math.PI * 2);\n        ctx.fill();\n        ctx.stroke();\n\n        addNumberToShape(ctx, { type: \"circle\", x: centerX, y: centerY, radius: width / 2 }, numero, type,\"\",1);\n\n        if (isSelected) {\n          drawShapeLabel(ctx, type, centerX, centerY);\n        }\n      }\n      // CCR\n      else if (type.includes(\"CCR\")) {\n        const isDouble = orientation.includes(\"Haut_et_bas\") || orientation.includes(\"Droite_Gauche\");\n        const currentWidth = orientation.match(/Droite|Gauche/) ? height : width;\n        const currentHeight = orientation.match(/Droite|Gauche/) ? width : height;\n        const radius = currentWidth / 2;\n\n        ctx.save();\n        ctx.translate(centerX, centerY);\n\n        if (orientation.includes(\"Droite\")) ctx.rotate(Math.PI / 2);\n        else if (orientation.includes(\"Gauche\")) ctx.rotate(-Math.PI / 2);\n        else if (orientation.includes(\"Bas\")) ctx.rotate(Math.PI);\n\n        if (isDouble) {\n          // Double alcôve\n          drawSemiCircle(ctx, 0, -currentHeight / 2 + radius + Ecart45Points, radius, true);\n          drawSemiCircle(ctx, 0, currentHeight / 2 - radius - Ecart45Points, radius, false);\n\n          ctx.beginPath();\n          ctx.moveTo(-radius, -currentHeight / 2 + radius + Ecart45Points);\n          ctx.lineTo(-radius, currentHeight / 2 - radius - Ecart45Points);\n          ctx.stroke();\n\n          ctx.beginPath();\n          ctx.moveTo(radius, -currentHeight / 2 + radius + Ecart45Points);\n          ctx.lineTo(radius, currentHeight / 2 - radius - Ecart45Points);\n          ctx.stroke();\n\n          ctx.restore();\n\n          addNumberToShape(\n            ctx,\n            { type: \"ccr\", x: centerX, y: centerY, width: currentWidth, height: currentHeight },\n            numero,\n            type,\n            orientation,\n            \"1\"\n          );\n\n          addNumberToShape(\n            ctx,\n            { type: \"ccr\", x: centerX, y: centerY, width: currentWidth, height: currentHeight },\n            numero,\n            type,\n            orientation,\n            \"2\"\n          );\n        } else {\n          // Alcôve simple\n          drawSemiCircle(ctx, 0, -currentHeight / 2 + radius + Ecart45Points, radius, true);\n\n          ctx.beginPath();\n          ctx.moveTo(-radius, -currentHeight / 2 + radius + Ecart45Points);\n          ctx.lineTo(-radius, currentHeight / 2);\n          ctx.lineTo(radius, currentHeight / 2);\n          ctx.lineTo(radius, -currentHeight / 2 + radius + Ecart45Points);\n          ctx.stroke();\n\n          ctx.restore();\n          addNumberToShape(\n            ctx,\n            { type: \"ccr\", x: centerX, y: centerY, width: currentWidth, height: currentHeight },\n            numero,\n            type,\n            orientation,\n            \"1\"\n          );\n        }\n\n        if (isSelected) {\n          drawShapeLabel(ctx, type, centerX, centerY);\n        }\n      }\n    });\n\n    // Dessiner les points de perçage\n    if (drillingPoints && drillingPoints.length > 0) {\n      drillingPoints.forEach((point, index) => {\n        if (!point) return;\n\n        const isHovered = hoveredItem?.type === \"drilling\" && hoveredItem.index === index;\n        const isSelected = selectedItem?.type === \"drilling\" && selectedItem.index === index;\n\n        drawDrillingPoint(point.x, point.y, isHovered, isSelected);\n\n        if (isSelected) {\n          drawPointLabel(ctx, `X: ${(point.x - 50) / scale}, Y: ${(maxY - point.y) / scale}`, point.x, point.y);\n        }\n      });\n    }\n    ctx.restore();\n  });\n}\n\nfunction drawShapeLabel(ctx, text, x, y) {\n  ctx.save();\n  ctx.font = `${Math.max(10, 12 / zoom)}px Arial`;\n  ctx.fillStyle = \"#0066cc\";\n  ctx.textAlign = \"center\";\n  ctx.fillText(text, x, y - 15 / zoom);\n  ctx.restore();\n}\n\nasync function getShapeDataFromExcel() {\n  try {\n    return await Excel.run(async (context) => {\n      const dataSheet = context.workbook.worksheets.getItem(\"Feuil1\");\n\n      // Ranges existantes (votre code original)\n      const shapesRange = dataSheet.getRange(\"B37:B160\");\n      const widthsRange = dataSheet.getRange(\"F37:F160\");\n      const centersXRange = dataSheet.getRange(\"G37:G160\");\n      const heightsRange = dataSheet.getRange(\"I37:I160\");\n      const centersYRange = dataSheet.getRange(\"J37:J160\");\n      const orientationsRange = dataSheet.getRange(\"D37:D160\");\n      const numbersRange = dataSheet.getRange(\"A37:A160\");\n\n      // Récupération des correspondances (colonnes A et B, lignes 8-32)\n      const correspondancesRange = dataSheet.getRange(\"A8:B32\");\n\n      // Chargement des valeurs\n      shapesRange.load(\"values\");\n      widthsRange.load(\"values\");\n      centersXRange.load(\"values\");\n      heightsRange.load(\"values\");\n      centersYRange.load(\"values\");\n      orientationsRange.load(\"values\");\n      numbersRange.load(\"values\");\n      correspondancesRange.load(\"values\");\n\n      await context.sync();\n\n      // Vérification des données de base\n      if (!shapesRange.values || shapesRange.values.length === 0) {\n        throw new Error(\"Aucune donnée dans la plage des formes (B37:B160)\");\n      }\n\n      // Transformation des correspondances au format {type, label}\n      let correspondances = [];\n      if (correspondancesRange.values && correspondancesRange.values.length > 0) {\n        correspondances = correspondancesRange.values\n          .map((row) => ({\n            label: row[0] || \"?\", // Colonne A (texte)\n            type: row[1] || \"\" // Colonne B (type)\n          }))\n          .filter((item) => item.type); // On filtre les lignes vides\n      }\n\n      return {\n        shapes: shapesRange.values.flat(),\n        widths: widthsRange.values.flat(),\n        centersX: centersXRange.values.flat(),\n        heights: heightsRange.values.flat(),\n        centersY: centersYRange.values.flat(),\n        orientations: orientationsRange.values.flat(),\n        numbers: numbersRange.values.flat(),\n        correspondances: correspondances\n      };\n    });\n  } catch (error) {\n    console.error(\"Erreur dans getShapeDataFromExcel:\", error);\n    OfficeHelpers.UI.notify(\"Erreur lors de la récupération des données. Vérifiez Feuil1.\");\n    return null;\n  }\n}\n\nasync function generate2DPlanInTaskPane() {\n  if (appState.currentScreen !== \"drilling\") {\n    showScreen(\"drilling\");\n  }\n  try {\n    const button = document.getElementById(\"generate-recenter-btn\");\n    button.disabled = true;\n    button.textContent = \"Chargement...\";\n\n    // Réinitialiser l'état avant de commencer\n    currentData = null;\n    isInitialized = false;\n\n    // Forcer un rendu vide immédiat\n    initEmptyCanvas();\n\n    currentData = await getShapeDataFromExcel();\n    if (!currentData) {\n      throw new Error(\"Aucune donnée valide reçue d'Excel\");\n    }\n\n    // Initialiser le canvas interactif\n    initInteractiveCanvas();\n\n    // Forcer le premier rendu\n    drawAllShapes();\n\n    button.textContent = \"Recentrer\";\n    button.style.backgroundColor = \"#fd7e14\";\n    button.disabled = false;\n\n    return true;\n  } catch (error) {\n    console.error(\"Erreur:\", error);\n    const button = document.getElementById(\"generate-recenter-btn\");\n    if (button) {\n      button.textContent = \"Générer le plan 2D\";\n      button.style.backgroundColor = \"#0078d7\";\n      button.disabled = false;\n    }\n    showError(\"Erreur lors du chargement. Vérifiez les données Excel.\");\n    return false;\n  }\n}\n\nfunction initEmptyCanvas() {\n  const container = document.getElementById(\"drawing-area\");\n  container.innerHTML = \"\";\n\n  canvas = document.createElement(\"canvas\");\n  canvas.width = container.offsetWidth;\n  canvas.height = container.offsetHeight;\n  container.appendChild(canvas);\n\n  ctx = canvas.getContext(\"2d\");\n  canvas.style.cursor = \"default\";\n\n  // Dessiner un fond propre\n  ctx.fillStyle = \"#f8f8f8\";\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n  createTooltipElement();\n  isInitialized = false;\n}\n\nasync function tri_Optimise() {\n  try {\n    await Excel.run(async (context) => {\n      const sheet = context.workbook.worksheets.getItem(\"ACCUEIL\");\n\n      // 1. Nettoyage de la plage BR13:CE109\n      const rangeToClear = sheet.getRange(\"BR13:CE109\");\n      rangeToClear.clear();\n\n      // 2. Copie des valeurs de AC13:AC109 vers I13:I109\n      const sourceRange1 = sheet.getRange(\"AC13:AC109\");\n      sourceRange1.load(\"values\");\n      await context.sync();\n\n      const destRange1 = sheet.getRange(\"I13:I109\");\n      destRange1.values = sourceRange1.values;\n\n      // 3. Copie des plages combinées vers BR13:CE109\n      const rangeA = sheet.getRange(\"A13:A109\");\n      const rangeI = sheet.getRange(\"I13:I109\");\n      const rangeM = sheet.getRange(\"M13:T109\");\n      const rangeY = sheet.getRange(\"Y13:AB109\");\n\n      // Charger toutes les valeurs\n      rangeA.load(\"values\");\n      rangeI.load(\"values\");\n      rangeM.load(\"values\");\n      rangeY.load(\"values\");\n      await context.sync();\n\n      // Combiner les données\n      const combinedValues = [];\n      const rowCount = 97; // 109-13+1\n\n      for (let i = 0; i < rowCount; i++) {\n        const row = [];\n        // Colonne A\n        row.push(rangeA.values[i][0]);\n        // Colonne I\n        row.push(rangeI.values[i][0]);\n        // Colonnes M à T (8 colonnes)\n        for (let j = 0; j < 8; j++) {\n          row.push(rangeM.values[i][j]);\n        }\n        // Colonnes Y à AB (4 colonnes)\n        for (let j = 0; j < 4; j++) {\n          row.push(rangeY.values[i][j]);\n        }\n        combinedValues.push(row);\n      }\n\n      // Écrire les valeurs combinées\n      const destRange = sheet.getRange(\"BR13:CE109\");\n      destRange.values = combinedValues;\n\n      // Solution alternative: trier après avoir récupéré les données\n      destRange.load(\"values\");\n      await context.sync();\n\n      const sortColumnIndex = 1; // BS est la 2ème colonne (0-based index 1)\n      const customOrder = {\n        \"KIT DE BASE  -  KB\": 0,\n        \"KIT CONTIGU VERTICAL - KCV\": 1,\n        \"KIT CONTIGU HORIZONTAL - KCH\": 2,\n        \"KIT CONTIGU VERTICAL ET HORIZONTAL - KCVH\": 3,\n        \"KIT SPÉCIAL 3 POINTS - KS3P\": 4\n      };\n\n      const sortedValues = [...destRange.values];\n      sortedValues.sort((a, b) => {\n        const valA = a[sortColumnIndex] || \"\";\n        const valB = b[sortColumnIndex] || \"\";\n        return (customOrder[valA] || 99) - (customOrder[valB] || 99);\n      });\n\n      destRange.values = sortedValues;\n\n      // 5. Ajustement de la largeur de la colonne BS\n      sheet.getRange(\"BS:BS\").format.columnWidth = 36.13;\n\n      await context.sync();\n    });\n  } catch (error) {\n    console.error(\"Error:\", error);\n    OfficeHelpers.UI.notify(error);\n  }\n}\n\nasync function calculerMesKits() {\n  const button = document.getElementById(\"calculate-kits-btn\");\n  const originalText = button.textContent;\n  const originalBgColor = button.style.backgroundColor;\n  let feuillesDeverrouillees = []\n\n  try {\n    // Animation du bouton (gris + texte)\n    button.disabled = true;\n    button.style.backgroundColor = \"#cccccc\";\n    button.textContent = \"Transfert en cours... merci de patienter\";\n\n\n    // Vérifier et gérer la visibilité de la feuille ACCUEIL\n    const accueilVisible = await isSheetVisible(\"ACCUEIL\");\n    \n    if (!accueilVisible) {\n      await unhide(\"ACCUEIL\"); // On affiche ACCUEIL si elle est cachée\n    }\n\n    // Masquer toutes les autres feuilles visibles sauf ACCUEIL\n    await hideAllSheetsExcept(\"ACCUEIL\");\n\n    // Exécution des traitements\n    await tri_Optimise();\n\n    // Déverrouiller les feuilles avant le transfert\n    await setSheetProtection(\"Feuil1\", false, \"Gp4r!74.\");\n    await setSheetProtection(\"RecapTubes\", false, \"Gp4r!74.\");\n    feuillesDeverrouillees = [\"Feuil1\", \"RecapTubes\"]; // Mémoriser les feuilles déverrouillées\n\n    await transfererDonnee();\n    await copierDonneesVersRecapTubes();\n\n    // Si tout s'est bien passé, verrouiller à nouveau\n    await reverrouillerFeuilles(feuillesDeverrouillees);\n    feuillesDeverrouillees = []; // Réinitialiser la liste\n\n    // Succès : bouton vert + icône\n    button.style.backgroundColor = \"#28a745\"; // vert\n    button.textContent = \"✔️ Transfert réalisé avec succès !\";\n\n    // Afficher le message pour passer à l'étape 2\n    showMessage(\"Vous pouvez passer à l'étape 2\");\n\n  } catch (error) {\n    console.error(\"Erreur lors du transfert :\", error);\n\n    // En cas d'erreur, verrouiller les feuilles qui avaient été déverrouillées\n    if (feuillesDeverrouillees.length > 0) {\n      await reverrouillerFeuilles(feuillesDeverrouillees).catch(e => {\n        console.error(\"Erreur lors du reverrouillage d'urgence :\", e);\n      });\n    }\n\n    // Échec : bouton rouge + icône\n    button.style.backgroundColor = \"#dc3545\"; // rouge\n    button.textContent = \"❌ Erreur lors du transfert\";\n\n  } finally {\n    // Réactivation du bouton après traitement\n    setTimeout(() => {\n      button.disabled = false;\n      button.style.backgroundColor = originalBgColor;\n      button.textContent = originalText;\n    }, 3000); // Attend 3 secondes avant de restaurer\n  }\n}\n\n// Fonction pour reverrouiller plusieurs feuilles\nasync function reverrouillerFeuilles(feuilles) {\n  for (const feuille of feuilles) {\n    try {\n      await setSheetProtection(feuille, true, \"Gp4r!74.\");\n    } catch (erreur) {\n      console.error(`Échec du verrouillage de ${feuille}:`, erreur);\n      // Continuer avec les autres feuilles même si une échoue\n    }\n  }\n}\n\n// Fonction pour gérer la protection des feuilles\nasync function setSheetProtection(sheetName, protect, password) {\n  await Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(sheetName);\n    if (protect) {\n      sheet.protection.protect({\n        allowAutoFilter: true,\n        allowDeleteRows: false,\n        allowFormatCells: false,\n        allowFormatColumns: false,\n        allowFormatRows: false,\n        allowInsertColumns: false,\n        allowInsertRows: false,\n        allowSort: false,\n        selectionMode: \"none\"\n      }, password);\n    } else {\n      sheet.protection.unprotect(password);\n    }\n    await context.sync();\n  });\n}\n\nfunction showMessage(message, duration = 10000) {\n    // Création du conteneur principal avec pseudo-élément pour la transparence\n    const messageDiv = document.createElement(\"div\");\n    messageDiv.style.cssText = `\n        position: fixed;\n        top: 20px;\n        right: 20px;\n        color: white;\n        padding: 12px 40px 12px 20px;\n        border-radius: 6px;\n        z-index: 1000;\n        font-family: 'Segoe UI', system-ui, sans-serif;\n        font-size: 14px;\n        font-weight: 500;\n        box-shadow: 0 4px 12px rgba(0,0,0,0.1);\n        backdrop-filter: blur(6px);\n        border: 1px solid rgba(255,255,255,0.2);\n        animation: fadeIn 0.25s ease-out;\n        cursor: default;\n        max-width: 300px;\n        line-height: 1.5;\n        overflow: hidden;\n    `;\n\n    // Ajout du fond avec opacité séparée\n    const bgDiv = document.createElement(\"div\");\n    bgDiv.style.cssText = `\n        position: absolute;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        background-color: #28a745;\n        opacity: 0.6;\n        z-index: -1;\n    `;\n    messageDiv.appendChild(bgDiv);\n\n    // Contenu du message\n    messageDiv.innerHTML += `\n        <span style=\"\n            display: flex;\n            align-items: center;\n            gap: 8px;\n            position: relative;\n            z-index: 1;\n        \">\n            <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n                <path d=\"M22 11.08V12a10 10 0 1 1-5.93-9.14\"></path>\n                <polyline points=\"22 4 12 14.01 9 11.01\"></polyline>\n            </svg>\n            ${message}\n        </span>\n        <span class=\"close-btn\" style=\"\n            position: absolute;\n            top: 10px;\n            right: 10px;\n            width: 16px;\n            height: 16px;\n            cursor: pointer;\n            opacity: 0.7;\n            transition: opacity 0.2s;\n            z-index: 2;\n        \">&times;</span>\n    `;\n\n    // Animations\n    const style = document.createElement(\"style\");\n    style.textContent = `\n        @keyframes fadeIn {\n            from { opacity: 0; transform: translateY(-15px) scale(0.95); }\n            to { opacity: 1; transform: translateY(0) scale(1); }\n        }\n        @keyframes fadeOut {\n            to { opacity: 0; transform: translateY(-15px) scale(0.95); }\n        }\n    `;\n    document.head.appendChild(style);\n\n    document.body.appendChild(messageDiv);\n\n    // Gestion de la fermeture\n    const closeBtn = messageDiv.querySelector(\".close-btn\");\n    let timeoutId;\n\n    const closeMessage = () => {\n        clearTimeout(timeoutId);\n        messageDiv.style.animation = \"fadeOut 0.2s forwards\";\n        setTimeout(() => {\n            messageDiv.remove();\n            style.remove();\n        }, 200);\n    };\n\n    closeBtn.addEventListener(\"click\", closeMessage);\n    closeBtn.addEventListener(\"mouseenter\", () => closeBtn.style.opacity = \"1\");\n    closeBtn.addEventListener(\"mouseleave\", () => closeBtn.style.opacity = \"0.7\");\n\n    // Fermeture automatique\n    timeoutId = setTimeout(closeMessage, duration);\n}\n\n\nasync function transfererDonnee() {\n  try {\n    await Excel.run(async (context) => {\n      const wb = context.workbook;\n      const wsSource = wb.worksheets.getItem(\"ACCUEIL\");\n      const wsDest = wb.worksheets.getItem(\"Feuil1\");\n\n      // Effacer les anciennes données (colonnes A, B, D, F, G, I, J)\n      const columnsToClear = [\"A\", \"B\", \"D\", \"F\", \"G\", \"I\", \"J\"];\n      for (const col of columnsToClear) {\n        wsDest.getRange(`${col}37:${col}436`).clear();\n      }\n      await context.sync();\n\n      // Fonction pour appliquer le formatage (modifiée pour cibler uniquement la cellule)\n      async function applyFormat(sourceCellAddress, targetCell) {\n        const sourceCell = wsDest.getRange(sourceCellAddress);\n\n        // Copier tout le contenu (y compris le style de texte partiel)\n        await targetCell.copyFrom(sourceCell, Excel.RangeCopyType.all, false, false);\n\n        await context.sync();\n      }\n\n      // Mapping global : base + principale + complémentaire\n      const globalMapping = [\n        // Cellules de base\n        { source: \"D2\", dest: \"C4\" },\n        { source: \"D3\", dest: \"E4\" },\n        { source: \"D4\", dest: \"C6\" },\n        { source: \"D5\", dest: \"C3\" },\n        { source: \"D6\", dest: \"C5\" },\n\n        // Données principales (AD13 → AZ13)\n        { source: \"AD13\", dest: \"C8\" },\n        { source: \"AE13\", dest: \"C10\" },\n        { source: \"AF13\", dest: \"C9\" },\n        { source: \"AG13\", dest: \"C11\" },\n        { source: \"AH13\", dest: \"C12\" },\n        { source: \"AI13\", dest: \"C14\" },\n        { source: \"AJ13\", dest: \"C15\" },\n        { source: \"AK13\", dest: \"C16\" },\n        { source: \"AL13\", dest: \"C17\" },\n        { source: \"AM13\", dest: \"C18\" },\n        { source: \"AN13\", dest: \"C19\" },\n        { source: \"AO13\", dest: \"C20\" },\n        { source: \"AP13\", dest: \"C21\" },\n        { source: \"AQ13\", dest: \"C22\" },\n        { source: \"AR13\", dest: \"C24\" },\n        { source: \"AS13\", dest: \"C25\" },\n        { source: \"AT13\", dest: \"C26\" },\n        { source: \"AU13\", dest: \"C27\" },\n        { source: \"AV13\", dest: \"C28\" },\n        { source: \"AW13\", dest: \"C29\" },\n        { source: \"AX13\", dest: \"C30\" },\n        { source: \"AY13\", dest: \"C31\" },\n        { source: \"AZ13\", dest: \"C32\" },\n\n        // Données complémentaires (BA13 → BI13)\n        { source: \"BA13\", dest: \"D14\" },\n        { source: \"BB13\", dest: \"D15\" },\n        { source: \"BC13\", dest: \"D16\" },\n        { source: \"BD13\", dest: \"D17\" },\n        { source: \"BE13\", dest: \"D18\" },\n        { source: \"BF13\", dest: \"D19\" },\n        { source: \"BG13\", dest: \"D20\" },\n        { source: \"BH13\", dest: \"D21\" },\n        { source: \"BI13\", dest: \"D22\" }\n      ];\n\n      // Charger toutes les plages source\n      const globalSourceRanges = globalMapping.map((m) => wsSource.getRange(m.source));\n      globalSourceRanges.forEach((r) => r.load(\"values\"));\n      await context.sync();\n\n      // Écrire les valeurs dans les plages cibles\n      for (let i = 0; i < globalMapping.length; i++) {\n        wsDest.getRange(globalMapping[i].dest).values = globalSourceRanges[i].values;\n      }\n\n      // Créer un objet pour stocker les positions (A8:A32)\n      const aRange = wsDest.getRange(\"A8:A32\");\n      const bRange = wsDest.getRange(\"B8:B32\");\n      aRange.load(\"text\");\n      bRange.load(\"text\");\n      await context.sync();\n\n      const colPositions = {};\n      for (let i = 0; i < aRange.text.length; i++) {\n        const key = aRange.text[i][0]?.trim() || \"\";\n        if (key) colPositions[key] = i + 8; // Stocke la ligne (8 à 32)\n      }\n\n      // Trouver la dernière ligne source\n      const colA = wsSource.getRange(\"A13:A436\");\n      colA.load(\"values\");\n      await context.sync();\n\n      let lastRow = 13;\n      for (let i = colA.values.length - 1; i >= 0; i--) {\n        if (colA.values[i][0] !== null && colA.values[i][0] !== \"\") {\n          lastRow = 13 + i;\n          break;\n        }\n      }\n\n      if (lastRow < 13) return;\n\n      // Charger les données complètes\n      const fullRange = wsSource.getRange(`A13:I${lastRow}`);\n      fullRange.load(\"values\");\n      await context.sync();\n\n      const rows = fullRange.values;\n      const colDonnees = [];\n\n      for (let i = 0; i < rows.length; i++) {\n        const [a, b, c, d, e, f, g, h, iCol] = rows[i];\n        const typeCaisson = b;\n        let cle = (iCol + \"\").trim();\n\n        if (cle.includes(\"-\")) cle = cle.split(\"-\")[1].trim();\n\n        let pos = 99;\n        let bVal = cle;\n\n        if (colPositions.hasOwnProperty(cle)) {\n          pos = colPositions[cle];\n          bVal = bRange.text[pos - 8][0];\n        }\n\n        // Ajout des données dans l'ordre: Position, B, H, G, F, E, D, A\n        colDonnees.push([pos - 7, bVal, h, g, f, e, d, a]);\n\n        // Traitement spécial pour les caissons avec alcove\n        if (typeCaisson === \"Caisson avec alcove\" && !isNaN(c)) {\n          const valCCR = `CCR${parseFloat(c) / 2}`;\n          if (colPositions[valCCR]) {\n            const posCCR = colPositions[valCCR];\n            const bCCR = bRange.text[posCCR - 8][0];\n            colDonnees.push([posCCR - 7, bCCR, h, g, f, e, d, a]);\n          }\n        }\n\n        // Traitement spécial pour les caissons avec rond\n        if (typeCaisson === \"Caisson avec rond\" && !isNaN(c)) {\n          const valKR = `KR${parseFloat(c) / 2}`;\n          if (colPositions[valKR]) {\n            const posKR = colPositions[valKR];\n            const bKR = bRange.text[posKR - 8][0];\n            colDonnees.push([posKR - 7, bKR, h, c, f, c, d, a]);\n          }\n        }\n      }\n\n      // Trier les données par position (colonne 0)\n      colDonnees.sort((a, b) => a[0] - b[0]);\n\n      // Écriture finale (A37:Hn) avec formatage\n      for (let i = 0; i < colDonnees.length; i++) {\n        const destRow = 37 + i;\n        const currentData = colDonnees[i];\n\n        // Écrire les valeurs\n        wsDest.getRange(`A${destRow}`).values = [[currentData[7]]];\n        wsDest.getRange(`B${destRow}`).values = [[currentData[1]]];\n        wsDest.getRange(`J${destRow}`).values = [[currentData[2]]];\n        wsDest.getRange(`I${destRow}`).values = [[currentData[3]]];\n        wsDest.getRange(`G${destRow}`).values = [[currentData[4]]];\n        wsDest.getRange(`F${destRow}`).values = [[currentData[5]]];\n        wsDest.getRange(`D${destRow}`).values = [[currentData[6]]];\n\n        // Appliquer le format uniquement sur colonne B si correspondance trouvée\n        if (currentData[0] !== 99) {\n          const sourceRow = currentData[0] + 7;\n          await applyFormat(`B${sourceRow}`, wsDest.getRange(`B${destRow}`));\n        }\n      }\n\n      await context.sync();\n    });\n  } catch (error) {\n    console.error(\"Erreur :\", error);\n    if (error.debugInfo) console.error(\"Détails :\", error.debugInfo);\n  }\n}\n\n\nasync function copierDonneesVersRecapTubes() {\n  await Excel.run(async (context) => {\n    const feuilleSource = context.workbook.worksheets.getItem(\"Feuil1\");\n    const feuilleDestination = context.workbook.worksheets.getItem(\"RecapTubes\");\n\n    // Sélectionne la plage B37:B170 de la feuille source\n    const plageSource = feuilleSource.getRange(\"B37:B170\");\n    plageSource.load(\"values\"); // Charger les valeurs\n\n    await context.sync();\n\n    // Colle les données à partir de la cellule B14 sur la feuille \"RecapTubes\"\n    const plageDestination = feuilleDestination.getRange(\"B14\").getResizedRange(133, 0); // 134 lignes\n    \n    // Copier tout le contenu (valeurs + mise en forme) comme dans transfererDonnee()\n    await plageDestination.copyFrom(\n      plageSource, \n      Excel.RangeCopyType.all, // Copie tout (valeurs, format, formules, etc.)\n      false, // Pas de référence spatiale\n      false  // Pas de référence absolue\n    );\n\n    await context.sync();\n  });\n}\n\n\nfunction createTooltipElement() {\n  tooltipElement = document.createElement(\"div\");\n  tooltipElement.className = \"canvas-tooltip\";\n  document.getElementById(\"drawing-area\").appendChild(tooltipElement);\n}\n\nfunction showError(message) {\n  const errorDiv = document.getElementById(\"error-message\");\n  if (errorDiv) {\n    errorDiv.textContent = message;\n    errorDiv.style.display = \"block\";\n  }\n}\n\nfunction initInteractiveCanvas() {\n  const container = document.getElementById(\"drawing-area\");\n  if (!container) {\n    console.error(\"Element 'drawing-area' non trouvé\");\n    return;\n  }\n\n  // Recréer complètement le canvas\n  container.innerHTML = \"\";\n  canvas = document.createElement(\"canvas\");\n  if (isPdfExportMode) {\n    canvas.width = 1020;\n    canvas.height = 700;\n  } else {\n    canvas.width = container.offsetWidth;\n    canvas.height = container.offsetHeight;\n  }\n  container.appendChild(canvas);\n\n  ctx = canvas.getContext(\"2d\");\n  canvas.style.cursor = \"grab\";\n\n  // Réinitialiser les événements\n  canvas.removeEventListener(\"wheel\", handleWheel);\n  canvas.removeEventListener(\"mousedown\", startDrag);\n  canvas.removeEventListener(\"mousemove\", handleHover);\n  canvas.removeEventListener(\"click\", handleClick);\n  canvas.removeEventListener(\"mouseup\", endDrag);\n  canvas.removeEventListener(\"mouseleave\", endDrag);\n\n  // Nouveaux événements\n  canvas.addEventListener(\"wheel\", handleWheel);\n  canvas.addEventListener(\"mousedown\", (e) => {\n    startDrag(e);\n    e.preventDefault();\n  });\n  canvas.addEventListener(\"mousemove\", (e) => {\n    if (isDragging) {\n      drag(e);\n    } else {\n      handleHover(e);\n    }\n  });\n  canvas.addEventListener(\"click\", handleClick);\n  canvas.addEventListener(\"mouseup\", endDrag);\n  canvas.addEventListener(\"mouseleave\", endDrag);\n\n  // Centrer la vue et forcer le rendu\n  centerView();\n  isInitialized = true;\n  drawAllShapes();\n}\n\nfunction resetView() {\n  // Réinitialiser toutes les variables\n  zoom = 1;\n  panX = 0;\n  panY = 0;\n  hoveredItem = null;\n  selectedItem = null;\n  drillingPoints = [];\n  lastSelectedIndex = 0;\n  selectionCycle = [];\n  currentData = null;\n  isInitialized = false;\n\n  // Réinitialiser le bouton\n  const button = document.getElementById(\"generate-recenter-btn\");\n  button.textContent = \"Générer le plan 2D\";\n  button.style.backgroundColor = \"#0078d7\"; // Bleu\n\n  // Réinitialiser le canvas\n  initEmptyCanvas();\n\n  // Cacher le tooltip et les erreurs\n  if (tooltipElement) {\n    tooltipElement.style.display = \"none\";\n  }\n\n  const errorDiv = document.getElementById(\"error-message\");\n  if (errorDiv) {\n    errorDiv.style.display = \"none\";\n    errorDiv.textContent = \"\";\n  }\n}\n\nfunction centerView() {\n  if (!currentData) return;\n\n  let minX = Infinity,\n    maxX = -Infinity,\n    minY = Infinity,\n    maxY = -Infinity;\n  const scale = 2;\n  const yOffset = canvas.height - 100;\n\n  for (let i = 0; i < currentData.shapes.length; i++) {\n    if (!currentData.shapes[i]) continue;\n\n    const centerX = parseFloat(currentData.centersX[i]) * scale + 50;\n    const centerY = yOffset - parseFloat(currentData.centersY[i]) * scale;\n    const width = parseFloat(currentData.widths[i]) * scale;\n    const height = parseFloat(currentData.heights[i]) * scale;\n\n    minX = Math.min(minX, centerX - width / 2);\n    maxX = Math.max(maxX, centerX + width / 2);\n    minY = Math.min(minY, centerY - height / 2);\n    maxY = Math.max(maxY, centerY + height / 2);\n  }\n\n  const drawingWidth = maxX - minX;\n  const drawingHeight = maxY - minY;\n\n  zoom = Math.min(canvas.width / (drawingWidth * 1.1), canvas.height / (drawingHeight * 1.1));\n\n  panX = (canvas.width - drawingWidth * zoom) / 2 - minX * zoom;\n  panY = (canvas.height - drawingHeight * zoom) / 2 - minY * zoom;\n}\n\nfunction drawDrillingPoint(x, y, isHovered = false, isSelected = false) {\n  const baseSize = 5 / zoom;\n  const size = isSelected ? baseSize * 1.8 : isHovered ? baseSize * 1.4 : baseSize;\n\n  ctx.beginPath();\n  ctx.arc(x, y, size, 0, Math.PI * 2);\n  ctx.fillStyle = isSelected ? \"#cc0000\" : isHovered ? \"#ff3333\" : \"red\";\n  ctx.fill();\n  ctx.strokeStyle = \"#fff\";\n  ctx.lineWidth = 0.5 / zoom;\n  ctx.stroke();\n}\n\nfunction drawPointLabel(ctx, text, x, y) {\n  ctx.save();\n  ctx.font = `${Math.max(8, 10 / zoom)}px Arial`;\n  ctx.fillStyle = \"#cc0000\";\n  ctx.textAlign = \"center\";\n  ctx.fillText(text, x, y - 10 / zoom);\n  ctx.restore();\n}\n\nfunction handleHover(e) {\n  if (!isInitialized || isDragging) return; // Ignore si déplacement en cours\n\n  const mousePos = getMousePos(canvas, e);\n  const pos = screenToCanvas(mousePos.x, mousePos.y);\n\n  // Vérifier d'abord les points de perçage\n  let foundItem = checkDrillingPointsHit(pos);\n\n  // Si aucun point trouvé, vérifier les formes\n  if (!foundItem) {\n    foundItem = checkShapesHit(pos);\n  }\n\n  // Mettre à jour l'élément survolé seulement si différent\n  if (!hoveredItem || !foundItem || hoveredItem.type !== foundItem.type || hoveredItem.index !== foundItem.index) {\n    hoveredItem = foundItem;\n    drawAllShapes();\n  }\n\n  updateTooltip(e, foundItem);\n}\n\nfunction checkDrillingPointsHit(pos) {\n  if (!drillingPoints || drillingPoints.length === 0) return null;\n\n  const hitRadius = 10 / zoom;\n\n  // Parcourir en sens inverse pour prioriser les derniers points ajoutés\n  for (let i = drillingPoints.length - 1; i >= 0; i--) {\n    const point = drillingPoints[i];\n    if (!point) continue;\n\n    const dist = Math.sqrt(Math.pow(pos.x - point.x, 2) + Math.pow(pos.y - point.y, 2));\n    if (dist < hitRadius) {\n      return { type: \"drilling\", index: i };\n    }\n  }\n  return null;\n}\n\nfunction checkShapesHit(pos) {\n  const scale = 2;\n  const maxY = canvas.height - 100;\n  const hitShapes = [];\n\n  for (let i = 0; i < currentData.shapes.length; i++) {\n    if (!currentData.shapes[i]) continue;\n\n    const centerX = parseFloat(currentData.centersX[i]) * scale + 50;\n    const centerY = maxY - parseFloat(currentData.centersY[i]) * scale;\n    const width = parseFloat(currentData.widths[i]) * scale;\n    const height = parseFloat(currentData.heights[i]) * scale;\n    const orientation = currentData.orientations[i] || \"\";\n\n    if (isPointInShape(pos, currentData.shapes[i], centerX, centerY, width, height, orientation)) {\n      hitShapes.push({\n        type: \"shape\",\n        index: i,\n        shapeType: currentData.shapes[i],\n        // Nouveau: on stocke les dimensions pour le calcul de priorité\n        width: width,\n        height: height,\n        centerX: centerX,\n        centerY: centerY\n      });\n    }\n  }\n\n  // Tri des formes touchées selon de nouvelles règles de priorité\n  return (\n    hitShapes.sort((a, b) => {\n      // 1. Priorité aux formes les plus petites (plus précises)\n      const areaA = a.width * a.height;\n      const areaB = b.width * b.height;\n\n      // 2. Si les aires sont similaires, priorité aux CCR\n      if (Math.abs(areaA - areaB) < 100) {\n        const isCCRA = a.shapeType.includes(\"CCR\");\n        const isCCRB = b.shapeType.includes(\"CCR\");\n        if (isCCRA && !isCCRB) return -1;\n        if (!isCCRA && isCCRB) return 1;\n      }\n\n      // 3. Par défaut, la plus petite d'abord\n      return areaA - areaB;\n    })[0] || null\n  );\n}\n\nfunction getShapePriority(shapeType) {\n  if (shapeType.includes(\"CCR\")) return 3;\n  if (shapeType.includes(\"Kit Rond\")) return 2;\n  return 1; // Rectangles et autres\n}\n\nfunction isPointInShape(pos, shapeType, centerX, centerY, width, height, orientation) {\n  // Nouveau: marge pour la détection du contour\n  const margin = 2 / zoom; // Ajustable selon le zoom\n\n  // Rectangle ou Kit de base\n  if (shapeType.includes(\"Kit de base\") || shapeType.includes(\"Kit contigu\") || shapeType.includes(\"Kit spécial\")) {\n    return isPointInRectWithMargin(pos, centerX, centerY, width, height, margin);\n  }\n  // Cercle\n  else if (shapeType.includes(\"Kit Rond\")) {\n    return isPointInCircleWithMargin(pos, centerX, centerY, width / 2, margin);\n  }\n  // CCR\n  else if (shapeType.includes(\"CCR\")) {\n    return isPointInCCRWithMargin(pos, centerX, centerY, width, height, orientation, margin);\n  }\n\n  return false;\n}\n\n// Nouvelle fonction helper pour les rectangles avec marge\nfunction isPointInRectWithMargin(pos, centerX, centerY, width, height, margin) {\n  const left = centerX - width / 2 - margin;\n  const right = centerX + width / 2 + margin;\n  const top = centerY - height / 2 - margin;\n  const bottom = centerY + height / 2 + margin;\n\n  return pos.x >= left && pos.x <= right && pos.y >= top && pos.y <= bottom;\n}\n\n// Nouvelle fonction helper pour les cercles avec marge\nfunction isPointInCircleWithMargin(pos, centerX, centerY, radius, margin) {\n  const dx = pos.x - centerX;\n  const dy = pos.y - centerY;\n  const distance = Math.sqrt(dx * dx + dy * dy);\n\n  return distance <= radius + margin;\n}\n\nfunction isPointInCCRWithMargin(pos, centerX, centerY, width, height, orientation, margin) {\n  const Ecart45Points = 5 * 2;\n  const radius = width / 2;\n  let relativeX = pos.x - centerX;\n  let relativeY = pos.y - centerY;\n\n  // Rotation inverse selon l'orientation\n  if (orientation.includes(\"Droite\")) {\n    [relativeX, relativeY] = [relativeY, -relativeX];\n  } else if (orientation.includes(\"Gauche\")) {\n    [relativeX, relativeY] = [-relativeY, relativeX];\n  } else if (orientation.includes(\"Bas\")) {\n    [relativeX, relativeY] = [-relativeX, -relativeY];\n  }\n\n  const isDouble = orientation.includes(\"Haut_et_bas\") || orientation.includes(\"Droite_Gauche\");\n  const topPartY = -height / 2 + radius + Ecart45Points;\n  const bottomPartY = height / 2 - radius - Ecart45Points;\n\n  // Vérifier la partie supérieure (demi-cercle)\n  if (relativeY < topPartY + margin) {\n    const dx = relativeX;\n    const dy = relativeY - topPartY;\n    const distance = Math.sqrt(dx * dx + dy * dy);\n    // Vérifier si on est dans le demi-cercle OU près du contour\n    return (\n      dx * dx + dy * dy <= (radius + margin) * (radius + margin) &&\n      relativeX >= -radius - margin &&\n      relativeX <= radius + margin\n    );\n  }\n\n  // Pour les CCR doubles, vérifier la partie inférieure\n  if (isDouble && relativeY > bottomPartY - margin) {\n    const dx = relativeX;\n    const dy = relativeY - bottomPartY;\n    const distance = Math.sqrt(dx * dx + dy * dy);\n    return (\n      dx * dx + dy * dy <= (radius + margin) * (radius + margin) &&\n      relativeX >= -radius - margin &&\n      relativeX <= radius + margin\n    );\n  }\n\n  // Vérifier la partie centrale rectangulaire\n  const inCentralRect =\n    relativeX >= -radius - margin &&\n    relativeX <= radius + margin &&\n    relativeY >= topPartY - margin &&\n    relativeY <= (isDouble ? bottomPartY + margin : height / 2 + margin);\n\n  // Vérifier si on est près des contours verticaux\n  const nearVerticalBorder =\n    (Math.abs(relativeX + radius) <= margin || Math.abs(relativeX - radius) <= margin) &&\n    relativeY >= topPartY - margin &&\n    relativeY <= (isDouble ? bottomPartY + margin : height / 2 + margin);\n\n  return inCentralRect || nearVerticalBorder;\n}\n\nfunction calculateShapeArea(width, height, shapeType) {\n  if (shapeType.includes(\"Kit Rond\")) {\n    return Math.PI * Math.pow(width / 2, 2);\n  } else if (shapeType.includes(\"CCR\")) {\n    // Pour les CCR, seule une partie est occupée (demi-cercles + rectangle)\n    // On réduit artificiellement l'aire pour prioriser leur sélection\n    return width * height * 0.3; // 30% de l'aire du rectangle englobant\n  }\n  return width * height;\n}\n\nfunction handleClick(e) {\n  if (!isInitialized || isDragging || !canvas) return; // Annule si déplacement en cours\n\n  const mousePos = getMousePos(canvas, e);\n  const pos = screenToCanvas(mousePos.x, mousePos.y);\n\n  // Vérifier d'abord les points de perçage\n  const clickedDrilling = checkDrillingPointsHit(pos);\n  if (clickedDrilling) {\n    selectedItem = clickedDrilling;\n    selectionCycle = [];\n    drawAllShapes();\n    showTooltip(e, selectedItem);\n    return;\n  }\n\n  // Ensuite vérifier les formes\n  const clickedShape = checkShapesHit(pos);\n  if (!clickedShape) {\n    selectedItem = null;\n    selectionCycle = [];\n    drawAllShapes();\n    hideTooltip();\n    return;\n  }\n\n  // Si la forme cliquée est différente de la précédente, réinitialiser le cycle\n  if (!selectedItem || selectedItem.type !== clickedShape.type || selectedItem.index !== clickedShape.index) {\n    selectionCycle = getAllShapesAtPosition(pos);\n    lastSelectedIndex = 0;\n    selectedItem = clickedShape;\n  }\n  // Sinon, faire tourner le cycle\n  else {\n    lastSelectedIndex = (lastSelectedIndex + 1) % selectionCycle.length;\n    selectedItem = selectionCycle[lastSelectedIndex];\n  }\n\n  drawAllShapes();\n  showTooltip(e, selectedItem);\n}\n\nfunction getAllShapesAtPosition(pos) {\n  const scale = 2;\n  const maxY = canvas.height - 100;\n  const hitShapes = [];\n\n  for (let i = 0; i < currentData.shapes.length; i++) {\n    if (!currentData.shapes[i]) continue;\n\n    const centerX = parseFloat(currentData.centersX[i]) * scale + 50;\n    const centerY = maxY - parseFloat(currentData.centersY[i]) * scale;\n    const width = parseFloat(currentData.widths[i]) * scale;\n    const height = parseFloat(currentData.heights[i]) * scale;\n\n    if (isPointInShape(pos, currentData.shapes[i], centerX, centerY, width, height, currentData.orientations[i])) {\n      hitShapes.push({\n        type: \"shape\",\n        index: i,\n        shapeType: currentData.shapes[i],\n        priority: getShapePriority(currentData.shapes[i]),\n        area: calculateShapeArea(width, height, currentData.shapes[i])\n      });\n    }\n  }\n\n  // Tri identique à checkShapesHit\n  return hitShapes.sort((a, b) => {\n    // Priorité la plus haute d'abord\n    if (b.priority !== a.priority) return b.priority - a.priority;\n    // Puis plus petite aire d'abord\n    return a.area - b.area;\n  });\n}\n\nfunction updateTooltip(e, item) {\n  if (!tooltipElement || !item) {\n    hideTooltip();\n    return;\n  }\n\n  const mousePos = getMousePos(canvas, e);\n  tooltipElement.style.left = `${mousePos.x + 15}px`;\n  tooltipElement.style.top = `${mousePos.y + 15}px`;\n\n  if (item.type === \"drilling\") {\n    const point = drillingPoints[item.index];\n    const scale = 2;\n    const maxY = canvas.height - 100;\n    const x = (point.x - 50) / scale;\n    const y = (maxY - point.y) / scale;\n    tooltipElement.textContent = `Point de perçage (${x.toFixed(1)}, ${y.toFixed(1)})`;\n    tooltipElement.style.display = \"block\";\n  } else if (item.type === \"shape\") {\n    tooltipElement.textContent = currentData.shapes[item.index];\n    tooltipElement.style.display = \"block\";\n  }\n}\n\nfunction showTooltip(e, item) {\n  if (!tooltipElement) return;\n  updateTooltip(e, item);\n  tooltipElement.classList.add(\"active\");\n}\n\nfunction hideTooltip() {\n  if (!tooltipElement) return;\n  tooltipElement.style.display = \"none\";\n  tooltipElement.classList.remove(\"active\");\n}\n\nfunction getMousePos(canvas, evt) {\n  if (!canvas) return { x: 0, y: 0 };\n  const rect = canvas.getBoundingClientRect();\n  return {\n    x: evt.clientX - rect.left,\n    y: evt.clientY - rect.top\n  };\n}\n\nfunction screenToCanvas(x, y) {\n  return {\n    x: (x - panX) / zoom,\n    y: (y - panY) / zoom\n  };\n}\n\n// Fonctions pour les points de perçage\nasync function placeDrillingPoints() {\n  try {\n    if (!isInitialized || !currentData) {\n      showError(\"Veuillez d'abord générer le plan 2D en cliquant sur 'Générer le plan 2D'\");\n      return;\n    }\n\n    const button = document.getElementById(\"place-drilling-btn\");\n    if (!button) throw new Error(\"Bouton non trouvé\");\n\n    button.disabled = true;\n    button.textContent = \"Chargement...\";\n\n    const drillingData = await getDrillingDataFromExcel();\n    drawDrillingPoints(drillingData);\n\n    button.textContent = \"Placer les points\";\n    button.disabled = false;\n  } catch (error) {\n    console.error(\"Erreur:\", error);\n    const button = document.getElementById(\"place-drilling-btn\");\n    if (button) {\n      button.textContent = \"Erreur - Réessayer\";\n      button.disabled = false;\n    }\n    showError(\"Erreur lors du placement des points\");\n  }\n}\n\nasync function getDrillingDataFromExcel() {\n  return Excel.run(async (context) => {\n    const sourceSheet = context.workbook.worksheets.getItem(\"Feuil2\");\n    const reportSheet = context.workbook.worksheets.getItem(\"A reporter\");\n\n    const typeRange = sourceSheet.getRange(\"A20:A200\");\n    const kbRange = sourceSheet.getRange(\"B20:I200\");\n    const ccrRange = reportSheet.getRange(\"B5:AG200\");\n    const rondRange = sourceSheet.getRange(\"AR20:BW200\");\n\n    typeRange.load(\"values\");\n    kbRange.load(\"values\");\n    ccrRange.load(\"values\");\n    rondRange.load(\"values\");\n\n    await context.sync();\n\n    return {\n      types: typeRange.values,\n      kbPoints: kbRange.values,\n      ccrPoints: ccrRange.values,\n      rondPoints: rondRange.values\n    };\n  });\n}\n\nfunction drawDrillingPoints(data) {\n  if (!canvas || !ctx || !currentData) {\n    console.error(\"Le canvas n'est pas initialisé\");\n    return;\n  }\n\n  drillingPoints = []; // Réinitialiser les points\n  const scale = 2;\n  const maxY = canvas.height - 100;\n\n  for (let i = 0; i < data.types.length; i++) {\n    if (!data.types[i] || data.types[i][0] === \"\") continue;\n\n    const type = data.types[i][0];\n\n    if (\n      type.includes(\"KB\") ||\n      type.includes(\"KCV\") ||\n      type.includes(\"KCH\") ||\n      type.includes(\"KCVH\") ||\n      type.includes(\"KS3P\") ||\n      type.includes(\"KSDH\")\n    ) {\n      for (let col = 0; col < 8; col += 2) {\n        if (data.kbPoints[i] && data.kbPoints[i][col] !== \"\") {\n          const x = parseFloat(data.kbPoints[i][col]) * scale + 50;\n          const y = maxY - parseFloat(data.kbPoints[i][col + 1]) * scale;\n          drillingPoints.push({ x, y });\n        }\n      }\n    } else if (type.includes(\"CCR\")) {\n      for (let col = 0; col < 32; col += 2) {\n        if (data.ccrPoints[i] && data.ccrPoints[i][col] !== \"\") {\n          const x = parseFloat(data.ccrPoints[i][col]) * scale + 50;\n          const y = maxY - parseFloat(data.ccrPoints[i][col + 1]) * scale;\n          drillingPoints.push({ x, y });\n        }\n      }\n    } else if (type.includes(\"Rond\")) {\n      for (let col = 0; col < 32; col += 2) {\n        if (data.rondPoints[i] && data.rondPoints[i][col] !== \"\") {\n          const x = parseFloat(data.rondPoints[i][col]) * scale + 50;\n          const y = maxY - parseFloat(data.rondPoints[i][col + 1]) * scale;\n          drillingPoints.push({ x, y });\n        }\n      }\n    }\n  }\n\n  // Redessiner tout pour afficher les nouveaux points\n  drawAllShapes();\n}\n\n// Fonctions interactives existantes\nfunction handleWheel(e) {\n  if (!isInitialized || !canvas) return;\n  e.preventDefault();\n  const zoomIntensity = 0.1;\n  const mouseX = e.clientX - canvas.getBoundingClientRect().left;\n  const mouseY = e.clientY - canvas.getBoundingClientRect().top;\n\n  const zoomFactor = e.deltaY < 0 ? 1 + zoomIntensity : 1 - zoomIntensity;\n\n  panX -= mouseX;\n  panY -= mouseY;\n  panX *= zoomFactor;\n  panY *= zoomFactor;\n  panX += mouseX;\n  panY += mouseY;\n\n  zoom *= zoomFactor;\n  drawAllShapes();\n}\n\nfunction startDrag(e) {\n  isDragging = true;\n  lastX = e.clientX;\n  lastY = e.clientY;\n  canvas.style.cursor = \"grabbing\"; // Main fermée\n}\n\nfunction drag(e) {\n  if (!isInitialized || !isDragging || !canvas) return;\n\n  const dx = e.clientX - lastX;\n  const dy = e.clientY - lastY;\n\n  panX += dx;\n  panY += dy;\n\n  lastX = e.clientX;\n  lastY = e.clientY;\n\n  drawAllShapes();\n}\n\nfunction endDrag() {\n  isDragging = false;\n  canvas.style.cursor = \"grab\"; // Main ouverte\n}\n\n// Fonctions de dessin existantes\nfunction drawSemiCircle(ctx, x, y, radius, isUp) {\n  ctx.beginPath();\n  ctx.arc(x, y, radius, Math.PI, isUp ? 0 : 2 * Math.PI, !isUp);\n  ctx.stroke();\n}\n\nfunction drawArc(ctx, x, y, radius, startAngle, endAngle) {\n  ctx.beginPath();\n  ctx.arc(x, y, radius, degToRad(startAngle), degToRad(endAngle), true);\n  ctx.stroke();\n}\n\nfunction degToRad(degrees) {\n  return degrees * (Math.PI / 180);\n}\n\nfunction debugDrawHitAreas() {\n  ctx.save();\n  ctx.strokeStyle = \"rgba(255,0,0,0.3)\";\n  ctx.lineWidth = 1;\n\n  currentData.shapes.forEach((shape, i) => {\n    if (!shape) return;\n\n    const centerX = parseFloat(currentData.centersX[i]) * 2 + 50;\n    const centerY = canvas.height - 100 - parseFloat(currentData.centersY[i]) * 2;\n    const width = parseFloat(currentData.widths[i]) * 2;\n    const height = parseFloat(currentData.heights[i]) * 2;\n\n    if (shape.includes(\"CCR\")) {\n      // Dessiner la zone de hit-test du CCR\n      ctx.beginPath();\n      // ... Logique similaire à isPointInCCRWithMargin ...\n      ctx.stroke();\n    } else {\n      // Dessiner le rectangle englobant\n      ctx.strokeRect(centerX - width / 2, centerY - height / 2, width, height);\n    }\n  });\n\n  ctx.restore();\n}\n"],"names":["_regeneratorRuntime","r","t","e","Object","prototype","n","hasOwnProperty","o","Symbol","i","iterator","a","asyncIterator","u","toStringTag","c","defineProperty","value","enumerable","configurable","writable","h","Generator","create","Error","done","method","arg","delegate","d","f","sent","_sent","dispatchException","abrupt","s","type","Context","call","wrap","GeneratorFunction","GeneratorFunctionPrototype","l","p","getPrototypeOf","y","x","v","g","forEach","_invoke","AsyncIterator","_typeof","resolve","__await","then","return","TypeError","next","w","tryEntries","push","m","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","unshift","pop","values","prev","charAt","slice","stop","rval","complete","finish","catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","canvas","ctx","tooltipElement","appState","currentScreen","zoom","panX","panY","isDragging","lastX","lastY","currentData","drillingPoints","hoveredItem","selectedItem","animationFrameId","lastSelectedIndex","selectionCycle","isInitialized","isPdfExportMode","isFirstClick","lastDataSnapshot","changeDetected","notificationCooldown","hideAllScreens","id","element","document","getElementById","style","display","showScreen","screenName","resetView","initEmptyCanvas","resetProjetComplet","_resetProjetComplet","_callee8","confirmBox","resetBtn","originalBtnText","originalBtnClass","originalBtnColor","feuilleFeuil1Deverrouillee","_context8","textContent","className","backgroundColor","disabled","classList","add","Excel","run","_ref0","_callee7","context","sheets","feuille1","accueilSheet","accueilRange","feuille1Sheet","_context7","workbook","worksheets","getItem","load","sync","protection","protected","setSheetProtection","getRange","clear","ClearApplyTo","contents","formats","dataValidation","all","_x19","remove","innerHTML","setTimeout","t0","console","error","t1","retourAccueilEtMasquerAutresFeuilles","_retourAccueilEtMasquerAutresFeuilles","_callee10","_context10","_ref10","_callee1","_iterator2","_step2","sheet","_context1","visibility","activate","_createForOfIteratorHelper","items","err","_x21","showError","concat","message","unhideSheetsExport","_x","_unhideSheetsExport","_callee12","feuillesAAfficher","_context12","Array","isArray","_ref11","_callee11","allSheets","existingSheets","missingSheets","_context11","map","filter","includes","sheetName","warn","_x22","isSheetVisible","_x2","_isSheetVisible","_callee14","isVisible","_context14","_ref12","_callee13","_context13","_x23","hideAllSheetsExcept","_x3","_hideAllSheetsExcept","_callee16","sheetsToKeepVisible","_context16","_ref13","_callee15","sheetToActivate","_iterator3","_step3","_context15","find","_x24","unhide","_ref3","_callee3","_context3","log","_x5","showDataChangeNotification","notification","createElement","head","appendChild","body","closeBtn","querySelector","addEventListener","opacity","transform","parentNode","preparerExportPDF","_preparerExportPDF","_callee17","button","originalText","originalBgColor","feuilleTempExportDeverrouillee","_context17","FeuilleTempExport","exportCanvasToTemps","_exportCanvasToTemps","_callee19","overlay","exportCanvasPlan","exportCtxPlan","imageDataPlan","exportCanvasPoints","exportCtxPoints","imageDataPoints","_context19","cssText","transition","initInteractiveCanvas","generate2DPlanInTaskPane","requestAnimationFrame","width","height","getContext","imageSmoothingEnabled","drawImage","toDataURL","placeDrillingPoints","_ref14","_callee18","sheet3","shapes3","sheet5","shapes5","_context18","shapes","shape","delete","addImage","split","left","top","_x25","_FeuilleTempExport","_callee21","_context21","_ref15","_callee20","feuillesSource","feuilleDest","currentRow","_i","_feuillesSource","nomFeuille","feuilleSource","rangeUtilisee","lastRow","colonneB","blocValide","endRow","j","_context20","getUsedRange","columnWidth","rowCount","Math","min","copierBlocDonnees","getEntireColumn","format","autofitColumns","_x26","OfficeExtension","JSON","stringify","debugInfo","_x8","_x9","_x0","_x1","_x10","_x11","_x12","_copierBlocDonnees","_callee22","sourceSheet","destSheet","enTeteRange","donnees1Range","donnees2Range","sourceEntete","sourceDonnees1","sourceDonnees2","destEntete","destDonnees1","destDonnees2","_context22","copyFrom","RangeCopyType","String","fromCharCode","columnCount","addNumberToShape","num","typeForme","orientation","undefined","suffix","correspondance","typeUpper","toUpperCase","trim","correspondances","label","prefixText","save","fontSize","max","lineHeight","font","availableWidth","prefixWidth","measureText","corrWidth","maxTextWidth","scaleFactor","availableHeight","totalTextHeight","posX","posY","textAlign","textBaseline","radiusVert","rectHeight","radiusHorz","rectLength","margin","fillStyle","fillText","restore","drawAllShapes","cancelAnimationFrame","clearRect","fillRect","translate","scale","maxY","Ecart45Points","_hoveredItem","_selectedItem","numero","numbers","parseFloat","widths","heights","centerX","centersX","centerY","centersY","orientations","isHovered","index","isSelected","strokeStyle","lineWidth","match","beginPath","rect","fill","stroke","drawShapeLabel","ellipse","PI","radius","isDouble","currentWidth","currentHeight","rotate","drawSemiCircle","moveTo","lineTo","point","_hoveredItem2","_selectedItem2","baseSize","size","arc","drawDrillingPoint","text","drawPointLabel","getShapeDataFromExcel","_getShapeDataFromExcel","_callee24","_context24","_ref16","_callee23","dataSheet","shapesRange","widthsRange","centersXRange","heightsRange","centersYRange","orientationsRange","numbersRange","correspondancesRange","_context23","row","item","flat","_x27","OfficeHelpers","UI","notify","_generate2DPlanInTaskPane","_callee25","_button","_context25","container","offsetWidth","offsetHeight","cursor","tri_Optimise","_tri_Optimise","_callee27","_context27","_ref17","_callee26","sourceRange1","rangeA","rangeI","rangeM","rangeY","combinedValues","_j","destRange","customOrder","sortedValues","_context26","sort","b","valA","valB","_x28","_calculerMesKits","_callee28","feuillesDeverrouillees","_context28","transfererDonnee","copierDonneesVersRecapTubes","reverrouillerFeuilles","showMessage","_x13","_reverrouillerFeuilles","_callee29","feuilles","_iterator4","_step4","feuille","_context29","_x14","_x15","_x16","_setSheetProtection","_callee31","protect","password","_context31","_ref18","_callee30","_context30","allowAutoFilter","allowDeleteRows","allowFormatCells","allowFormatColumns","allowFormatRows","allowInsertColumns","allowInsertRows","allowSort","selectionMode","unprotect","_x29","duration","messageDiv","bgDiv","timeoutId","closeMessage","clearTimeout","animation","_transfererDonnee","_callee34","_context34","_ref19","_callee33","wb","wsSource","wsDest","_i2","_columnsToClear","col","applyFormat","_applyFormat","globalMapping","globalSourceRanges","aRange","bRange","colPositions","_i3","_aRange$text$_i3$","key","colA","_i4","fullRange","rows","colDonnees","_i5","_rows$_i","iCol","typeCaisson","cle","pos","bVal","valCCR","posCCR","bCCR","valKR","posKR","bKR","_i6","destRow","_currentData","sourceRow","_context33","_callee32","sourceCellAddress","targetCell","sourceCell","_context32","_x31","_x32","source","dest","_slicedToArray","_x30","_copierDonneesVersRecapTubes","_callee36","_context36","_ref20","_callee35","feuilleDestination","plageSource","plageDestination","_context35","getResizedRange","_x33","errorDiv","removeEventListener","handleWheel","startDrag","handleHover","handleClick","endDrag","preventDefault","dx","clientX","dy","clientY","drag","minX","Infinity","maxX","minY","yOffset","drawingWidth","drawingHeight","centerView","mousePos","getMousePos","screenToCanvas","foundItem","checkDrillingPointsHit","checkShapesHit","updateTooltip","hitRadius","sqrt","pow","hitShapes","isPointInShape","shapeType","areaA","areaB","abs","isCCRA","isCCRB","right","bottom","isPointInRectWithMargin","isPointInCircleWithMargin","relativeX","relativeY","_ref7","_ref8","_ref9","topPartY","bottomPartY","inCentralRect","nearVerticalBorder","isPointInCCRWithMargin","calculateShapeArea","clickedDrilling","showTooltip","clickedShape","hideTooltip","priority","area","getAllShapesAtPosition","toFixed","evt","getBoundingClientRect","_placeDrillingPoints","_callee37","_button2","_context37","getDrillingDataFromExcel","drawDrillingPoints","_getDrillingDataFromExcel","_callee39","_context39","_ref21","_callee38","reportSheet","typeRange","kbRange","ccrRange","rondRange","_context38","types","kbPoints","ccrPoints","rondPoints","_x34","data","mouseX","mouseY","zoomFactor","deltaY","isUp","Office","onReady","_document$getElementB","_ref4","_callee6","range","_context6","setInterval","_callee5","_context5","_ref6","_callee4","currentRange","_context4","_x7","_x6","calculerMesKits","_callee","_context"],"sourceRoot":""}