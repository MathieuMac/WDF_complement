{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://office-addin-taskpane-js/./src/taskpane/taskpane.js"],"sourcesContent":["// Variables globales pour la gestion de la vue et de l'interaction\nlet appState = {\n  currentScreen: \"welcome\" // \"welcome\", \"menu\", \"drilling\"\n};\nlet zoom = 1;\nlet panX = 0;\nlet panY = 0;\nlet isDragging = false;\nlet lastX = 0;\nlet lastY = 0;\nlet canvas, ctx;\nlet currentData = null;\nlet drillingPoints = [];\nlet hoveredItem = null;\nlet selectedItem = null;\nlet animationFrameId = null;\nlet tooltipElement;\nlet lastSelectedIndex = 0;\nlet selectionCycle = [];\nlet isInitialized = false;\nlet isPdfExportMode = false;\nlet isFirstClick = true; \nlet lastDataSnapshot = null; \nlet changeDetected = false; \nlet notificationCooldown = false; \n\n\n// Initialisation principale\nOffice.onReady(() => {\n  // Cache toutes les interfaces au départ\n  hideAllScreens();\n\n  // Affiche l'écran de bienvenue\n  showScreen(\"welcome\");\n\n  // Configure les événements\n  setupEventListeners();\n\n});\n\nfunction hideAllScreens() {\n  // Ces IDs doivent correspondre à ton HTML\n  const screens = [\"welcome-screen\", \"main-menu\", \"drilling-interface\",\"export-instructions\"];\n  screens.forEach((id) => {\n    const element = document.getElementById(id);\n    if (element) element.style.display = \"none\";\n  });\n}\n\nfunction showScreen(screenName) {\n  hideAllScreens();\n\n  appState.currentScreen = screenName;\n\n  switch (screenName) {\n    case \"welcome\":\n      document.getElementById(\"welcome-screen\").style.display = \"flex\";\n      break;\n    case \"menu\":\n      resetView();\n      document.getElementById(\"main-menu\").style.display = \"flex\";\n      break;\n    case \"drilling\":\n      document.getElementById(\"drilling-interface\").style.display = \"block\";\n      // Initialise le canvas si ce n'est pas déjà fait\n      if (!isInitialized) {\n        initEmptyCanvas();\n      }\n      break;\n    case \"export-instructions\": \n      document.getElementById(\"export-instructions\").style.display = \"flex\";\n      break;\n  }\n\n}\n\nfunction setupEventListeners() {\n  // Navigation\n  document.getElementById(\"start-btn\").addEventListener(\"click\", () => showScreen(\"menu\"));\n  document.getElementById(\"drilling-plan-btn\").addEventListener(\"click\", () => showScreen(\"drilling\"));\n  document.getElementById(\"back-to-menu\").addEventListener(\"click\", () => showScreen(\"menu\"));\n    document.getElementById(\"back-to-menu-btn\")?.addEventListener(\"click\", () => showScreen(\"menu\"));\n  \n\n\n\n  document.getElementById(\"generate-recenter-btn\").addEventListener(\"click\", generate2DPlanInTaskPane);\n  document.getElementById(\"place-drilling-btn\").addEventListener(\"click\", placeDrillingPoints);\n  document.getElementById(\"reset-view-btn\").addEventListener(\"click\", resetView);\n  document.getElementById(\"calculate-kits-btn\").addEventListener(\"click\", function() {\n    if (isFirstClick) {\n        isFirstClick = false;\n        setupDataChangeListener();\n    }\n    calculerMesKits();\n});\n  document.getElementById(\"prepare-pdf-btn\").addEventListener(\"click\", preparerExportPDF);\n  document.getElementById(\"finish-export-btn\").addEventListener(\"click\", retourAccueilEtMasquerAutresFeuilles);\n  document.getElementById(\"reset-project-btn\").addEventListener(\"click\", () => {\n      const confirmBox = document.getElementById(\"confirm-reset\");\n      confirmBox.style.display = \"flex\";\n  });\n\n    // Gestionnaires de confirmation de réinitialisation\n  document.getElementById(\"confirm-yes\").addEventListener(\"click\", async () => {\n        document.getElementById(\"confirm-reset\").style.display = \"none\";\n        await resetProjetComplet(); \n  });\n    \n  document.getElementById(\"confirm-no\").addEventListener(\"click\", () => {\n        document.getElementById(\"confirm-reset\").style.display = \"none\";\n  });\n \n;\n}\n\n\nasync function resetProjetComplet() {\n    const confirmBox = document.getElementById(\"confirm-reset\");\n    const resetBtn = document.getElementById(\"reset-project-btn\");\n    const originalBtnText = resetBtn.textContent;\n    const originalBtnClass = resetBtn.className;\n    const originalBtnColor = resetBtn.style.backgroundColor;\n    let feuilleFeuil1Deverrouillee = false;\n    \n    try {\n        confirmBox.style.display = \"none\";\n        \n        resetBtn.disabled = true;\n        resetBtn.classList.add(\"disabled\");\n        resetBtn.style.backgroundColor = \"#cccccc\";\n        resetBtn.textContent = \"Réinitialisation en cours...\";\n        \n        await Excel.run(async (context) => {\n            const sheets = context.workbook.worksheets;\n            \n            // Déverrouiller Feuil1 avant les modifications\n            const feuille1 = sheets.getItem(\"Feuil1\");\n            feuille1.load(\"protection/protected\");\n            await context.sync();\n            \n            if (feuille1.protection.protected) {\n                await setSheetProtection(\"Feuil1\", false, \"Gp4r!74.\");\n                feuilleFeuil1Deverrouillee = true;\n            }\n            \n            // Solution robuste pour ACCUEIL (préserve absolument tout sauf les valeurs)\n            const accueilSheet = sheets.getItem(\"ACCUEIL\");\n            const accueilRange = accueilSheet.getRange(\"B13:I150\");\n            const accueilRangeD2D6 = accueilSheet.getRange(\"D2:D6\"); \n            \n            // 1. Sauvegarder les validations de données\n            accueilRange.load(\"dataValidation\");\n            accueilRangeD2D6.load(\"dataValidation\"); \n            await context.sync();\n            \n            // 2. Effacer seulement les valeurs et formats\n            accueilRange.clear(Excel.ClearApplyTo.contents); // Efface seulement le contenu\n            accueilRange.clear(Excel.ClearApplyTo.formats);  // Efface les formats\n            accueilRangeD2D6.clear(Excel.ClearApplyTo.contents);\n            \n            // 3. Réappliquer les validations si elles existaient\n            if (accueilRange.dataValidation) {\n                accueilRange.dataValidation = accueilRange.dataValidation;\n            }\n            \n            // Pour Feuil1, méthode standard\n            const feuille1Sheet = sheets.getItem(\"Feuil1\");\n            feuille1Sheet.getRange(\"A37:B170\").clear(Excel.ClearApplyTo.all);\n            feuille1Sheet.getRange(\"F37:J170\").clear(Excel.ClearApplyTo.all);\n            \n            await context.sync();\n        });\n        \n        if (feuilleFeuil1Deverrouillee) {\n            await setSheetProtection(\"Feuil1\", true, \"Gp4r!74.\");\n            feuilleFeuil1Deverrouillee = false;\n        }\n        \n        resetBtn.classList.remove(\"disabled\");\n        resetBtn.classList.add(\"success\");\n        resetBtn.style.backgroundColor = \"#28a745\";\n        resetBtn.innerHTML = \"✓ Réinitialisation réussie\";\n        \n        setTimeout(() => {\n            resetBtn.disabled = false;\n            resetBtn.style.backgroundColor = originalBtnColor;\n            resetBtn.className = originalBtnClass;\n            resetBtn.textContent = originalBtnText;\n        }, 3000);\n        \n    } catch (error) {\n        console.error(\"Échec de la réinitialisation:\", error);\n        \n        if (feuilleFeuil1Deverrouillee) {\n            try {\n                await setSheetProtection(\"Feuil1\", true, \"Gp4r!74.\");\n            } catch (verrouillageError) {\n                console.error(\"Erreur lors du reverrouillage d'urgence de Feuil1:\", verrouillageError);\n            }\n        }\n        \n        resetBtn.classList.remove(\"disabled\");\n        resetBtn.classList.add(\"error\");\n        resetBtn.style.backgroundColor = \"#dc3545\"\n        resetBtn.innerHTML = \"✗ Échec de la réinitialisation\";\n        resetBtn.disabled = false;\n        \n        setTimeout(() => {\n            resetBtn.style.backgroundColor = originalBtnColor;\n            resetBtn.className = originalBtnClass;\n            resetBtn.textContent = originalBtnText;\n        }, 3000);\n    }\n}\n\nasync function resetProjetComplet2() {\n    const confirmBox = document.getElementById(\"confirm-reset\");\n    const resetBtn = document.getElementById(\"reset-project-btn\");\n    const originalBtnText = resetBtn.textContent;\n    const originalBtnClass = resetBtn.className;\n    const originalBtnColor = resetBtn.style.backgroundColor;\n    \n    try {\n        // Fermer la boîte de confirmation\n        confirmBox.style.display = \"none\";\n        \n        // Mettre à jour le bouton principal\n        resetBtn.disabled = true;\n        resetBtn.classList.add(\"disabled\");\n        resetBtn.style.backgroundColor = \"#cccccc\";\n        resetBtn.textContent = \"Réinitialisation en cours...\";\n        \n        await Excel.run(async (context) => {\n            const sheets = context.workbook.worksheets;\n            \n            // Nettoyer les autres feuilles\n            const sheetsToClear = {\n                \"ACCUEIL\": [\"B13:I150\"],\n                \"Feuil1\": [\"A37:B170\", \"F37:J170\"]\n            };\n            \n            for (const sheetName in sheetsToClear) {\n                if (sheetsToClear.hasOwnProperty(sheetName)) {\n                    const sheet = sheets.getItem(sheetName);\n                    for (const range of sheetsToClear[sheetName]) {\n                        sheet.getRange(range).clear(Excel.ClearApplyTo.all);\n                    }\n                }\n            }\n            \n            await context.sync();\n        });\n        \n        // Feedback visuel de succès\n        resetBtn.classList.remove(\"disabled\");\n        resetBtn.classList.add(\"success\");\n        resetBtn.style.backgroundColor = \"#28a745\";\n        resetBtn.innerHTML = \"✓ Réinitialisation réussie\";\n        \n        // Revenir à l'état normal après 3 secondes\n        setTimeout(() => {\n            resetBtn.disabled = false;\n            resetBtn.style.backgroundColor = originalBtnColor;\n            resetBtn.className = originalBtnClass;\n            resetBtn.textContent = originalBtnText;\n        }, 3000);\n        \n    } catch (error) {\n        console.error(\"Échec de la réinitialisation:\", error);\n        \n        // Feedback visuel d'erreur\n        resetBtn.classList.remove(\"disabled\");\n        resetBtn.classList.add(\"error\");\n        resetBtn.style.backgroundColor = \"#dc3545\"\n        resetBtn.innerHTML = \"✗ Échec de la réinitialisation\";\n        resetBtn.disabled = false;\n        \n        // Revenir à l'état normal après 3 secondes\n        setTimeout(() => {\n            resetBtn.style.backgroundColor = originalBtnColor;\n            resetBtn.className = originalBtnClass;\n            resetBtn.textContent = originalBtnText;\n        }, 3000);\n    }\n}\n\n\nasync function retourAccueilEtMasquerAutresFeuilles() {\n  try {\n    await Excel.run(async (context) => {\n      const sheets = context.workbook.worksheets;\n      sheets.load(\"items/name,items/visibility\");\n      await context.sync();\n\n      // Vérifie et gère la visibilité de ACCUEIL et NOTES\n      const accueilSheet = sheets.getItem(\"ACCUEIL\");\n      const notesSheet = sheets.getItem(\"NOTES\");\n      \n      accueilSheet.load(\"visibility\");\n      notesSheet.load(\"visibility\");\n      await context.sync();\n\n      // Affiche ACCUEIL si masquée\n      if (accueilSheet.visibility !== \"Visible\") {\n        accueilSheet.visibility = \"Visible\";\n        await context.sync();\n      }\n\n      // Affiche NOTES si masquée\n      if (notesSheet.visibility !== \"Visible\") {\n        notesSheet.visibility = \"Visible\";\n        await context.sync();\n      }\n\n      // Active ACCUEIL\n      accueilSheet.activate();\n      await context.sync();\n\n      // Masquer toutes les autres feuilles visibles sauf ACCUEIL et NOTES\n      for (const sheet of sheets.items) {\n        if (sheet.name !== \"ACCUEIL\" && sheet.name !== \"NOTES\" && sheet.visibility === \"Visible\") {\n          sheet.visibility = \"Hidden\";\n        }\n      }\n\n      await context.sync();\n    });\n\n    // Affiche le menu (interface HTML/JS)\n    showScreen(\"menu\");\n\n  } catch (error) {\n    console.error(\"Erreur lors du retour à ACCUEIL :\", error);\n    showError(`Erreur : ${error.message}`);\n  }\n}\n\n\nasync function unhideSheetsExport(feuillesAAfficher) {\n  if (!feuillesAAfficher || !Array.isArray(feuillesAAfficher) || feuillesAAfficher.length === 0) {\n    throw new Error(\"Le paramètre feuillesAAfficher doit être un tableau non vide\");\n  }\n\n  try {\n    await Excel.run(async (context) => {\n      // 1. Charger la liste de toutes les feuilles existantes\n      const allSheets = context.workbook.worksheets;\n      allSheets.load(\"items/name\");\n      await context.sync();\n      \n      // 2. Filtrer pour ne garder que les feuilles existantes\n      const existingSheets = allSheets.items.map(sheet => sheet.name);\n      const sheetsToProcess = feuillesAAfficher.filter(name => existingSheets.includes(name));\n      \n      // 3. Afficher les feuilles concernées\n      sheetsToProcess.forEach(sheetName => {\n        const sheet = context.workbook.worksheets.getItem(sheetName);\n        sheet.visibility = \"Visible\";\n      });\n      \n      await context.sync();\n      \n      // 4. Optionnel: logger les feuilles manquantes\n      const missingSheets = feuillesAAfficher.filter(name => !existingSheets.includes(name));\n      if (missingSheets.length > 0) {\n        console.warn(\"Feuilles non trouvées:\", missingSheets);\n      }\n    });\n  } catch (error) {\n    console.error(\"Erreur dans unhideSheetsExport:\", error);\n    throw error;\n  }\n}\n\n// Fonction pour vérifier si une feuille est visible\nasync function isSheetVisible(sheetName) {\n  try {\n    let isVisible = false;\n    await Excel.run(async (context) => {\n      const sheet = context.workbook.worksheets.getItem(sheetName);\n      sheet.load('visibility');\n      await context.sync();\n      isVisible = sheet.visibility === \"Visible\";\n    });\n    return isVisible;\n  } catch (error) {\n    console.error(`Erreur lors de la vérification de la visibilité de ${sheetName}:`, error);\n    return false;\n  }\n}\n\n// Fonction pour masquer toutes les feuilles sauf une spécifique\nasync function hideAllSheetsExcept(sheetsToKeepVisible) {\n  try {\n    await Excel.run(async (context) => {\n      const sheets = context.workbook.worksheets;\n      sheets.load('items/name,items/visibility');\n      await context.sync();\n\n      // 🔄 Activer une des feuilles visibles pour éviter l’erreur\n      const sheetToActivate = sheets.items.find(sheet => sheetsToKeepVisible.includes(sheet.name));\n      if (sheetToActivate) {\n        sheetToActivate.activate();\n        await context.sync();\n      }\n\n      for (const sheet of sheets.items) {\n        if (!sheetsToKeepVisible.includes(sheet.name) && sheet.visibility === \"Visible\") {\n          sheet.visibility = \"Hidden\";\n        }\n      }\n      await context.sync();\n    });\n  } catch (error) {\n    console.error(\"Erreur lors du masquage des feuilles:\", error);\n    throw error;\n  }\n}\n\n\n\n// Fonctions masquer/afficher généralisées\nfunction hide(sheetName) {\n  Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(sheetName);\n    sheet.visibility = \"Hidden\";\n    await context.sync();\n    console.log(`${sheetName} masquée`);\n  }).catch((error) => {\n    console.error(\"Erreur:\", error);\n  });\n}\n\nfunction unhide(sheetName) {\n  Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(sheetName);\n    sheet.visibility = \"Visible\";\n    await context.sync();\n    console.log(`${sheetName} affichée`);\n  }).catch((error) => {\n    console.error(\"Erreur:\", error);\n  });\n}\n\n\n//*****************************************************************FONCTIONS CONFIRMEES**************************************************** */ \n\n\nfunction setupDataChangeListener() {\n    // Initialisation de la surveillance\n    Excel.run(async (context) => {\n        const sheet = context.workbook.worksheets.getItem(\"ACCUEIL\");\n        const range = sheet.getRange(\"B13:H120\");\n        range.load(\"values\");\n        \n        await context.sync();\n        lastDataSnapshot = JSON.stringify(range.values);\n        \n        // Surveillance continue\n        setInterval(async () => {\n            if (notificationCooldown) return;\n            \n            try {\n                await Excel.run(async (context) => {\n                    const currentRange = context.workbook.worksheets\n                        .getItem(\"ACCUEIL\")\n                        .getRange(\"B13:H120\");\n                    currentRange.load(\"values\");\n                    \n                    await context.sync();\n                    const currentData = JSON.stringify(currentRange.values);\n                    \n                    if (currentData !== lastDataSnapshot && !changeDetected) {\n                        changeDetected = true;\n                        showDataChangeNotification();\n                        lastDataSnapshot = currentData;\n                    }\n                });\n            } catch (error) {\n                console.log(\"Erreur de surveillance :\", error);\n            }\n        }, 5000); // Vérification toutes les 5 secondes\n    });\n}\n\nfunction showDataChangeNotification() {\n    // Style amélioré avec transparence\n    const notification = document.createElement(\"div\");\n    notification.innerHTML = `\n        <div style=\"\n            position: fixed;\n            top: 20px;\n            right: 20px;\n            background-color: rgba(248, 154, 23, 0.77);\n            backdrop-filter: blur(6px);\n            color: white;\n            padding: 12px 40px 12px 20px;\n            border-radius: 6px;\n            z-index: 1000;\n            font-family: 'Segoe UI', sans-serif;\n            font-size: 14px;\n            font-weight: 500;\n            box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n            border: 1px solid rgba(255,255,255,0.2);\n            animation: gentleFadeIn 0.3s ease-out;\n            max-width: 320px;\n            line-height: 1.4;\n        \">\n            <div style=\"display: flex; align-items: center; gap: 8px;\">\n                <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n                    <path d=\"M12 9v2m0 4h.01\"></path>\n                    <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\n                </svg>\n                <span>Modification détectée : veuillez actualiser les données en revenant à l'étape 1</span>\n            </div>\n            <div class=\"close-btn\" style=\"\n                position: absolute;\n                top: 10px;\n                right: 10px;\n                width: 16px;\n                height: 16px;\n                cursor: pointer;\n                opacity: 0.8;\n                transition: all 0.2s;\n                font-size: 18px;\n                line-height: 16px;\n                text-align: center;\n            \">×</div>\n        </div>\n    `;\n\n    // Animation discrète\n    const style = document.createElement(\"style\");\n    style.textContent = `\n        @keyframes gentleFadeIn {\n            from { opacity: 0; transform: translateY(10px) scale(0.98); }\n            to { opacity: 1; transform: translateY(0) scale(1); }\n        }\n    `;\n    document.head.appendChild(style);\n\n    document.body.appendChild(notification);\n\n    // Gestion intelligente de la fermeture\n    const closeBtn = notification.querySelector(\".close-btn\");\n    \n    closeBtn.addEventListener(\"click\", () => {\n        notification.style.opacity = \"0\";\n        setTimeout(() => notification.remove(), 300);\n    });\n    \n    closeBtn.addEventListener(\"mouseenter\", () => {\n        closeBtn.style.opacity = \"1\";\n        closeBtn.style.transform = \"scale(1.1)\";\n    });\n    \n    closeBtn.addEventListener(\"mouseleave\", () => {\n        closeBtn.style.opacity = \"0.8\";\n        closeBtn.style.transform = \"scale(1)\";\n    });\n\n    // Disparition automatique après 8 secondes\n    setTimeout(() => {\n        if (notification.parentNode) {\n            notification.style.opacity = \"0\";\n            setTimeout(() => notification.remove(), 300);\n        }\n    }, 8000);\n\n    // Anti-spam (pas de nouvelle notification avant 30s)\n    notificationCooldown = true;\n    setTimeout(() => {\n        notificationCooldown = false;\n        changeDetected = false;\n    }, 30000);\n}\n\n\n// Fonction principale pour préparer l'export PDF\nasync function preparerExportPDF() {\n  const button = document.getElementById(\"prepare-pdf-btn\");\n  const originalText = button.textContent;\n  const originalBgColor = button.style.backgroundColor; // Sauvegarde la couleur originale\n  let feuilleTempExportDeverrouillee = false;\n  \n\n  const feuillesAAfficher = [\n    \"PDG\", \"Intro\", \"TempExportPlan\", \"TempExportComplet\", \n    \"P_KITS\", \"TempExport\", \"RecapPieces\", \"RecapTubes\"\n  ];\n\n  try {\n    // Animation du bouton (gris + texte)\n    button.disabled = true;\n    button.style.backgroundColor = \"#cccccc\";\n    button.textContent = \"Préparation en cours... merci de patienter\";\n\n\n    // Vérifier et gérer la visibilité de la feuille ACCUEIL\n    const accueilVisible = await isSheetVisible(\"ACCUEIL\");\n    \n    if (!accueilVisible) {\n      await unhide(\"ACCUEIL\"); // On affiche ACCUEIL si elle est cachée\n    }\n\n    // 1. Afficher et ordonner les feuilles\n    await unhideSheetsExport(feuillesAAfficher);\n    // 2. Masquer toutes les feuilles sauf celles à afficher\n    await hideAllSheetsExcept(feuillesAAfficher);\n\n    // Déverrouiller TempExport avant l'export\n    await setSheetProtection(\"TempExport\", false, \"Gp4r!74.\");\n    feuilleTempExportDeverrouillee = true;\n\n    // Exécution des exports\n    await FeuilleTempExport();\n\n    // Reverrouiller TempExport après l'export\n    await setSheetProtection(\"TempExport\", true, \"Gp4r!74.\");\n    feuilleTempExportDeverrouillee = false;\n\n    await exportCanvasToTemps();\n    \n    // Affichage des instructions\n    showScreen(\"export-instructions\");\n    \n  } catch (error) {\n    console.error(\"Erreur dans preparerExportPDF:\", error);\n\n    // En cas d'erreur, verrouiller TempExport si elle avait été déverrouillée\n    if (feuilleTempExportDeverrouillee) {\n      try {\n        await setSheetProtection(\"TempExport\", true, \"Gp4r!74.\");\n      } catch (verrouillageError) {\n        console.error(\"Erreur lors du reverrouillage d'urgence de TempExport:\", verrouillageError);\n      }\n    }\n\n    showError(`Erreur lors de la préparation du PDF : ${error.message}`);\n  } finally {\n    // Réinitialisation du bouton dans tous les cas (succès ou erreur)\n    button.disabled = false;\n    button.style.backgroundColor = originalBgColor; // Restaure la couleur originale\n    button.textContent = originalText;\n  }\n}\n\n\nasync function exportCanvasToTemps() {\n  const currentScreen = getCurrentScreen(\"menu\"); // Écran courant avant export\n\n  // Créer un overlay blanc temporaire pour masquer le processus\n  const overlay = document.createElement(\"div\");\n  overlay.style.cssText = `\n    position: fixed;\n    top: 0; left: 0;\n    width: 100vw;\n    height: 100vh;\n    background: white;\n    z-index: 9999;\n    display: none;\n  `;\n  document.body.appendChild(overlay);\n\n  try {\n\n    // 1. Préparation du canvas pour l'export\n    overlay.style.display = \"block\";\n\n    document.body.style.transition = \"none\";\n    showScreen(\"drilling\", false); // Changement d'écran sans animation\n    isPdfExportMode = true; // Active le mode export\n\n    // Réinitialiser l'état du canvas avant chaque export\n    initInteractiveCanvas();\n\n    // PREMIÈRE CAPTURE - PLAN SEULEMENT (TempExportPlan)\n    await generate2DPlanInTaskPane();\n    await new Promise((resolve) => requestAnimationFrame(() => requestAnimationFrame(resolve)));\n\n    const exportCanvasPlan = document.createElement(\"canvas\");\n    exportCanvasPlan.width = 1020;\n    exportCanvasPlan.height = 700;\n    const exportCtxPlan = exportCanvasPlan.getContext(\"2d\");\n    exportCtxPlan.imageSmoothingEnabled = true;\n    exportCtxPlan.drawImage(canvas, 0, 0);\n    const imageDataPlan = exportCanvasPlan.toDataURL(\"image/png\");\n\n    // DEUXIÈME CAPTURE - PLAN + POINTS (TempExportComplet)\n    // Réinitialiser à nouveau pour s'assurer qu'on part d'un état propre\n    initInteractiveCanvas();\n    await generate2DPlanInTaskPane();\n    await placeDrillingPoints();\n    await new Promise((resolve) => requestAnimationFrame(() => requestAnimationFrame(resolve)));\n\n    const exportCanvasPoints = document.createElement(\"canvas\");\n    exportCanvasPoints.width = 1020;\n    exportCanvasPoints.height = 700;\n    const exportCtxPoints = exportCanvasPoints.getContext(\"2d\");\n    exportCtxPoints.imageSmoothingEnabled = true;\n    exportCtxPoints.drawImage(canvas, 0, 0);\n    const imageDataPoints = exportCanvasPoints.toDataURL(\"image/png\");\n\n    // 3. Insertion dans Excel\n    await Excel.run(async (context) => {\n      // TempExportPlan - Plan seulement\n      const sheet3 = context.workbook.worksheets.getItem(\"TempExportPlan\");\n      const shapes3 = sheet3.shapes;\n      shapes3.load(\"items\");\n      await context.sync();\n      shapes3.items.forEach((shape) => shape.delete());\n      sheet3.shapes.addImage(imageDataPlan.split(\",\")[1], {\n        left: 0,\n        top: 0,\n        width: 842,\n        height: 595\n      });\n\n      // TempExportComplet - Plan + points\n      const sheet5 = context.workbook.worksheets.getItem(\"TempExportComplet\");\n      const shapes5 = sheet5.shapes;\n      shapes5.load(\"items\");\n      await context.sync();\n      shapes5.items.forEach((shape) => shape.delete());\n      sheet5.shapes.addImage(imageDataPoints.split(\",\")[1], {\n        left: 0,\n        top: 0,\n        width: 842,\n        height: 595\n      });\n\n      await context.sync();\n    });\n\n    // 4. Retour à l'écran initial si nécessaire\n    if (currentScreen === \"menu\") {\n      showScreen(\"menu\", false);\n    }\n  } catch (error) {\n    console.error(\"Export failed:\", error);\n    showError(`Erreur d'export : ${error.message}`);\n  } finally {\n    // 5. Réinitialisation de l'état et de l'UI\n    isPdfExportMode = false;\n    initInteractiveCanvas();\n\n    document.body.style.transition = \"\";\n    overlay.remove();\n  }\n}\n\nfunction getCurrentScreen() {\n  if (document.getElementById(\"welcome-screen\").style.display !== \"none\") return \"welcome\";\n  if (document.getElementById(\"main-menu\").style.display !== \"none\") return \"menu\";\n  if (document.getElementById(\"drilling-interface\").style.display !== \"none\") return \"drilling\";\n  return null;\n}\n\n\n//*****************************************************************FONCTIONS VALIDEES**************************************************** */ \nasync function FeuilleTempExport() {\n    try {\n        await Excel.run(async (context) => {\n            const workbook = context.workbook;\n            \n            // Récupérer les feuilles source et destination\n            const feuillesSource = [\"P_RONDS\", \"P_CCR\"];\n            const feuilleDest = workbook.worksheets.getItem(\"TempExport\");\n            \n            // Initialiser TempExport\n            feuilleDest.getUsedRange().clear();\n            feuilleDest.getRange(\"B:B\").columnWidth = 30;\n            \n            let currentRow = 1; // Commencer à la ligne 1\n            \n            for (const nomFeuille of feuillesSource) {\n                const feuilleSource = workbook.worksheets.getItem(nomFeuille);\n                \n                // Trouver la dernière ligne utilisée\n                const rangeUtilisee = feuilleSource.getUsedRange();\n                rangeUtilisee.load(\"rowCount\");\n                await context.sync();\n                \n                const lastRow = rangeUtilisee.rowCount;\n                \n                // Obtenir les valeurs de la colonne B (pour vérifier le contenu)\n                const colonneB = feuilleSource.getRange(`B5:B${lastRow}`);\n                colonneB.load(\"values\");\n                await context.sync();\n                \n                let i = 5;\n                while (i <= lastRow) {\n                    // Trouver le prochain bloc de 20 lignes avec du contenu en colonne B\n                    let blocValide = false;\n                    let endRow = i;\n                    \n                    // Vérifier les 20 prochaines lignes pour du contenu\n                    for (let j = 0; j < 20 && (i + j) <= lastRow; j++) {\n                        if (colonneB.values[j] && colonneB.values[j][0] !== \"\") {\n                            blocValide = true;\n                            endRow = i + j;\n                        }\n                    }\n                    \n                    if (!blocValide) {\n                        i += 20;\n                        continue;\n                    }\n                    \n                    // Ajuster endRow pour couvrir 20 lignes max\n                    endRow = Math.min(i + 19, lastRow);\n                    \n                    \n                    // 1. Premier bloc (C1:R4 + A:B + C:R)\n                    await copierBlocDonnees(\n                        context,\n                        feuilleSource,\n                        feuilleDest,\n                        \"C1:R4\",\n                        `A${i}:B${endRow}`,\n                        `C${i}:R${endRow}`,\n                        currentRow\n                    );\n                    \n                    currentRow += 27;\n                    \n                    // 2. Deuxième bloc (S1:AH4 + A:B + S:AH)\n                    await copierBlocDonnees(\n                        context,\n                        feuilleSource,\n                        feuilleDest,\n                        \"S1:AH4\",\n                        `A${i}:B${endRow}`,\n                        `S${i}:AH${endRow}`,\n                        currentRow\n                    );\n                    \n                    currentRow += 25;\n                    i += 20;\n                }\n            }\n            \n            // Appliquer l'autofit à la colonne B\n            const colB = feuilleDest.getRange(\"B1\").getEntireColumn();\n            colB.format.autofitColumns();\n            \n            await context.sync();\n        });\n    } catch (error) {\n        console.error(\"❌ Erreur:\", error);\n        if (error instanceof OfficeExtension.Error) {\n            console.error(\"Détails:\", JSON.stringify(error.debugInfo));\n        }\n    }\n}\n\nasync function copierBlocDonnees(context, sourceSheet, destSheet, enTeteRange, donnees1Range, donnees2Range, currentRow) {\n    try {\n        // Charger les plages nécessaires\n        const sourceEntete = sourceSheet.getRange(enTeteRange);\n        const sourceDonnees1 = sourceSheet.getRange(donnees1Range);\n        const sourceDonnees2 = sourceSheet.getRange(donnees2Range);\n        \n        // Charger les propriétés\n        sourceEntete.load(\"rowCount, columnCount, format\");\n        sourceDonnees1.load(\"rowCount, format\");\n        sourceDonnees2.load(\"rowCount, columnCount, format\");\n        await context.sync();\n        \n        // 1. Copier l'en-tête (valeurs + formats)\n        const destEntete = destSheet.getRange(`C${currentRow}:R${currentRow + sourceEntete.rowCount - 1}`);\n        destEntete.copyFrom(sourceEntete, Excel.RangeCopyType.values, false, false);\n        destEntete.copyFrom(sourceEntete, Excel.RangeCopyType.formats, false, false);\n        \n        // 2. Copier les données colonnes A:B (valeurs + formats)\n        const destDonnees1 = destSheet.getRange(`A${currentRow + 4}:B${currentRow + 3 + sourceDonnees1.rowCount}`);\n        destDonnees1.copyFrom(sourceDonnees1, Excel.RangeCopyType.values, false, false);\n        destDonnees1.copyFrom(sourceDonnees1, Excel.RangeCopyType.formats, false, false);\n        \n        // 3. Copier les données colonnes C:R ou S:AH (valeurs + formats)\n        const destDonnees2 = destSheet.getRange(\n            `C${currentRow + 4}`,\n            String.fromCharCode(64 + sourceDonnees2.columnCount) + (currentRow + 3 + sourceDonnees2.rowCount)\n        );\n        destDonnees2.copyFrom(sourceDonnees2, Excel.RangeCopyType.values, false, false);\n        destDonnees2.copyFrom(sourceDonnees2, Excel.RangeCopyType.formats, false, false);\n        \n        await context.sync();\n    } catch (error) {\n        console.error(\"Erreur dans copierBlocDonnees:\", error);\n        throw error;\n    }\n}\n\nfunction addNumberToShape(ctx, shape, num, typeForme, orientation = \"\", suffix = \"\") {\n  // Récupération de la correspondance\n  let correspondance = \"?\";\n  const typeUpper = typeForme.toUpperCase().trim();\n\n  if (currentData.correspondances) {\n    for (let i = 0; i < currentData.correspondances.length; i++) {\n      if (currentData.correspondances[i].type.toUpperCase() === typeUpper) {\n        correspondance = currentData.correspondances[i].label;\n        break;\n      }\n    }\n  }\n\n  // Formatage avec saut de ligne\n  const prefixText = suffix ? `${num}.${suffix} - ` : `${num} - `;\n  const fullText = `${prefixText}\\n${correspondance}`;\n\n  ctx.save();\n\n  // Taille de police initiale\n  let fontSize = Math.max(8, 10 / zoom);\n  let lineHeight = fontSize * 1.1;\n\n  // Mesure des textes avec la taille initiale\n  ctx.font = `${fontSize}px Arial`;\n  const prefixWidth = ctx.measureText(prefixText).width;\n  const corrWidth = ctx.measureText(correspondance).width;\n  const maxTextWidth = Math.max(prefixWidth, corrWidth);\n\n  // Calcul de la largeur disponible en fonction de la forme\n  let availableWidth;\n  switch (shape.type) {\n    case \"rectangle\":\n      availableWidth = shape.width - 4; // Marge de 2px de chaque côté\n      break;\n    case \"circle\":\n      availableWidth = shape.width * 0.9; // 90% du diamètre\n      break;\n    case \"ccr\":\n      availableWidth = shape.width * 0.8 - 60; // 80% de la largeur moins marge d'orientation\n      break;\n    default:\n      availableWidth = shape.width * 0.8;\n  }\n\n  // Ajustement de la taille de police si nécessaire\n  if (maxTextWidth > availableWidth) {\n    const scaleFactor = availableWidth / maxTextWidth;\n    fontSize = Math.max(6, fontSize * scaleFactor * 0.9); // Ne pas descendre en dessous de 6px\n    lineHeight = fontSize * 1.1;\n    ctx.font = `${fontSize}px Arial`;\n  }\n\n  // Pour les cercles, on ne vérifie pas la hauteur\n  if (shape.type !== \"circle\") {\n    // Vérification de la hauteur disponible\n    const totalTextHeight = lineHeight * 2; // 2 lignes de texte\n    let availableHeight;\n\n    switch (shape.type) {\n      case \"rectangle\":\n        availableHeight = shape.height - 4;\n        break;\n      case \"ccr\":\n        availableHeight = shape.height * 0.8;\n        break;\n      default:\n        availableHeight = shape.height * 0.8;\n    }\n\n    if (totalTextHeight > availableHeight) {\n      const scaleFactor = availableHeight / totalTextHeight;\n      fontSize = Math.max(6, fontSize * scaleFactor * 0.9);\n      lineHeight = fontSize * 1.1;\n      ctx.font = `${fontSize}px Arial`;\n    }\n  }\n\n  // Positionnement\n  let posX = shape.x;\n  let posY = shape.y;\n  let textAlign = \"center\";\n  let textBaseline = \"middle\";\n\n  // Initialisation des variables de positionnement\n  let radiusVert = shape.width / 2;\n  let rectHeight = shape.height - 2 * radiusVert;\n  let radiusHorz = shape.height / 2;\n  let rectLength = shape.width - 2 * radiusHorz;\n\n  switch (shape.type) {\n    case \"rectangle\":\n      textAlign = \"left\";\n      textBaseline = \"top\";\n      posX = shape.x - shape.width / 2 + 2;\n      posY = shape.y - shape.height / 2 + 2;\n      break;\n    case \"circle\":\n      // Texte centré sur le cercle\n      break;\n    case \"ccr\":\n      const margin = Math.min(30, shape.width * 0.2); // Marge proportionnelle\n      switch (orientation) {\n        case \"Haut\":\n          radiusVert = shape.width / 2;\n          rectHeight = shape.height - 2 * radiusVert;\n          textAlign = \"center\";\n          textBaseline = \"bottom\";\n          posY = shape.y - rectHeight / 2 - margin;\n          break;\n        case \"Bas\":\n          radiusVert = shape.width / 2;\n          rectHeight = shape.height - 2 * radiusVert;\n          textAlign = \"center\";\n          textBaseline = \"top\";\n          posY = shape.y + rectHeight / 2 + margin;\n          break;\n        case \"Haut_et_bas\":\n          radiusVert = shape.width / 2;\n          rectHeight = shape.height - 2 * radiusVert;\n          textAlign = \"center\";\n          if (suffix === \"1\") {\n            textBaseline = \"bottom\";\n            posY = shape.y - rectHeight / 2 - margin;\n          } else {\n            textBaseline = \"top\";\n            posY = shape.y + rectHeight / 2 + margin;\n          }\n          break;\n        case \"Gauche\":\n          radiusHorz = shape.height / 2;\n          rectLength = shape.width - 2 * radiusHorz;\n          textAlign = \"right\";\n          textBaseline = \"middle\";\n          posX = shape.x - rectLength / 2 - margin / 2;\n          break;\n        case \"Droite\":\n          radiusHorz = shape.height / 2;\n          rectLength = shape.width - 2 * radiusHorz;\n          textAlign = \"left\";\n          textBaseline = \"middle\";\n          posX = shape.x + rectLength / 2 + margin / 2;\n          break;\n        case \"Droite_Gauche\":\n          radiusHorz = shape.height / 2;\n          rectLength = shape.width - 2 * radiusHorz;\n          textBaseline = \"middle\";\n          if (suffix === \"1\") {\n            textAlign = \"right\";\n            posX = shape.x - rectLength / 2 - margin / 2;\n          } else {\n            textAlign = \"left\";\n            posX = shape.x + rectLength / 2 + margin / 2;\n          }\n          break;\n      }\n      break;\n  }\n\n  // Dessin du texte NOIR (numéro et tiret)\n  ctx.textAlign = textAlign;\n  ctx.textBaseline = textBaseline;\n  ctx.fillStyle = \"#000\";\n  ctx.fillText(prefixText, posX, posY);\n\n  // Dessin du texte BLEU (correspondance) sur la ligne suivante\n  ctx.fillStyle = \"#0070C0\";\n  ctx.fillText(correspondance, posX, posY + lineHeight);\n\n  ctx.restore();\n}\n\nfunction drawAllShapes() {\n  if (!isInitialized || !currentData) return;\n\n  if (animationFrameId) {\n    cancelAnimationFrame(animationFrameId);\n  }\n\n  animationFrameId = requestAnimationFrame(() => {\n    if (!canvas || !ctx || !currentData) return;\n\n    // Clear et fond\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.fillStyle = isPdfExportMode ? \"#ffffff\" : \"#f8f8f8\";\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n    // Transformations\n    ctx.save();\n    ctx.translate(panX, panY);\n    ctx.scale(zoom, zoom);\n\n    const scale = 2;\n    const maxY = canvas.height - 100;\n    const Ecart45Points = 5 * scale;\n\n    // Dessin des formes\n    currentData.shapes.forEach((type, i) => {\n      if (!type) return;\n\n      const numero = currentData.numbers[i] || i + 1;\n      const width = parseFloat(currentData.widths[i]) * scale;\n      const height = parseFloat(currentData.heights[i]) * scale;\n      const centerX = parseFloat(currentData.centersX[i]) * scale + 50;\n      const centerY = maxY - parseFloat(currentData.centersY[i]) * scale;\n      const orientation = currentData.orientations[i] || \"\";\n\n      if (isNaN(width) || isNaN(height)) return;\n\n      const isHovered = hoveredItem?.type === \"shape\" && hoveredItem.index === i;\n      const isSelected = selectedItem?.type === \"shape\" && selectedItem.index === i;\n\n      // Style\n      ctx.strokeStyle = isSelected ? \"#0066cc\" : isHovered ? \"#0099ff\" : \"#000\";\n      ctx.lineWidth = (isSelected ? 3 : isHovered ? 2 : 1.5) / zoom;\n      ctx.fillStyle = isSelected ? \"rgba(0, 102, 204, 0.1)\" : isHovered ? \"rgba(0, 153, 255, 0.05)\" : \"transparent\";\n\n      // Rectangles\n      if (type.match(/KB|KCV|KCH|KCVH|KS3P|KSDH/)) {\n        ctx.beginPath();\n        ctx.rect(centerX - width / 2, centerY - height / 2, width, height);\n        ctx.fill();\n        ctx.stroke();\n\n        addNumberToShape(ctx, { type: \"rectangle\", x: centerX, y: centerY, width, height }, numero, type);\n\n        if (isSelected) {\n          drawShapeLabel(ctx, type, centerX, centerY);\n        }\n      }\n      // Cercles\n      else if (type.includes(\"Rond\")) {\n        ctx.beginPath();\n        ctx.ellipse(centerX, centerY, width / 2, width / 2, 0, 0, Math.PI * 2);\n        ctx.fill();\n        ctx.stroke();\n\n        addNumberToShape(ctx, { type: \"circle\", x: centerX, y: centerY, radius: width / 2 }, numero, type,\"\",1);\n\n        if (isSelected) {\n          drawShapeLabel(ctx, type, centerX, centerY);\n        }\n      }\n      // CCR\n      else if (type.includes(\"CCR\")) {\n        const isDouble = orientation.includes(\"Haut_et_bas\") || orientation.includes(\"Droite_Gauche\");\n        const currentWidth = orientation.match(/Droite|Gauche/) ? height : width;\n        const currentHeight = orientation.match(/Droite|Gauche/) ? width : height;\n        const radius = currentWidth / 2;\n\n        ctx.save();\n        ctx.translate(centerX, centerY);\n\n        if (orientation.includes(\"Droite\")) ctx.rotate(Math.PI / 2);\n        else if (orientation.includes(\"Gauche\")) ctx.rotate(-Math.PI / 2);\n        else if (orientation.includes(\"Bas\")) ctx.rotate(Math.PI);\n\n        if (isDouble) {\n          // Double alcôve\n          drawSemiCircle(ctx, 0, -currentHeight / 2 + radius + Ecart45Points, radius, true);\n          drawSemiCircle(ctx, 0, currentHeight / 2 - radius - Ecart45Points, radius, false);\n\n          ctx.beginPath();\n          ctx.moveTo(-radius, -currentHeight / 2 + radius + Ecart45Points);\n          ctx.lineTo(-radius, currentHeight / 2 - radius - Ecart45Points);\n          ctx.stroke();\n\n          ctx.beginPath();\n          ctx.moveTo(radius, -currentHeight / 2 + radius + Ecart45Points);\n          ctx.lineTo(radius, currentHeight / 2 - radius - Ecart45Points);\n          ctx.stroke();\n\n          ctx.restore();\n\n          addNumberToShape(\n            ctx,\n            { type: \"ccr\", x: centerX, y: centerY, width: currentWidth, height: currentHeight },\n            numero,\n            type,\n            orientation,\n            \"1\"\n          );\n\n          addNumberToShape(\n            ctx,\n            { type: \"ccr\", x: centerX, y: centerY, width: currentWidth, height: currentHeight },\n            numero,\n            type,\n            orientation,\n            \"2\"\n          );\n        } else {\n          // Alcôve simple\n          drawSemiCircle(ctx, 0, -currentHeight / 2 + radius + Ecart45Points, radius, true);\n\n          ctx.beginPath();\n          ctx.moveTo(-radius, -currentHeight / 2 + radius + Ecart45Points);\n          ctx.lineTo(-radius, currentHeight / 2);\n          ctx.lineTo(radius, currentHeight / 2);\n          ctx.lineTo(radius, -currentHeight / 2 + radius + Ecart45Points);\n          ctx.stroke();\n\n          ctx.restore();\n          addNumberToShape(\n            ctx,\n            { type: \"ccr\", x: centerX, y: centerY, width: currentWidth, height: currentHeight },\n            numero,\n            type,\n            orientation,\n            \"1\"\n          );\n        }\n\n        if (isSelected) {\n          drawShapeLabel(ctx, type, centerX, centerY);\n        }\n      }\n    });\n\n    // Dessiner les points de perçage\n    if (drillingPoints && drillingPoints.length > 0) {\n      drillingPoints.forEach((point, index) => {\n        if (!point) return;\n\n        const isHovered = hoveredItem?.type === \"drilling\" && hoveredItem.index === index;\n        const isSelected = selectedItem?.type === \"drilling\" && selectedItem.index === index;\n\n        drawDrillingPoint(point.x, point.y, isHovered, isSelected);\n\n        if (isSelected) {\n          drawPointLabel(ctx, `X: ${(point.x - 50) / scale}, Y: ${(maxY - point.y) / scale}`, point.x, point.y);\n        }\n      });\n    }\n    ctx.restore();\n  });\n}\n\nfunction drawShapeLabel(ctx, text, x, y) {\n  ctx.save();\n  ctx.font = `${Math.max(10, 12 / zoom)}px Arial`;\n  ctx.fillStyle = \"#0066cc\";\n  ctx.textAlign = \"center\";\n  ctx.fillText(text, x, y - 15 / zoom);\n  ctx.restore();\n}\n\nasync function getShapeDataFromExcel() {\n  try {\n    return await Excel.run(async (context) => {\n      const dataSheet = context.workbook.worksheets.getItem(\"Feuil1\");\n\n      // Ranges existantes (votre code original)\n      const shapesRange = dataSheet.getRange(\"B37:B160\");\n      const widthsRange = dataSheet.getRange(\"F37:F160\");\n      const centersXRange = dataSheet.getRange(\"G37:G160\");\n      const heightsRange = dataSheet.getRange(\"I37:I160\");\n      const centersYRange = dataSheet.getRange(\"J37:J160\");\n      const orientationsRange = dataSheet.getRange(\"D37:D160\");\n      const numbersRange = dataSheet.getRange(\"A37:A160\");\n\n      // Récupération des correspondances (colonnes A et B, lignes 8-32)\n      const correspondancesRange = dataSheet.getRange(\"A8:B32\");\n\n      // Chargement des valeurs\n      shapesRange.load(\"values\");\n      widthsRange.load(\"values\");\n      centersXRange.load(\"values\");\n      heightsRange.load(\"values\");\n      centersYRange.load(\"values\");\n      orientationsRange.load(\"values\");\n      numbersRange.load(\"values\");\n      correspondancesRange.load(\"values\");\n\n      await context.sync();\n\n      // Vérification des données de base\n      if (!shapesRange.values || shapesRange.values.length === 0) {\n        throw new Error(\"Aucune donnée dans la plage des formes (B37:B160)\");\n      }\n\n      // Transformation des correspondances au format {type, label}\n      let correspondances = [];\n      if (correspondancesRange.values && correspondancesRange.values.length > 0) {\n        correspondances = correspondancesRange.values\n          .map((row) => ({\n            label: row[0] || \"?\", // Colonne A (texte)\n            type: row[1] || \"\" // Colonne B (type)\n          }))\n          .filter((item) => item.type); // On filtre les lignes vides\n      }\n\n      return {\n        shapes: shapesRange.values.flat(),\n        widths: widthsRange.values.flat(),\n        centersX: centersXRange.values.flat(),\n        heights: heightsRange.values.flat(),\n        centersY: centersYRange.values.flat(),\n        orientations: orientationsRange.values.flat(),\n        numbers: numbersRange.values.flat(),\n        correspondances: correspondances\n      };\n    });\n  } catch (error) {\n    console.error(\"Erreur dans getShapeDataFromExcel:\", error);\n    OfficeHelpers.UI.notify(\"Erreur lors de la récupération des données. Vérifiez Feuil1.\");\n    return null;\n  }\n}\n\nasync function generate2DPlanInTaskPane() {\n  if (appState.currentScreen !== \"drilling\") {\n    showScreen(\"drilling\");\n  }\n  try {\n    const button = document.getElementById(\"generate-recenter-btn\");\n    button.disabled = true;\n    button.textContent = \"Chargement...\";\n\n    // Réinitialiser l'état avant de commencer\n    currentData = null;\n    isInitialized = false;\n\n    // Forcer un rendu vide immédiat\n    initEmptyCanvas();\n\n    currentData = await getShapeDataFromExcel();\n    if (!currentData) {\n      throw new Error(\"Aucune donnée valide reçue d'Excel\");\n    }\n\n    // Initialiser le canvas interactif\n    initInteractiveCanvas();\n\n    // Forcer le premier rendu\n    drawAllShapes();\n\n    button.textContent = \"Recentrer\";\n    button.style.backgroundColor = \"#fd7e14\";\n    button.disabled = false;\n\n    return true;\n  } catch (error) {\n    console.error(\"Erreur:\", error);\n    const button = document.getElementById(\"generate-recenter-btn\");\n    if (button) {\n      button.textContent = \"Générer le plan 2D\";\n      button.style.backgroundColor = \"#0078d7\";\n      button.disabled = false;\n    }\n    showError(\"Erreur lors du chargement. Vérifiez les données Excel.\");\n    return false;\n  }\n}\n\nfunction initEmptyCanvas() {\n  const container = document.getElementById(\"drawing-area\");\n  container.innerHTML = \"\";\n\n  canvas = document.createElement(\"canvas\");\n  canvas.width = container.offsetWidth;\n  canvas.height = container.offsetHeight;\n  container.appendChild(canvas);\n\n  ctx = canvas.getContext(\"2d\");\n  canvas.style.cursor = \"default\";\n\n  // Dessiner un fond propre\n  ctx.fillStyle = \"#f8f8f8\";\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n  createTooltipElement();\n  isInitialized = false;\n}\n\nasync function tri_Optimise() {\n  try {\n    await Excel.run(async (context) => {\n      const sheet = context.workbook.worksheets.getItem(\"ACCUEIL\");\n\n      // 1. Nettoyage de la plage BR13:CE109\n      const rangeToClear = sheet.getRange(\"BR13:CE109\");\n      rangeToClear.clear();\n\n      // 2. Copie des valeurs de AC13:AC109 vers I13:I109\n      const sourceRange1 = sheet.getRange(\"AC13:AC109\");\n      sourceRange1.load(\"values\");\n      await context.sync();\n\n      const destRange1 = sheet.getRange(\"I13:I109\");\n      destRange1.values = sourceRange1.values;\n\n      // 3. Copie des plages combinées vers BR13:CE109\n      const rangeA = sheet.getRange(\"A13:A109\");\n      const rangeI = sheet.getRange(\"I13:I109\");\n      const rangeM = sheet.getRange(\"M13:T109\");\n      const rangeY = sheet.getRange(\"Y13:AB109\");\n\n      // Charger toutes les valeurs\n      rangeA.load(\"values\");\n      rangeI.load(\"values\");\n      rangeM.load(\"values\");\n      rangeY.load(\"values\");\n      await context.sync();\n\n      const combinedValues = [];\n      const rowCount = 97; // 109 - 13 + 1\n\n      for (let i = 0; i < rowCount; i++) {\n        const row = [];\n        row.push(rangeA.values[i][0]);         // Colonne A\n        row.push(rangeI.values[i][0]);         // Colonne I\n        for (let j = 0; j < 8; j++) {          // Colonnes M à T\n          row.push(rangeM.values[i][j]);\n        }\n        for (let j = 0; j < 4; j++) {          // Colonnes Y à AB\n          row.push(rangeY.values[i][j]);\n        }\n        combinedValues.push(row);\n      }\n\n      // Écriture des données dans BR13:CE109\n      const destRange = sheet.getRange(\"BR13:CE109\");\n      destRange.values = combinedValues;\n\n      // 4. Tri sur la colonne BS avec ordre personnalisé et tri stable\n      const sortColumnIndex = 1; // BS est la 2e colonne (index 1)\n      const customOrder = {\n        \"KIT DE BASE  -  KB\": 0,\n        \"KIT CONTIGU VERTICAL - KCV\": 1,\n        \"KIT CONTIGU HORIZONTAL - KCH\": 2,\n        \"KIT CONTIGU VERTICAL ET HORIZONTAL - KCVH\": 3,\n        \"KIT SPÉCIAL 3 POINTS - KS3P\": 4\n      };\n\n      // Recharger les valeurs combinées\n      destRange.load(\"values\");\n      await context.sync();\n\n      const stableSortable = destRange.values.map((row, index) => ({\n        originalIndex: index,\n        value: row\n      }));\n\n      stableSortable.sort((a, b) => {\n        const valA = a.value[sortColumnIndex] || \"\";\n        const valB = b.value[sortColumnIndex] || \"\";\n\n        const orderA = customOrder[valA] ?? 99;\n        const orderB = customOrder[valB] ?? 99;\n\n        if (orderA !== orderB) {\n          return orderA - orderB;\n        }\n\n        // Tri stable : si égalité, garder l'ordre original\n        return a.originalIndex - b.originalIndex;\n      });\n\n      const finalSortedValues = stableSortable.map(item => item.value);\n      destRange.values = finalSortedValues;\n\n      // 5. Ajustement de la largeur de la colonne BS\n      sheet.getRange(\"BS:BS\").format.columnWidth = 36.13;\n\n      await context.sync();\n    });\n  } catch (error) {\n    console.error(\"Error:\", error);\n    OfficeHelpers.UI ?.notify ?.(error.message || \"Erreur inconnue\");\n  }\n}\n\nasync function calculerMesKits() {\n  const button = document.getElementById(\"calculate-kits-btn\");\n  const originalText = button.textContent;\n  const originalBgColor = button.style.backgroundColor;\n  let feuillesDeverrouillees = []\n\n  try {\n    // Animation du bouton (gris + texte)\n    button.disabled = true;\n    button.style.backgroundColor = \"#cccccc\";\n    button.textContent = \"Transfert en cours... merci de patienter\";\n\n\n    // Vérifier et gérer la visibilité des feuilles ACCUEIL et NOTES\n    const accueilVisible = await isSheetVisible(\"ACCUEIL\");\n    const notesVisible = await isSheetVisible(\"NOTES\");\n    \n\n    if (!notesVisible) {\n      await unhide(\"NOTES\"); // On affiche NOTES si elle est cachée\n    }\n\n    if (!accueilVisible) {\n      await unhide(\"ACCUEIL\"); // On affiche ACCUEIL si elle est cachée\n    }\n\n    // Masquer toutes les autres feuilles visibles sauf ACCUEIL et NOTES\n    await hideAllSheetsExcept([\"NOTES\",\"ACCUEIL\"]);\n    \n    // Exécution des traitements\n    await tri_Optimise();\n\n    // Déverrouiller les feuilles avant le transfert\n    await setSheetProtection(\"Feuil1\", false, \"Gp4r!74.\");\n    await setSheetProtection(\"RecapTubes\", false, \"Gp4r!74.\");\n    feuillesDeverrouillees = [\"Feuil1\", \"RecapTubes\"]; // Mémoriser les feuilles déverrouillées\n\n    await transfererDonnee();\n    await copierDonneesVersRecapTubes();\n\n    // Si tout s'est bien passé, verrouiller à nouveau\n    await reverrouillerFeuilles(feuillesDeverrouillees);\n    feuillesDeverrouillees = []; // Réinitialiser la liste\n\n    // Succès : bouton vert + icône\n    button.style.backgroundColor = \"#28a745\"; // vert\n    button.textContent = \"✔️ Transfert réalisé avec succès !\";\n\n    // Afficher le message pour passer à l'étape 2\n    showMessage(\"Vous pouvez passer à l'étape 2\");\n\n  } catch (error) {\n    console.error(\"Erreur lors du transfert :\", error);\n\n    // En cas d'erreur, verrouiller les feuilles qui avaient été déverrouillées\n    if (feuillesDeverrouillees.length > 0) {\n      await reverrouillerFeuilles(feuillesDeverrouillees).catch(e => {\n        console.error(\"Erreur lors du reverrouillage d'urgence :\", e);\n      });\n    }\n\n    // Échec : bouton rouge + icône\n    button.style.backgroundColor = \"#dc3545\"; // rouge\n    button.textContent = \"❌ Erreur lors du transfert\";\n\n  } finally {\n    // Réactivation du bouton après traitement\n    setTimeout(() => {\n      button.disabled = false;\n      button.style.backgroundColor = originalBgColor;\n      button.textContent = originalText;\n    }, 3000); // Attend 3 secondes avant de restaurer\n  }\n}\n\n// Fonction pour reverrouiller plusieurs feuilles\nasync function reverrouillerFeuilles(feuilles) {\n  for (const feuille of feuilles) {\n    try {\n      await setSheetProtection(feuille, true, \"Gp4r!74.\");\n    } catch (erreur) {\n      console.error(`Échec du verrouillage de ${feuille}:`, erreur);\n      // Continuer avec les autres feuilles même si une échoue\n    }\n  }\n}\n\n// Fonction pour gérer la protection des feuilles\nasync function setSheetProtection(sheetName, protect, password) {\n  await Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(sheetName);\n    if (protect) {\n      sheet.protection.protect({\n        allowAutoFilter: true,\n        allowDeleteRows: false,\n        allowFormatCells: false,\n        allowFormatColumns: false,\n        allowFormatRows: false,\n        allowInsertColumns: false,\n        allowInsertRows: false,\n        allowSort: false,\n        selectionMode: \"none\"\n      }, password);\n    } else {\n      sheet.protection.unprotect(password);\n    }\n    await context.sync();\n  });\n}\n\nfunction showMessage(message, duration = 10000) {\n    // Création du conteneur principal avec pseudo-élément pour la transparence\n    const messageDiv = document.createElement(\"div\");\n    messageDiv.style.cssText = `\n        position: fixed;\n        top: 20px;\n        right: 20px;\n        color: white;\n        padding: 12px 40px 12px 20px;\n        border-radius: 6px;\n        z-index: 1000;\n        font-family: 'Segoe UI', system-ui, sans-serif;\n        font-size: 14px;\n        font-weight: 500;\n        box-shadow: 0 4px 12px rgba(0,0,0,0.1);\n        backdrop-filter: blur(6px);\n        border: 1px solid rgba(255,255,255,0.2);\n        animation: fadeIn 0.25s ease-out;\n        cursor: default;\n        max-width: 300px;\n        line-height: 1.5;\n        overflow: hidden;\n    `;\n\n    // Ajout du fond avec opacité séparée\n    const bgDiv = document.createElement(\"div\");\n    bgDiv.style.cssText = `\n        position: absolute;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        background-color: #28a745;\n        opacity: 0.6;\n        z-index: -1;\n    `;\n    messageDiv.appendChild(bgDiv);\n\n    // Contenu du message\n    messageDiv.innerHTML += `\n        <span style=\"\n            display: flex;\n            align-items: center;\n            gap: 8px;\n            position: relative;\n            z-index: 1;\n        \">\n            <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n                <path d=\"M22 11.08V12a10 10 0 1 1-5.93-9.14\"></path>\n                <polyline points=\"22 4 12 14.01 9 11.01\"></polyline>\n            </svg>\n            ${message}\n        </span>\n        <span class=\"close-btn\" style=\"\n            position: absolute;\n            top: 10px;\n            right: 10px;\n            width: 16px;\n            height: 16px;\n            cursor: pointer;\n            opacity: 0.7;\n            transition: opacity 0.2s;\n            z-index: 2;\n        \">&times;</span>\n    `;\n\n    // Animations\n    const style = document.createElement(\"style\");\n    style.textContent = `\n        @keyframes fadeIn {\n            from { opacity: 0; transform: translateY(-15px) scale(0.95); }\n            to { opacity: 1; transform: translateY(0) scale(1); }\n        }\n        @keyframes fadeOut {\n            to { opacity: 0; transform: translateY(-15px) scale(0.95); }\n        }\n    `;\n    document.head.appendChild(style);\n\n    document.body.appendChild(messageDiv);\n\n    // Gestion de la fermeture\n    const closeBtn = messageDiv.querySelector(\".close-btn\");\n    let timeoutId;\n\n    const closeMessage = () => {\n        clearTimeout(timeoutId);\n        messageDiv.style.animation = \"fadeOut 0.2s forwards\";\n        setTimeout(() => {\n            messageDiv.remove();\n            style.remove();\n        }, 200);\n    };\n\n    closeBtn.addEventListener(\"click\", closeMessage);\n    closeBtn.addEventListener(\"mouseenter\", () => closeBtn.style.opacity = \"1\");\n    closeBtn.addEventListener(\"mouseleave\", () => closeBtn.style.opacity = \"0.7\");\n\n    // Fermeture automatique\n    timeoutId = setTimeout(closeMessage, duration);\n}\n\n\nasync function transfererDonnee() {\n  try {\n    await Excel.run(async (context) => {\n      const wb = context.workbook;\n      const wsSource = wb.worksheets.getItem(\"ACCUEIL\");\n      const wsDest = wb.worksheets.getItem(\"Feuil1\");\n\n      // Effacer les anciennes données (colonnes A, B, D, F, G, I, J)\n      const columnsToClear = [\"A\", \"B\", \"D\", \"F\", \"G\", \"I\", \"J\"];\n      for (const col of columnsToClear) {\n        wsDest.getRange(`${col}37:${col}436`).clear();\n      }\n      await context.sync();\n\n      // Fonction pour appliquer le formatage (modifiée pour cibler uniquement la cellule)\n      async function applyFormat(sourceCellAddress, targetCell) {\n        const sourceCell = wsDest.getRange(sourceCellAddress);\n\n        // Copier tout le contenu (y compris le style de texte partiel)\n        await targetCell.copyFrom(sourceCell, Excel.RangeCopyType.all, false, false);\n\n        await context.sync();\n      }\n\n      // Mapping global : base + principale + complémentaire\n      const globalMapping = [\n        // Cellules de base\n        { source: \"D2\", dest: \"C4\" },\n        { source: \"D3\", dest: \"E4\" },\n        { source: \"D4\", dest: \"C6\" },\n        { source: \"D5\", dest: \"C3\" },\n        { source: \"D6\", dest: \"C5\" },\n\n        // Données principales (AD13 → AZ13)\n        { source: \"AD13\", dest: \"C8\" },\n        { source: \"AE13\", dest: \"C10\" },\n        { source: \"AF13\", dest: \"C9\" },\n        { source: \"AG13\", dest: \"C11\" },\n        { source: \"AH13\", dest: \"C12\" },\n        { source: \"AI13\", dest: \"C14\" },\n        { source: \"AJ13\", dest: \"C15\" },\n        { source: \"AK13\", dest: \"C16\" },\n        { source: \"AL13\", dest: \"C17\" },\n        { source: \"AM13\", dest: \"C18\" },\n        { source: \"AN13\", dest: \"C19\" },\n        { source: \"AO13\", dest: \"C20\" },\n        { source: \"AP13\", dest: \"C21\" },\n        { source: \"AQ13\", dest: \"C22\" },\n        { source: \"AR13\", dest: \"C24\" },\n        { source: \"AS13\", dest: \"C25\" },\n        { source: \"AT13\", dest: \"C26\" },\n        { source: \"AU13\", dest: \"C27\" },\n        { source: \"AV13\", dest: \"C28\" },\n        { source: \"AW13\", dest: \"C29\" },\n        { source: \"AX13\", dest: \"C30\" },\n        { source: \"AY13\", dest: \"C31\" },\n        { source: \"AZ13\", dest: \"C32\" },\n\n        // Données complémentaires (BA13 → BI13)\n        { source: \"BA13\", dest: \"D14\" },\n        { source: \"BB13\", dest: \"D15\" },\n        { source: \"BC13\", dest: \"D16\" },\n        { source: \"BD13\", dest: \"D17\" },\n        { source: \"BE13\", dest: \"D18\" },\n        { source: \"BF13\", dest: \"D19\" },\n        { source: \"BG13\", dest: \"D20\" },\n        { source: \"BH13\", dest: \"D21\" },\n        { source: \"BI13\", dest: \"D22\" }\n      ];\n\n      // Charger toutes les plages source\n      const globalSourceRanges = globalMapping.map((m) => wsSource.getRange(m.source));\n      globalSourceRanges.forEach((r) => r.load(\"values\"));\n      await context.sync();\n\n      // Écrire les valeurs dans les plages cibles\n      for (let i = 0; i < globalMapping.length; i++) {\n        wsDest.getRange(globalMapping[i].dest).values = globalSourceRanges[i].values;\n      }\n\n      // Créer un objet pour stocker les positions (A8:A32)\n      const aRange = wsDest.getRange(\"A8:A32\");\n      const bRange = wsDest.getRange(\"B8:B32\");\n      aRange.load(\"text\");\n      bRange.load(\"text\");\n      await context.sync();\n\n      const colPositions = {};\n      for (let i = 0; i < aRange.text.length; i++) {\n        const key = aRange.text[i][0]?.trim() || \"\";\n        if (key) colPositions[key] = i + 8; // Stocke la ligne (8 à 32)\n      }\n\n      // Trouver la dernière ligne source\n      const colA = wsSource.getRange(\"A13:A436\");\n      colA.load(\"values\");\n      await context.sync();\n\n      let lastRow = 13;\n      for (let i = colA.values.length - 1; i >= 0; i--) {\n        if (colA.values[i][0] !== null && colA.values[i][0] !== \"\") {\n          lastRow = 13 + i;\n          break;\n        }\n      }\n\n      if (lastRow < 13) return;\n\n      // Charger les données complètes\n      const fullRange = wsSource.getRange(`A13:I${lastRow}`);\n      fullRange.load(\"values\");\n      await context.sync();\n\n      const rows = fullRange.values;\n      const colDonnees = [];\n\n      for (let i = 0; i < rows.length; i++) {\n        const [a, b, c, d, e, f, g, h, iCol] = rows[i];\n        const typeCaisson = b;\n        let cle = (iCol + \"\").trim();\n\n        if (cle.includes(\"-\")) cle = cle.split(\"-\")[1].trim();\n\n        let pos = 99;\n        let bVal = cle;\n\n        if (colPositions.hasOwnProperty(cle)) {\n          pos = colPositions[cle];\n          bVal = bRange.text[pos - 8][0];\n        }\n\n        // Ajout des données dans l'ordre: Position, B, H, G, F, E, D, A\n        colDonnees.push([pos - 7, bVal, h, g, f, e, d, a]);\n\n        // Traitement spécial pour les caissons avec alcove\n        if (typeCaisson === \"Caisson avec alcove\" && !isNaN(c)) {\n          const valCCR = `CCR${parseFloat(c) / 2}`;\n          if (colPositions[valCCR]) {\n            const posCCR = colPositions[valCCR];\n            const bCCR = bRange.text[posCCR - 8][0];\n            colDonnees.push([posCCR - 7, bCCR, h, g, f, e, d, a]);\n          }\n        }\n\n        // Traitement spécial pour les caissons avec rond\n        if (typeCaisson === \"Caisson avec rond\" && !isNaN(c)) {\n          const valKR = `KR${parseFloat(c) / 2}`;\n          if (colPositions[valKR]) {\n            const posKR = colPositions[valKR];\n            const bKR = bRange.text[posKR - 8][0];\n            colDonnees.push([posKR - 7, bKR, h, c, f, c, d, a]);\n          }\n        }\n      }\n\n      // Trier les données par position (colonne 0)\n      colDonnees.sort((a, b) => a[0] - b[0]);\n\n      // Écriture finale (A37:Hn) avec formatage\n      for (let i = 0; i < colDonnees.length; i++) {\n        const destRow = 37 + i;\n        const currentData = colDonnees[i];\n\n        // Écrire les valeurs\n        wsDest.getRange(`A${destRow}`).values = [[currentData[7]]];\n        wsDest.getRange(`B${destRow}`).values = [[currentData[1]]];\n        wsDest.getRange(`J${destRow}`).values = [[currentData[2]]];\n        wsDest.getRange(`I${destRow}`).values = [[currentData[3]]];\n        wsDest.getRange(`G${destRow}`).values = [[currentData[4]]];\n        wsDest.getRange(`F${destRow}`).values = [[currentData[5]]];\n        wsDest.getRange(`D${destRow}`).values = [[currentData[6]]];\n\n        // Appliquer le format uniquement sur colonne B si correspondance trouvée\n        if (currentData[0] !== 99) {\n          const sourceRow = currentData[0] + 7;\n          await applyFormat(`B${sourceRow}`, wsDest.getRange(`B${destRow}`));\n        }\n      }\n\n      await context.sync();\n    });\n  } catch (error) {\n    console.error(\"Erreur :\", error);\n    if (error.debugInfo) console.error(\"Détails :\", error.debugInfo);\n  }\n}\n\n\nasync function copierDonneesVersRecapTubes() {\n  await Excel.run(async (context) => {\n    const feuilleSource = context.workbook.worksheets.getItem(\"Feuil1\");\n    const feuilleDestination = context.workbook.worksheets.getItem(\"RecapTubes\");\n\n    // Sélectionne la plage B37:B170 de la feuille source\n    const plageSource = feuilleSource.getRange(\"B37:B170\");\n    plageSource.load(\"values\"); // Charger les valeurs\n\n    await context.sync();\n\n    // Colle les données à partir de la cellule B14 sur la feuille \"RecapTubes\"\n    const plageDestination = feuilleDestination.getRange(\"B14\").getResizedRange(133, 0); // 134 lignes\n    \n    // Copier tout le contenu (valeurs + mise en forme) comme dans transfererDonnee()\n    await plageDestination.copyFrom(\n      plageSource, \n      Excel.RangeCopyType.all, // Copie tout (valeurs, format, formules, etc.)\n      false, // Pas de référence spatiale\n      false  // Pas de référence absolue\n    );\n\n    await context.sync();\n  });\n}\n\n\nfunction createTooltipElement() {\n  tooltipElement = document.createElement(\"div\");\n  tooltipElement.className = \"canvas-tooltip\";\n  document.getElementById(\"drawing-area\").appendChild(tooltipElement);\n}\n\nfunction showError(message) {\n  const errorDiv = document.getElementById(\"error-message\");\n  if (errorDiv) {\n    errorDiv.textContent = message;\n    errorDiv.style.display = \"block\";\n  }\n}\n\nfunction initInteractiveCanvas() {\n  const container = document.getElementById(\"drawing-area\");\n  if (!container) {\n    console.error(\"Element 'drawing-area' non trouvé\");\n    return;\n  }\n\n  // Recréer complètement le canvas\n  container.innerHTML = \"\";\n  canvas = document.createElement(\"canvas\");\n  if (isPdfExportMode) {\n    canvas.width = 1020;\n    canvas.height = 700;\n  } else {\n    canvas.width = container.offsetWidth;\n    canvas.height = container.offsetHeight;\n  }\n  container.appendChild(canvas);\n\n  ctx = canvas.getContext(\"2d\");\n  canvas.style.cursor = \"grab\";\n\n  // Réinitialiser les événements\n  canvas.removeEventListener(\"wheel\", handleWheel);\n  canvas.removeEventListener(\"mousedown\", startDrag);\n  canvas.removeEventListener(\"mousemove\", handleHover);\n  canvas.removeEventListener(\"click\", handleClick);\n  canvas.removeEventListener(\"mouseup\", endDrag);\n  canvas.removeEventListener(\"mouseleave\", endDrag);\n\n  // Nouveaux événements\n  canvas.addEventListener(\"wheel\", handleWheel);\n  canvas.addEventListener(\"mousedown\", (e) => {\n    startDrag(e);\n    e.preventDefault();\n  });\n  canvas.addEventListener(\"mousemove\", (e) => {\n    if (isDragging) {\n      drag(e);\n    } else {\n      handleHover(e);\n    }\n  });\n  canvas.addEventListener(\"click\", handleClick);\n  canvas.addEventListener(\"mouseup\", endDrag);\n  canvas.addEventListener(\"mouseleave\", endDrag);\n\n  // Centrer la vue et forcer le rendu\n  centerView();\n  isInitialized = true;\n  drawAllShapes();\n}\n\nfunction resetView() {\n  // Réinitialiser toutes les variables\n  zoom = 1;\n  panX = 0;\n  panY = 0;\n  hoveredItem = null;\n  selectedItem = null;\n  drillingPoints = [];\n  lastSelectedIndex = 0;\n  selectionCycle = [];\n  currentData = null;\n  isInitialized = false;\n\n  // Réinitialiser le bouton\n  const button = document.getElementById(\"generate-recenter-btn\");\n  button.textContent = \"Générer le plan 2D\";\n  button.style.backgroundColor = \"#0078d7\"; // Bleu\n\n  // Réinitialiser le canvas\n  initEmptyCanvas();\n\n  // Cacher le tooltip et les erreurs\n  if (tooltipElement) {\n    tooltipElement.style.display = \"none\";\n  }\n\n  const errorDiv = document.getElementById(\"error-message\");\n  if (errorDiv) {\n    errorDiv.style.display = \"none\";\n    errorDiv.textContent = \"\";\n  }\n}\n\nfunction centerView() {\n  if (!currentData) return;\n\n  let minX = Infinity,\n    maxX = -Infinity,\n    minY = Infinity,\n    maxY = -Infinity;\n  const scale = 2;\n  const yOffset = canvas.height - 100;\n\n  for (let i = 0; i < currentData.shapes.length; i++) {\n    if (!currentData.shapes[i]) continue;\n\n    const centerX = parseFloat(currentData.centersX[i]) * scale + 50;\n    const centerY = yOffset - parseFloat(currentData.centersY[i]) * scale;\n    const width = parseFloat(currentData.widths[i]) * scale;\n    const height = parseFloat(currentData.heights[i]) * scale;\n\n    minX = Math.min(minX, centerX - width / 2);\n    maxX = Math.max(maxX, centerX + width / 2);\n    minY = Math.min(minY, centerY - height / 2);\n    maxY = Math.max(maxY, centerY + height / 2);\n  }\n\n  const drawingWidth = maxX - minX;\n  const drawingHeight = maxY - minY;\n\n  zoom = Math.min(canvas.width / (drawingWidth * 1.1), canvas.height / (drawingHeight * 1.1));\n\n  panX = (canvas.width - drawingWidth * zoom) / 2 - minX * zoom;\n  panY = (canvas.height - drawingHeight * zoom) / 2 - minY * zoom;\n}\n\nfunction drawDrillingPoint(x, y, isHovered = false, isSelected = false) {\n  const baseSize = 5 / zoom;\n  const size = isSelected ? baseSize * 1.8 : isHovered ? baseSize * 1.4 : baseSize;\n\n  ctx.beginPath();\n  ctx.arc(x, y, size, 0, Math.PI * 2);\n  ctx.fillStyle = isSelected ? \"#cc0000\" : isHovered ? \"#ff3333\" : \"red\";\n  ctx.fill();\n  ctx.strokeStyle = \"#fff\";\n  ctx.lineWidth = 0.5 / zoom;\n  ctx.stroke();\n}\n\nfunction drawPointLabel(ctx, text, x, y) {\n  ctx.save();\n  ctx.font = `${Math.max(8, 10 / zoom)}px Arial`;\n  ctx.fillStyle = \"#cc0000\";\n  ctx.textAlign = \"center\";\n  ctx.fillText(text, x, y - 10 / zoom);\n  ctx.restore();\n}\n\nfunction handleHover(e) {\n  if (!isInitialized || isDragging) return; // Ignore si déplacement en cours\n\n  const mousePos = getMousePos(canvas, e);\n  const pos = screenToCanvas(mousePos.x, mousePos.y);\n\n  // Vérifier d'abord les points de perçage\n  let foundItem = checkDrillingPointsHit(pos);\n\n  // Si aucun point trouvé, vérifier les formes\n  if (!foundItem) {\n    foundItem = checkShapesHit(pos);\n  }\n\n  // Mettre à jour l'élément survolé seulement si différent\n  if (!hoveredItem || !foundItem || hoveredItem.type !== foundItem.type || hoveredItem.index !== foundItem.index) {\n    hoveredItem = foundItem;\n    drawAllShapes();\n  }\n\n  updateTooltip(e, foundItem);\n}\n\nfunction checkDrillingPointsHit(pos) {\n  if (!drillingPoints || drillingPoints.length === 0) return null;\n\n  const hitRadius = 10 / zoom;\n\n  // Parcourir en sens inverse pour prioriser les derniers points ajoutés\n  for (let i = drillingPoints.length - 1; i >= 0; i--) {\n    const point = drillingPoints[i];\n    if (!point) continue;\n\n    const dist = Math.sqrt(Math.pow(pos.x - point.x, 2) + Math.pow(pos.y - point.y, 2));\n    if (dist < hitRadius) {\n      return { type: \"drilling\", index: i };\n    }\n  }\n  return null;\n}\n\nfunction checkShapesHit(pos) {\n  const scale = 2;\n  const maxY = canvas.height - 100;\n  const hitShapes = [];\n\n  for (let i = 0; i < currentData.shapes.length; i++) {\n    if (!currentData.shapes[i]) continue;\n\n    const centerX = parseFloat(currentData.centersX[i]) * scale + 50;\n    const centerY = maxY - parseFloat(currentData.centersY[i]) * scale;\n    const width = parseFloat(currentData.widths[i]) * scale;\n    const height = parseFloat(currentData.heights[i]) * scale;\n    const orientation = currentData.orientations[i] || \"\";\n\n    if (isPointInShape(pos, currentData.shapes[i], centerX, centerY, width, height, orientation)) {\n      hitShapes.push({\n        type: \"shape\",\n        index: i,\n        shapeType: currentData.shapes[i],\n        // Nouveau: on stocke les dimensions pour le calcul de priorité\n        width: width,\n        height: height,\n        centerX: centerX,\n        centerY: centerY\n      });\n    }\n  }\n\n  // Tri des formes touchées selon de nouvelles règles de priorité\n  return (\n    hitShapes.sort((a, b) => {\n      // 1. Priorité aux formes les plus petites (plus précises)\n      const areaA = a.width * a.height;\n      const areaB = b.width * b.height;\n\n      // 2. Si les aires sont similaires, priorité aux CCR\n      if (Math.abs(areaA - areaB) < 100) {\n        const isCCRA = a.shapeType.includes(\"CCR\");\n        const isCCRB = b.shapeType.includes(\"CCR\");\n        if (isCCRA && !isCCRB) return -1;\n        if (!isCCRA && isCCRB) return 1;\n      }\n\n      // 3. Par défaut, la plus petite d'abord\n      return areaA - areaB;\n    })[0] || null\n  );\n}\n\nfunction getShapePriority(shapeType) {\n  if (shapeType.includes(\"CCR\")) return 3;\n  if (shapeType.includes(\"Kit Rond\")) return 2;\n  return 1; // Rectangles et autres\n}\n\nfunction isPointInShape(pos, shapeType, centerX, centerY, width, height, orientation) {\n  // Nouveau: marge pour la détection du contour\n  const margin = 2 / zoom; // Ajustable selon le zoom\n\n  // Rectangle ou Kit de base\n  if (shapeType.includes(\"Kit de base\") || shapeType.includes(\"Kit contigu\") || shapeType.includes(\"Kit spécial\")) {\n    return isPointInRectWithMargin(pos, centerX, centerY, width, height, margin);\n  }\n  // Cercle\n  else if (shapeType.includes(\"Kit Rond\")) {\n    return isPointInCircleWithMargin(pos, centerX, centerY, width / 2, margin);\n  }\n  // CCR\n  else if (shapeType.includes(\"CCR\")) {\n    return isPointInCCRWithMargin(pos, centerX, centerY, width, height, orientation, margin);\n  }\n\n  return false;\n}\n\n// Nouvelle fonction helper pour les rectangles avec marge\nfunction isPointInRectWithMargin(pos, centerX, centerY, width, height, margin) {\n  const left = centerX - width / 2 - margin;\n  const right = centerX + width / 2 + margin;\n  const top = centerY - height / 2 - margin;\n  const bottom = centerY + height / 2 + margin;\n\n  return pos.x >= left && pos.x <= right && pos.y >= top && pos.y <= bottom;\n}\n\n// Nouvelle fonction helper pour les cercles avec marge\nfunction isPointInCircleWithMargin(pos, centerX, centerY, radius, margin) {\n  const dx = pos.x - centerX;\n  const dy = pos.y - centerY;\n  const distance = Math.sqrt(dx * dx + dy * dy);\n\n  return distance <= radius + margin;\n}\n\nfunction isPointInCCRWithMargin(pos, centerX, centerY, width, height, orientation, margin) {\n  const Ecart45Points = 5 * 2;\n  const radius = width / 2;\n  let relativeX = pos.x - centerX;\n  let relativeY = pos.y - centerY;\n\n  // Rotation inverse selon l'orientation\n  if (orientation.includes(\"Droite\")) {\n    [relativeX, relativeY] = [relativeY, -relativeX];\n  } else if (orientation.includes(\"Gauche\")) {\n    [relativeX, relativeY] = [-relativeY, relativeX];\n  } else if (orientation.includes(\"Bas\")) {\n    [relativeX, relativeY] = [-relativeX, -relativeY];\n  }\n\n  const isDouble = orientation.includes(\"Haut_et_bas\") || orientation.includes(\"Droite_Gauche\");\n  const topPartY = -height / 2 + radius + Ecart45Points;\n  const bottomPartY = height / 2 - radius - Ecart45Points;\n\n  // Vérifier la partie supérieure (demi-cercle)\n  if (relativeY < topPartY + margin) {\n    const dx = relativeX;\n    const dy = relativeY - topPartY;\n    const distance = Math.sqrt(dx * dx + dy * dy);\n    // Vérifier si on est dans le demi-cercle OU près du contour\n    return (\n      dx * dx + dy * dy <= (radius + margin) * (radius + margin) &&\n      relativeX >= -radius - margin &&\n      relativeX <= radius + margin\n    );\n  }\n\n  // Pour les CCR doubles, vérifier la partie inférieure\n  if (isDouble && relativeY > bottomPartY - margin) {\n    const dx = relativeX;\n    const dy = relativeY - bottomPartY;\n    const distance = Math.sqrt(dx * dx + dy * dy);\n    return (\n      dx * dx + dy * dy <= (radius + margin) * (radius + margin) &&\n      relativeX >= -radius - margin &&\n      relativeX <= radius + margin\n    );\n  }\n\n  // Vérifier la partie centrale rectangulaire\n  const inCentralRect =\n    relativeX >= -radius - margin &&\n    relativeX <= radius + margin &&\n    relativeY >= topPartY - margin &&\n    relativeY <= (isDouble ? bottomPartY + margin : height / 2 + margin);\n\n  // Vérifier si on est près des contours verticaux\n  const nearVerticalBorder =\n    (Math.abs(relativeX + radius) <= margin || Math.abs(relativeX - radius) <= margin) &&\n    relativeY >= topPartY - margin &&\n    relativeY <= (isDouble ? bottomPartY + margin : height / 2 + margin);\n\n  return inCentralRect || nearVerticalBorder;\n}\n\nfunction calculateShapeArea(width, height, shapeType) {\n  if (shapeType.includes(\"Kit Rond\")) {\n    return Math.PI * Math.pow(width / 2, 2);\n  } else if (shapeType.includes(\"CCR\")) {\n    // Pour les CCR, seule une partie est occupée (demi-cercles + rectangle)\n    // On réduit artificiellement l'aire pour prioriser leur sélection\n    return width * height * 0.3; // 30% de l'aire du rectangle englobant\n  }\n  return width * height;\n}\n\nfunction handleClick(e) {\n  if (!isInitialized || isDragging || !canvas) return; // Annule si déplacement en cours\n\n  const mousePos = getMousePos(canvas, e);\n  const pos = screenToCanvas(mousePos.x, mousePos.y);\n\n  // Vérifier d'abord les points de perçage\n  const clickedDrilling = checkDrillingPointsHit(pos);\n  if (clickedDrilling) {\n    selectedItem = clickedDrilling;\n    selectionCycle = [];\n    drawAllShapes();\n    showTooltip(e, selectedItem);\n    return;\n  }\n\n  // Ensuite vérifier les formes\n  const clickedShape = checkShapesHit(pos);\n  if (!clickedShape) {\n    selectedItem = null;\n    selectionCycle = [];\n    drawAllShapes();\n    hideTooltip();\n    return;\n  }\n\n  // Si la forme cliquée est différente de la précédente, réinitialiser le cycle\n  if (!selectedItem || selectedItem.type !== clickedShape.type || selectedItem.index !== clickedShape.index) {\n    selectionCycle = getAllShapesAtPosition(pos);\n    lastSelectedIndex = 0;\n    selectedItem = clickedShape;\n  }\n  // Sinon, faire tourner le cycle\n  else {\n    lastSelectedIndex = (lastSelectedIndex + 1) % selectionCycle.length;\n    selectedItem = selectionCycle[lastSelectedIndex];\n  }\n\n  drawAllShapes();\n  showTooltip(e, selectedItem);\n}\n\nfunction getAllShapesAtPosition(pos) {\n  const scale = 2;\n  const maxY = canvas.height - 100;\n  const hitShapes = [];\n\n  for (let i = 0; i < currentData.shapes.length; i++) {\n    if (!currentData.shapes[i]) continue;\n\n    const centerX = parseFloat(currentData.centersX[i]) * scale + 50;\n    const centerY = maxY - parseFloat(currentData.centersY[i]) * scale;\n    const width = parseFloat(currentData.widths[i]) * scale;\n    const height = parseFloat(currentData.heights[i]) * scale;\n\n    if (isPointInShape(pos, currentData.shapes[i], centerX, centerY, width, height, currentData.orientations[i])) {\n      hitShapes.push({\n        type: \"shape\",\n        index: i,\n        shapeType: currentData.shapes[i],\n        priority: getShapePriority(currentData.shapes[i]),\n        area: calculateShapeArea(width, height, currentData.shapes[i])\n      });\n    }\n  }\n\n  // Tri identique à checkShapesHit\n  return hitShapes.sort((a, b) => {\n    // Priorité la plus haute d'abord\n    if (b.priority !== a.priority) return b.priority - a.priority;\n    // Puis plus petite aire d'abord\n    return a.area - b.area;\n  });\n}\n\nfunction updateTooltip(e, item) {\n  if (!tooltipElement || !item) {\n    hideTooltip();\n    return;\n  }\n\n  const mousePos = getMousePos(canvas, e);\n  tooltipElement.style.left = `${mousePos.x + 15}px`;\n  tooltipElement.style.top = `${mousePos.y + 15}px`;\n\n  if (item.type === \"drilling\") {\n    const point = drillingPoints[item.index];\n    const scale = 2;\n    const maxY = canvas.height - 100;\n    const x = (point.x - 50) / scale;\n    const y = (maxY - point.y) / scale;\n    tooltipElement.textContent = `Point de perçage (${x.toFixed(1)}, ${y.toFixed(1)})`;\n    tooltipElement.style.display = \"block\";\n  } else if (item.type === \"shape\") {\n    tooltipElement.textContent = currentData.shapes[item.index];\n    tooltipElement.style.display = \"block\";\n  }\n}\n\nfunction showTooltip(e, item) {\n  if (!tooltipElement) return;\n  updateTooltip(e, item);\n  tooltipElement.classList.add(\"active\");\n}\n\nfunction hideTooltip() {\n  if (!tooltipElement) return;\n  tooltipElement.style.display = \"none\";\n  tooltipElement.classList.remove(\"active\");\n}\n\nfunction getMousePos(canvas, evt) {\n  if (!canvas) return { x: 0, y: 0 };\n  const rect = canvas.getBoundingClientRect();\n  return {\n    x: evt.clientX - rect.left,\n    y: evt.clientY - rect.top\n  };\n}\n\nfunction screenToCanvas(x, y) {\n  return {\n    x: (x - panX) / zoom,\n    y: (y - panY) / zoom\n  };\n}\n\n// Fonctions pour les points de perçage\nasync function placeDrillingPoints() {\n  try {\n    if (!isInitialized || !currentData) {\n      showError(\"Veuillez d'abord générer le plan 2D en cliquant sur 'Générer le plan 2D'\");\n      return;\n    }\n\n    const button = document.getElementById(\"place-drilling-btn\");\n    if (!button) throw new Error(\"Bouton non trouvé\");\n\n    button.disabled = true;\n    button.textContent = \"Chargement...\";\n\n    const drillingData = await getDrillingDataFromExcel();\n    drawDrillingPoints(drillingData);\n\n    button.textContent = \"Placer les points\";\n    button.disabled = false;\n  } catch (error) {\n    console.error(\"Erreur:\", error);\n    const button = document.getElementById(\"place-drilling-btn\");\n    if (button) {\n      button.textContent = \"Erreur - Réessayer\";\n      button.disabled = false;\n    }\n    showError(\"Erreur lors du placement des points\");\n  }\n}\n\nasync function getDrillingDataFromExcel() {\n  return Excel.run(async (context) => {\n    const sourceSheet = context.workbook.worksheets.getItem(\"Feuil2\");\n    const reportSheet = context.workbook.worksheets.getItem(\"A reporter\");\n\n    const typeRange = sourceSheet.getRange(\"A20:A200\");\n    const kbRange = sourceSheet.getRange(\"B20:I200\");\n    const ccrRange = reportSheet.getRange(\"B5:AG200\");\n    const rondRange = sourceSheet.getRange(\"AR20:BW200\");\n\n    typeRange.load(\"values\");\n    kbRange.load(\"values\");\n    ccrRange.load(\"values\");\n    rondRange.load(\"values\");\n\n    await context.sync();\n\n    return {\n      types: typeRange.values,\n      kbPoints: kbRange.values,\n      ccrPoints: ccrRange.values,\n      rondPoints: rondRange.values\n    };\n  });\n}\n\nfunction drawDrillingPoints(data) {\n  if (!canvas || !ctx || !currentData) {\n    console.error(\"Le canvas n'est pas initialisé\");\n    return;\n  }\n\n  drillingPoints = []; // Réinitialiser les points\n  const scale = 2;\n  const maxY = canvas.height - 100;\n\n  for (let i = 0; i < data.types.length; i++) {\n    if (!data.types[i] || data.types[i][0] === \"\") continue;\n\n    const type = data.types[i][0];\n\n    if (\n      type.includes(\"KB\") ||\n      type.includes(\"KCV\") ||\n      type.includes(\"KCH\") ||\n      type.includes(\"KCVH\") ||\n      type.includes(\"KS3P\") ||\n      type.includes(\"KSDH\")\n    ) {\n      for (let col = 0; col < 8; col += 2) {\n        if (data.kbPoints[i] && data.kbPoints[i][col] !== \"\") {\n          const x = parseFloat(data.kbPoints[i][col]) * scale + 50;\n          const y = maxY - parseFloat(data.kbPoints[i][col + 1]) * scale;\n          drillingPoints.push({ x, y });\n        }\n      }\n    } else if (type.includes(\"CCR\")) {\n      for (let col = 0; col < 32; col += 2) {\n        if (data.ccrPoints[i] && data.ccrPoints[i][col] !== \"\") {\n          const x = parseFloat(data.ccrPoints[i][col]) * scale + 50;\n          const y = maxY - parseFloat(data.ccrPoints[i][col + 1]) * scale;\n          drillingPoints.push({ x, y });\n        }\n      }\n    } else if (type.includes(\"Rond\")) {\n      for (let col = 0; col < 32; col += 2) {\n        if (data.rondPoints[i] && data.rondPoints[i][col] !== \"\") {\n          const x = parseFloat(data.rondPoints[i][col]) * scale + 50;\n          const y = maxY - parseFloat(data.rondPoints[i][col + 1]) * scale;\n          drillingPoints.push({ x, y });\n        }\n      }\n    }\n  }\n\n  // Redessiner tout pour afficher les nouveaux points\n  drawAllShapes();\n}\n\n// Fonctions interactives existantes\nfunction handleWheel(e) {\n  if (!isInitialized || !canvas) return;\n  e.preventDefault();\n  const zoomIntensity = 0.1;\n  const mouseX = e.clientX - canvas.getBoundingClientRect().left;\n  const mouseY = e.clientY - canvas.getBoundingClientRect().top;\n\n  const zoomFactor = e.deltaY < 0 ? 1 + zoomIntensity : 1 - zoomIntensity;\n\n  panX -= mouseX;\n  panY -= mouseY;\n  panX *= zoomFactor;\n  panY *= zoomFactor;\n  panX += mouseX;\n  panY += mouseY;\n\n  zoom *= zoomFactor;\n  drawAllShapes();\n}\n\nfunction startDrag(e) {\n  isDragging = true;\n  lastX = e.clientX;\n  lastY = e.clientY;\n  canvas.style.cursor = \"grabbing\"; // Main fermée\n}\n\nfunction drag(e) {\n  if (!isInitialized || !isDragging || !canvas) return;\n\n  const dx = e.clientX - lastX;\n  const dy = e.clientY - lastY;\n\n  panX += dx;\n  panY += dy;\n\n  lastX = e.clientX;\n  lastY = e.clientY;\n\n  drawAllShapes();\n}\n\nfunction endDrag() {\n  isDragging = false;\n  canvas.style.cursor = \"grab\"; // Main ouverte\n}\n\n// Fonctions de dessin existantes\nfunction drawSemiCircle(ctx, x, y, radius, isUp) {\n  ctx.beginPath();\n  ctx.arc(x, y, radius, Math.PI, isUp ? 0 : 2 * Math.PI, !isUp);\n  ctx.stroke();\n}\n\nfunction drawArc(ctx, x, y, radius, startAngle, endAngle) {\n  ctx.beginPath();\n  ctx.arc(x, y, radius, degToRad(startAngle), degToRad(endAngle), true);\n  ctx.stroke();\n}\n\nfunction degToRad(degrees) {\n  return degrees * (Math.PI / 180);\n}\n\nfunction debugDrawHitAreas() {\n  ctx.save();\n  ctx.strokeStyle = \"rgba(255,0,0,0.3)\";\n  ctx.lineWidth = 1;\n\n  currentData.shapes.forEach((shape, i) => {\n    if (!shape) return;\n\n    const centerX = parseFloat(currentData.centersX[i]) * 2 + 50;\n    const centerY = canvas.height - 100 - parseFloat(currentData.centersY[i]) * 2;\n    const width = parseFloat(currentData.widths[i]) * 2;\n    const height = parseFloat(currentData.heights[i]) * 2;\n\n    if (shape.includes(\"CCR\")) {\n      // Dessiner la zone de hit-test du CCR\n      ctx.beginPath();\n      // ... Logique similaire à isPointInCCRWithMargin ...\n      ctx.stroke();\n    } else {\n      // Dessiner le rectangle englobant\n      ctx.strokeRect(centerX - width / 2, centerY - height / 2, width, height);\n    }\n  });\n\n  ctx.restore();\n}\n"],"names":["_regeneratorRuntime","r","t","e","Object","prototype","n","hasOwnProperty","o","Symbol","i","iterator","a","asyncIterator","u","toStringTag","c","defineProperty","value","enumerable","configurable","writable","h","Generator","create","Error","done","method","arg","delegate","d","f","sent","_sent","dispatchException","abrupt","s","type","Context","call","wrap","GeneratorFunction","GeneratorFunctionPrototype","l","p","getPrototypeOf","y","x","v","g","forEach","_invoke","AsyncIterator","_typeof","resolve","__await","then","return","TypeError","next","w","tryEntries","push","m","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","unshift","pop","values","prev","charAt","slice","stop","rval","complete","finish","catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","canvas","ctx","tooltipElement","appState","currentScreen","zoom","panX","panY","isDragging","lastX","lastY","currentData","drillingPoints","hoveredItem","selectedItem","animationFrameId","lastSelectedIndex","selectionCycle","isInitialized","isPdfExportMode","isFirstClick","lastDataSnapshot","changeDetected","notificationCooldown","hideAllScreens","id","element","document","getElementById","style","display","showScreen","screenName","resetView","initEmptyCanvas","resetProjetComplet","_resetProjetComplet","_callee8","confirmBox","resetBtn","originalBtnText","originalBtnClass","originalBtnColor","feuilleFeuil1Deverrouillee","_context8","textContent","className","backgroundColor","disabled","classList","add","Excel","run","_ref0","_callee7","context","sheets","feuille1","accueilSheet","accueilRange","accueilRangeD2D6","feuille1Sheet","_context7","workbook","worksheets","getItem","load","sync","protection","protected","setSheetProtection","getRange","clear","ClearApplyTo","contents","formats","dataValidation","all","_x19","remove","innerHTML","setTimeout","t0","console","error","t1","retourAccueilEtMasquerAutresFeuilles","_retourAccueilEtMasquerAutresFeuilles","_callee10","_context10","_ref10","_callee1","notesSheet","_iterator2","_step2","sheet","_context1","visibility","activate","_createForOfIteratorHelper","items","err","_x21","showError","concat","message","unhideSheetsExport","_x","_unhideSheetsExport","_callee12","feuillesAAfficher","_context12","Array","isArray","_ref11","_callee11","allSheets","existingSheets","missingSheets","_context11","map","filter","includes","sheetName","warn","_x22","isSheetVisible","_x2","_isSheetVisible","_callee14","isVisible","_context14","_ref12","_callee13","_context13","_x23","hideAllSheetsExcept","_x3","_hideAllSheetsExcept","_callee16","sheetsToKeepVisible","_context16","_ref13","_callee15","sheetToActivate","_iterator3","_step3","_context15","find","_x24","unhide","_ref3","_callee3","_context3","log","_x5","showDataChangeNotification","notification","createElement","head","appendChild","body","closeBtn","querySelector","addEventListener","opacity","transform","parentNode","preparerExportPDF","_preparerExportPDF","_callee17","button","originalText","originalBgColor","feuilleTempExportDeverrouillee","_context17","FeuilleTempExport","exportCanvasToTemps","_exportCanvasToTemps","_callee19","overlay","exportCanvasPlan","exportCtxPlan","imageDataPlan","exportCanvasPoints","exportCtxPoints","imageDataPoints","_context19","cssText","transition","initInteractiveCanvas","generate2DPlanInTaskPane","requestAnimationFrame","width","height","getContext","imageSmoothingEnabled","drawImage","toDataURL","placeDrillingPoints","_ref14","_callee18","sheet3","shapes3","sheet5","shapes5","_context18","shapes","shape","delete","addImage","split","left","top","_x25","_FeuilleTempExport","_callee21","_context21","_ref15","_callee20","feuillesSource","feuilleDest","currentRow","_i","_feuillesSource","nomFeuille","feuilleSource","rangeUtilisee","lastRow","colonneB","blocValide","endRow","j","_context20","getUsedRange","columnWidth","rowCount","Math","min","copierBlocDonnees","getEntireColumn","format","autofitColumns","_x26","OfficeExtension","JSON","stringify","debugInfo","_x8","_x9","_x0","_x1","_x10","_x11","_x12","_copierBlocDonnees","_callee22","sourceSheet","destSheet","enTeteRange","donnees1Range","donnees2Range","sourceEntete","sourceDonnees1","sourceDonnees2","destEntete","destDonnees1","destDonnees2","_context22","copyFrom","RangeCopyType","String","fromCharCode","columnCount","addNumberToShape","num","typeForme","orientation","undefined","suffix","correspondance","typeUpper","toUpperCase","trim","correspondances","label","prefixText","save","fontSize","max","lineHeight","font","availableWidth","prefixWidth","measureText","corrWidth","maxTextWidth","scaleFactor","availableHeight","totalTextHeight","posX","posY","textAlign","textBaseline","radiusVert","rectHeight","radiusHorz","rectLength","margin","fillStyle","fillText","restore","drawAllShapes","cancelAnimationFrame","clearRect","fillRect","translate","scale","maxY","Ecart45Points","_hoveredItem","_selectedItem","numero","numbers","parseFloat","widths","heights","centerX","centersX","centerY","centersY","orientations","isHovered","index","isSelected","strokeStyle","lineWidth","match","beginPath","rect","fill","stroke","drawShapeLabel","ellipse","PI","radius","isDouble","currentWidth","currentHeight","rotate","drawSemiCircle","moveTo","lineTo","point","_hoveredItem2","_selectedItem2","baseSize","size","arc","drawDrillingPoint","text","drawPointLabel","getShapeDataFromExcel","_getShapeDataFromExcel","_callee24","_context24","_ref16","_callee23","dataSheet","shapesRange","widthsRange","centersXRange","heightsRange","centersYRange","orientationsRange","numbersRange","correspondancesRange","_context23","row","item","flat","_x27","OfficeHelpers","UI","notify","_generate2DPlanInTaskPane","_callee25","_button","_context25","container","offsetWidth","offsetHeight","cursor","tri_Optimise","_tri_Optimise","_callee27","_OfficeHelpers$UI","_OfficeHelpers$UI$not","_context27","_ref17","_callee26","sourceRange1","rangeA","rangeI","rangeM","rangeY","combinedValues","_j","destRange","sortColumnIndex","customOrder","stableSortable","finalSortedValues","_context26","originalIndex","sort","b","_customOrder$valA","_customOrder$valB","valA","valB","orderA","orderB","_x28","_calculerMesKits","_callee28","feuillesDeverrouillees","accueilVisible","_context28","transfererDonnee","copierDonneesVersRecapTubes","reverrouillerFeuilles","showMessage","_x13","_reverrouillerFeuilles","_callee29","feuilles","_iterator4","_step4","feuille","_context29","_x14","_x15","_x16","_setSheetProtection","_callee31","protect","password","_context31","_ref18","_callee30","_context30","allowAutoFilter","allowDeleteRows","allowFormatCells","allowFormatColumns","allowFormatRows","allowInsertColumns","allowInsertRows","allowSort","selectionMode","unprotect","_x29","duration","messageDiv","bgDiv","timeoutId","closeMessage","clearTimeout","animation","_transfererDonnee","_callee34","_context34","_ref19","_callee33","wb","wsSource","wsDest","_i2","_columnsToClear","col","applyFormat","_applyFormat","globalMapping","globalSourceRanges","aRange","bRange","colPositions","_i3","_aRange$text$_i3$","key","colA","_i4","fullRange","rows","colDonnees","_i5","_rows$_i","iCol","typeCaisson","cle","pos","bVal","valCCR","posCCR","bCCR","valKR","posKR","bKR","_i6","destRow","_currentData","sourceRow","_context33","_callee32","sourceCellAddress","targetCell","sourceCell","_context32","_x31","_x32","source","dest","_slicedToArray","_x30","_copierDonneesVersRecapTubes","_callee36","_context36","_ref20","_callee35","feuilleDestination","plageSource","plageDestination","_context35","getResizedRange","_x33","errorDiv","removeEventListener","handleWheel","startDrag","handleHover","handleClick","endDrag","preventDefault","dx","clientX","dy","clientY","drag","minX","Infinity","maxX","minY","yOffset","drawingWidth","drawingHeight","centerView","mousePos","getMousePos","screenToCanvas","foundItem","checkDrillingPointsHit","checkShapesHit","updateTooltip","hitRadius","sqrt","pow","hitShapes","isPointInShape","shapeType","areaA","areaB","abs","isCCRA","isCCRB","right","bottom","isPointInRectWithMargin","isPointInCircleWithMargin","relativeX","relativeY","_ref7","_ref8","_ref9","topPartY","bottomPartY","inCentralRect","nearVerticalBorder","isPointInCCRWithMargin","calculateShapeArea","clickedDrilling","showTooltip","clickedShape","hideTooltip","priority","area","getAllShapesAtPosition","toFixed","evt","getBoundingClientRect","_placeDrillingPoints","_callee37","_button2","_context37","getDrillingDataFromExcel","drawDrillingPoints","_getDrillingDataFromExcel","_callee39","_context39","_ref21","_callee38","reportSheet","typeRange","kbRange","ccrRange","rondRange","_context38","types","kbPoints","ccrPoints","rondPoints","_x34","data","mouseX","mouseY","zoomFactor","deltaY","isUp","Office","onReady","_document$getElementB","_ref4","_callee6","range","_context6","setInterval","_callee5","_context5","_ref6","_callee4","currentRange","_context4","_x7","_x6","calculerMesKits","_callee","_context"],"sourceRoot":""}